[{"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/index.js":"1","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/App.js":"2","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/reportWebVitals.js":"3","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/routes.js":"4","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/home.js":"5","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/login.js":"6","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/blog.js":"7","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/signup.js":"8","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js":"9","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/storeImagetemporarily.js":"10","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/create.js":"11","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/apiCall.js":"12","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/logout.js":"13","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/register.js":"14","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/blogList.js":"15","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/listed_Menu/account_Menu.js":"16","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/listed_Menu/past_menu_list.js":"17","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/listed_Menu/semester_subject_menu.js":"18","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/searching/top_menu_search.js":"19","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/content/newsfeed_content.js":"20","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js":"21","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/details/blogDetails.js":"22","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/sharePost/sharePost.js":"23","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/resetPassword/reset_password.js":"24","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/comments.js":"25"},{"size":535,"mtime":1677842054901,"results":"26","hashOfConfig":"27"},{"size":225,"mtime":1678754860252,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1677842054902,"results":"29","hashOfConfig":"27"},{"size":1729,"mtime":1683563906965,"results":"30","hashOfConfig":"27"},{"size":19745,"mtime":1678784463448,"results":"31","hashOfConfig":"27"},{"size":10804,"mtime":1683563944650,"results":"32","hashOfConfig":"27"},{"size":23198,"mtime":1683034264423,"results":"33","hashOfConfig":"27"},{"size":11691,"mtime":1682214354454,"results":"34","hashOfConfig":"27"},{"size":8772,"mtime":1678753848004,"results":"35","hashOfConfig":"27"},{"size":561,"mtime":1678261870538,"results":"36","hashOfConfig":"27"},{"size":6741,"mtime":1678753976612,"results":"37","hashOfConfig":"27"},{"size":99,"mtime":1678282629902,"results":"38","hashOfConfig":"27"},{"size":147,"mtime":1678330427409,"results":"39","hashOfConfig":"27"},{"size":3458,"mtime":1678682054960,"results":"40","hashOfConfig":"27"},{"size":11696,"mtime":1678754194118,"results":"41","hashOfConfig":"27"},{"size":3327,"mtime":1682176535001,"results":"42","hashOfConfig":"27"},{"size":3170,"mtime":1682167734724,"results":"43","hashOfConfig":"27"},{"size":3315,"mtime":1683273267969,"results":"44","hashOfConfig":"27"},{"size":2449,"mtime":1682168309816,"results":"45","hashOfConfig":"27"},{"size":4272,"mtime":1682169739955,"results":"46","hashOfConfig":"27"},{"size":1413,"mtime":1684312405686,"results":"47","hashOfConfig":"27"},{"size":1473,"mtime":1683562924806,"results":"48","hashOfConfig":"27"},{"size":4639,"mtime":1683552366469,"results":"49","hashOfConfig":"27"},{"size":1850,"mtime":1683645805043,"results":"50","hashOfConfig":"27"},{"size":7181,"mtime":1684294850220,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1l9kpes",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":62,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":54,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/index.js",[],[],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/App.js",[],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/reportWebVitals.js",[],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/routes.js",["137"],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/home.js",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],[],"import React, { useState, useEffect } from \"react\";\n\n\nimport { Button } from 'react-bootstrap';\nimport Typography from '@mui/material/Typography';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\n// import Link from '@mui/material/Link';\nimport HomeIcon from '@mui/icons-material/Home';\nimport WhatshotIcon from '@mui/icons-material/Whatshot';\nimport GrainIcon from '@mui/icons-material/Grain';\nimport SignUp from './signup';\nimport {Link, useNavigate} from \"react-router-dom\";\n\n\n\nfunction Home(){\n\n    const [loading, setLoading] = useState(true);\n    const [newBlogTitle, setNewBlogTitle] = useState(\"\");\n    const [newBlogContent, setNewBlogContent] = useState(\"\");\n    const [newBlogAuthorName, setNewBlogAuthorName] = useState(\"\");\n\n    const [blogs, setBlogs] = useState([]);\n    const [selectedBlogId, setSelectedBlogId] = useState(\"\");\n    const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n    const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n    const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n\n    const [newBlogImage, setNewBlogImage] = useState(null);\n    const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n\n    const [imageUrl, setImageUrl] = useState(null);\n\n    const [created_at, setCreatedAt] = useState(\"\");\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const tokenParts = accessToken.split(\".\");\n\n    // Decode the access token payload\n    const payload = JSON.parse(atob(tokenParts[1]));\n\n    // Get the expiration time from the payload\n    const expirationTime = payload.exp;\n\n    // Calculate the remaining time in seconds until the token expires\n    const currentTime = Math.floor(Date.now() / 1000);\n    const remainingTime = expirationTime - currentTime;\n\n    console.log(`The access token will expire in ${remainingTime} seconds.`);\n    useEffect(() => {\n        const fetchBlogs = async () => {\n            try {\n                const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                    },\n                });\n\n                if (response.status === 401) {\n                    console.log(\"token expired and expired time is\", remainingTime);\n\n                    // Access token has expired, use refresh token to get a new access token\n                    const refreshResponse = await fetch(\"http://localhost:8000/api/refresh/\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                            refresh: localStorage.getItem(\"refreshToken\"),\n                        }),\n                    });\n\n                    if (refreshResponse.ok) {\n                        const tokens = await refreshResponse.json();\n                        localStorage.setItem(\"accessToken\", tokens.access);\n                        // Try fetching blogs again with the new access token\n                        const newResponse = await fetch(\"http://localhost:8000/api/blog/list/\", {\n                            headers: {\n                                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                            },\n                        });\n                        const data = await newResponse.json();\n                        setBlogs(data);\n                        setLoading(false);\n                    } else {\n                        throw new Error(\"Refresh token is invalid\");\n                    }\n                } else {\n                    const data = await response.json();\n                    setBlogs(data);\n                    setLoading(false);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchBlogs();\n    }, []);\n\n    const handleCreate = () => {\n        const newBlog = {\n            title: newBlogTitle,\n            content: newBlogContent,\n            authorName: newBlogAuthorName,\n            image: newBlogImage, // Add the image file to the new blog object\n        };\n\n        const formData = new FormData();\n        formData.append(\"title\", newBlog.title);\n        formData.append(\"content\", newBlog.content);\n        formData.append(\"authorName\", newBlog.authorName);\n        if(newBlogImage != null){\n            formData.append('image', newBlogImage);\n        }\n\n        fetch(\"http://localhost:8000/api/blog/create/\", {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            },\n            body: formData, // Use the form data instead of JSON.stringify\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                setBlogs([...blogs, data]);\n                setNewBlogTitle(\"\");\n                setNewBlogContent(\"\");\n                setNewBlogAuthorName(\"\");\n                setNewBlogImage(null); // Reset the image state after submitting the form\n            });\n    };\n\n    const handleDelete = (id) => {\n        if (window.confirm(\"Are you sure you want to delete this post?\")) {\n            fetch(`http://localhost:8000/api/blog/delete/${id}/`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                },\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setBlogs(blogs.filter((blog) => blog.id !== id));\n                    } else {\n                        throw new Error(\"Delete failed\");\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    };\n\n    const handleUpdate = () => {\n        const updatedBlog = {\n            id: selectedBlogId,\n            title: updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle,\n            content: updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent,\n            authorName: updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName,\n        };\n\n        const formData = new FormData();\n        formData.append(\"title\", updatedBlog.title);\n        formData.append(\"content\", updatedBlog.content);\n        formData.append(\"authorName\", updatedBlog.authorName);\n        if(updatedBlogImage != null){\n            formData.append('image', updatedBlogImage);\n        }\n\n        fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n            method: \"PUT\",\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            },\n            body: formData,\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                const index = blogs.findIndex((blog) => blog.id === data.id);\n                const newBlogs = [...blogs];\n                newBlogs[index] = data;\n                setBlogs(newBlogs);\n                setSelectedBlogId(\"\");\n                setUpdatedBlogTitle(undefined);\n                setUpdatedBlogContent(undefined);\n                setUpdatedBlogAuthorName(undefined);\n                setUpdatedBlogImage(null);\n            })\n            .catch((error) => console.error(error));\n    };\n    \n  const navigate = useNavigate();\n\n  const  handleLogout = () => {\n    if (window.confirm(\"Are you sure you want to logout?\")) {\n    // Remove access token and refresh token from local storage\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n\n    // Navigate to the login page\n  \n    navigate('/login');\n  } }\n\n    if (loading) {\n        return <span class=\"loader\"></span>\n    }\n\n    return(\n<div>\n\n\n<div className=\"container\">\n      <header className=\"blog-header py-3\">\n        <div className=\"row flex-nowrap justify-content-between align-items-center\">\n          <div className=\"col-4 pt-1\">\n            <a className=\"text-muted\" href=\"#\">Subscribe</a>\n          </div>\n          <div className=\"col-4 text-center\">\n            <a className=\"blog-header-logo text-dark\" href=\"#\">Large</a>\n          </div>\n          <div className=\"col-4 d-flex justify-content-end align-items-center\">\n            <a className=\"text-muted\" href=\"#\">\n              {/* <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mx-3\"><circle cx=\"10.5\" cy=\"10.5\" r=\"7.5\"></circle><line x1=\"21\" y1=\"21\" x2=\"15.8\" y2=\"15.8\"></line></svg> */}\n            </a>\n            <Link to=\"/signup\"> <a className=\"btn btn-sm btn-outline-secondary\" href=\"#\">Sign up</a> </Link>\n             <a className=\"btn btn-sm btn-outline-secondary\" onClick={handleLogout}>Logout</a> \n          </div>\n        </div>\n      </header>\n\n      <div class=\"nav-scroller py-1 mb-2\">\n\n        <nav className=\"nav d-flex justify-content-between\">\n          <a className=\"p-2 text-muted\" href=\"#\">World</a>\n          <a className=\"p-2 text-muted\" href=\"#\">U.S.</a>\n          <a className=\"p-2 text-muted\" href=\"#\">Technology</a>\n          <a className=\"p-2 text-muted\" href=\"#\">Design</a>\n          <a className=\"p-2 text-muted\" href=\"#\">Culture</a>\n          <a className=\"p-2 text-muted\" href=\"#\">Business</a>\n          <a className=\"p-2 text-muted\" href=\"#\">Politics</a>\n          <a className=\"p-2 text-muted\" href=\"#\">Opinion</a>\n          <a className=\"p-2 text-muted\" href=\"#\">Science</a>\n          <a className=\"p-2 text-muted\" href=\"#\">Health</a>\n          <a className=\"p-2 text-muted\" href=\"#\">Style</a>\n          <a className=\"p-2 text-muted\" href=\"#\">Travel</a>\n        </nav>\n\n      </div>\n\n      <div className=\"jumbotron p-3 p-md-5 text-white rounded bg-dark\">\n\n        <div className=\"col-md-6 px-0\">\n          <h1 className=\"display-4 font-italic\">Title of a longer featured blog post</h1>\n          <p className=\"lead my-3\">Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents.</p>\n          <p className=\"lead mb-0\"><a href=\"#\" class=\"text-white font-weight-bold\">Continue reading...</a></p>\n        </div>\n\n      </div>\n\n      <div className=\"row mb-2\">\n\n        <div className=\"col-md-6\">\n          <div className=\"card flex-md-row mb-4 box-shadow h-md-250\">\n            <div className=\"card-body d-flex flex-column align-items-start\">\n              <strong className=\"d-inline-block mb-2 text-primary\">World</strong>\n              <h3 className=\"mb-0\">\n                <a className=\"text-dark\" href=\"#\">Featured post</a>\n              </h3>\n              <div className=\"mb-1 text-muted\">Nov 12</div>\n              <p className=\"card-text mb-auto\">This is a wider card with supporting text below as a natural lead-in to additional content.</p>\n              <a href=\"#\">Continue reading</a>\n            </div>\n            <img className=\"card-img-right flex-auto d-none d-md-block\" src=\"https://unsplash.it/200\" alt=\"Card image cap\"></img>\n          </div>\n\n        </div>\n\n\n        <div className=\"col-md-6\">\n          <div className=\"card flex-md-row mb-4 box-shadow h-md-250\">\n            <div className=\"card-body d-flex flex-column align-items-start\">\n              <strong className=\"d-inline-block mb-2 text-primary\">World</strong>\n              <h3 className=\"mb-0\">\n                <a className=\"text-dark\" href=\"#\">Featured post</a>\n              </h3>\n              <div className=\"mb-1 text-muted\">Nov 12</div>\n              <p className=\"card-text mb-auto\">This is a wider card with supporting text below as a natural lead-in to additional content.</p>\n              <a href=\"#\">Continue reading</a>\n            </div>\n            <img className=\"card-img-right flex-auto d-none d-md-block\" src=\"https://unsplash.it/200\" alt=\"Card image cap\"></img>\n          </div>\n\n        </div>\n\n\n\n    <main className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 blog-main\">\n          <h3 className=\"pb-3 mb-4 font-italic border-bottom\">\n            From the Firehose\n          </h3>\n\n          <div className=\"blog-post\">\n            <h2 className=\"blog-post-title\">Sample blog post</h2>\n            <p className=\"blog-post-meta\">January 1, 2014 by <a href=\"#\">Mark</a></p>\n\n            <p>This blog post shows a few different types of content that's supported and styled with Bootstrap. Basic typography, images, and code are all supported.</p>\n            <hr></hr>\n            <p>Cum sociis natoque penatibus et magnis <a href=\"#\">dis parturient montes</a>, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.</p>\n            <blockquote>\n              <p>Curabitur blandit tempus porttitor. <strong>Nullam quis risus eget urna mollis</strong> ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n            </blockquote>\n            <p>Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n            <h2>Heading</h2>\n            <p>Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n            <h3>Sub-heading</h3>\n            <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</p>\n            <pre><code>Example code block</code></pre>\n            <p>Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.</p>\n            <h3>Sub-heading</h3>\n            <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p>\n            <ul>\n              <li>Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</li>\n              <li>Donec id elit non mi porta gravida at eget metus.</li>\n              <li>Nulla vitae elit libero, a pharetra augue.</li>\n            </ul>\n            <p>Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.</p>\n            <ol>\n              <li>Vestibulum id ligula porta felis euismod semper.</li>\n              <li>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</li>\n              <li>Maecenas sed diam eget risus varius blandit sit amet non magna.</li>\n            </ol>\n            <p>Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.</p>\n          </div>\n\n          <div className=\"blog-post\">\n            <h2 className=\"blog-post-title\">Another blog post</h2>\n            <p className=\"blog-post-meta\">December 23, 2013 by <a href=\"#\">Jacob</a></p>\n\n            <p>Cum sociis natoque penatibus et magnis <a href=\"#\">dis parturient montes</a>, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.</p>\n            <blockquote>\n              <p>Curabitur blandit tempus porttitor. <strong>Nullam quis risus eget urna mollis</strong> ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n            </blockquote>\n            <p>Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n            <p>Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n          </div>\n\n          <div className=\"blog-post\">\n            <h2 className=\"blog-post-title\">New feature</h2>\n            <p className=\"blog-post-meta\">December 14, 2013 by <a href=\"#\">Chris</a></p>\n\n            <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p>\n            <ul>\n              <li>Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</li>\n              <li>Donec id elit non mi porta gravida at eget metus.</li>\n              <li>Nulla vitae elit libero, a pharetra augue.</li>\n            </ul>\n            <p>Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n            <p>Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.</p>\n          </div>  \n        \n          <nav className=\"blog-pagination\">\n            <a className=\"btn btn-outline-primary\" href=\"#\">Older</a>\n            <a className=\"btn btn-outline-secondary disabled\" href=\"#\">Newer</a>\n          </nav>\n\n        </div>\n\n        <aside className=\"col-md-4 blog-sidebar\">\n          <div className=\"p-3 mb-3 bg-light rounded\">\n            <h4 className=\"font-italic\">About</h4>\n            <p className=\"mb-0\">Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n          </div>\n\n          <div className=\"p-3\">\n            <h4 className=\"font-italic\">Archives</h4>\n            <ol className=\"list-unstyled mb-0\">\n              <li><a href=\"#\">March 2014</a></li>\n              <li><a href=\"#\">February 2014</a></li>\n              <li><a href=\"#\">January 2014</a></li>\n              <li><a href=\"#\">December 2013</a></li>\n              <li><a href=\"#\">November 2013</a></li>\n              <li><a href=\"#\">October 2013</a></li>\n              <li><a href=\"#\">September 2013</a></li>\n              <li><a href=\"#\">August 2013</a></li>\n              <li><a href=\"#\">July 2013</a></li>\n              <li><a href=\"#\">June 2013</a></li>\n              <li><a href=\"#\">May 2013</a></li>\n              <li><a href=\"#\">April 2013</a></li>\n            </ol>\n          </div>\n\n          <div className=\"p-3\">\n            <h4 className=\"font-italic\">Elsewhere</h4>\n            <ol className=\"list-unstyled\">\n              <li><a href=\"#\">GitHub</a></li>\n              <li><a href=\"#\">Twitter</a></li>\n              <li><a href=\"#\">Facebook</a></li>\n            </ol>\n          </div> \n        </aside> \n\n      </div>\n\n    </main>\n\n    <footer className=\"blog-footer\">\n      <p>Blog template built for <a href=\"https://getbootstrap.com/\">Bootstrap</a> by <a href=\"https://twitter.com/mdo\">@mdo</a>.</p>\n      <p>\n        <a href=\"#\">Back to top</a>\n      </p>\n    </footer>\n\n    </div>\n  \n\n    </div>  </div>  \n    )\n}\n\nexport default Home;\n\n\n","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/login.js",["200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218"],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/blog.js",["219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272"],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/signup.js",["273","274","275","276","277","278","279","280","281","282","283","284","285"],[],"import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Login from './login';\nimport { Navigate } from 'react-router-dom';\n\nfunction Signup() {\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [passwordValidation, setPasswordValidation] = useState(\"\");\n    const [emailValidation, setEmailValidation] = useState(\"\");\n    const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n    const [register, setRegister] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [apiError, setApiError] = useState(\"\");\n    const [userErrorMessage,setUserErrorMessage] = useState(\"\");\n    const [usernameExistsError, setUsernameExistsError] = useState(null);\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState('');\n    const [emailExist,setEmailExist] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // added check for empty input fields\n        if(!username || !password || !email || !confirmPassword) {setErrorMsg(\"Please Fill the Input!\")}\n          \n\n        const fetchdata = fetch(\"http://localhost:8000/api/register/\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ username, email, password }),\n            }).then((response) => {\n                response.json().then((data) => {\n                    console.log(data);\n                    if (data.username) {\n                      console.log(data.username);\n                      setErrorMessage(data.username);\n                    } else if (data.email) {\n                      console.log(data.email);\n                      setEmailExist(data.email);\n                    }\n                  }).catch(error => {\n                    console.error(error);\n            });\n\n                if (response.status == 201 || response.ok) {\n                    setRegister(true);\n                    setMessage(\"Successfully signed up! Please wait while you are redirected to the login page...\");\n                    setTimeout(() => {\n                        navigate(\"/login\");\n                    }, 1500);\n                } else if (response.status === 409) {\n                  // setUserErrorMessage(response.message);\n                  setErrorMessage(\"USERNAME EXISTS\");\n                  throw new Error('Username is already taken');\n                } else if(response.status == 400){\n                    // setApiError(\"Bad request! An error occurred while signing up. Please try again.\");\n                }\n                else {\n                  // console.log(response.JSON()); \n                  setApiError(\"Something went wrong!\");\n                }\n            })\n     \n            .catch((error) => {\n                console.error(error);\n                console.log(error.message);\n          \n                \n            });\n    };\n\n    const handleUsernameChange = (event) => {\n\n        setUsername(event.target.value);\n    };\n\n    const handleEmailChange = (event) => {\n      const { value } = event.target;\n      setEmail(value);\n\n      // Email validation using regular expression\n      const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n      (!emailRegex.test(value)) ? setEmailValidation('Please enter a valid email address.') :  setEmailValidation('');\n      setEmail(event.target.value);\n    };\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n        const passwordRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n        event.target.value.length <= 8 && !passwordRegex.test(password) ? setPasswordValidation(\"Password must contain at least 8 characters including 1 uppercase, 1 lowercase, 1 digit and 1 special character\") : setPasswordValidation(\"\");\n    };\n\n    const handleConfirmPasswordChange = (event) => {\n        setConfirmPassword(event.target.value);\n        event.target.value !== password ? setConfirmPwdMsg(\"Passwords do not match\") : setConfirmPwdMsg(\"\");\n    };\n\n    return (\n        <div>\n            {register ? (\n                <div>\n                    <h4>{message}</h4>\n                </div>\n            ) : (\n\n\n                <form onSubmit={handleSubmit} style={{ }}>\n\n<ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n\n<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n\n          <Box  sx={{ mt: 3 }}>\n             <Grid container spacing={2}>\n             \n               <Grid item xs={12} sm={12}>\n               <div className=\"validationError\">\n                  \n                  {errorMsg} </div>\n                 <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n          \n                  label=\"Username\"\n                  autoFocus type=\"text\" id=\"username\" value={username} onChange={handleUsernameChange} placeholder=\"Enter Username\"\n                  />\n\n              </Grid>\n\n              <Grid item xs={12} sm={12}>\n              <div className=\"validationError\">{emailValidation} {errorMsg} {emailExist}  </div>\n                 <TextField\n                  autoComplete=\"given-name\"\n                  name=\"email\"\n                  required\n                  fullWidth\n                  type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Enter Email\"\n                  label=\"Email\"\n                  autoFocus\n                  />\n\n              </Grid>\n\n\n              <Grid item xs={12} sm={12}>\n              <div className=\"validationError\">{passwordValidation && <span>{passwordValidation}</span>} {errorMsg} </div>\n\n                 <TextField\n                  autoComplete=\"given-name\"\n                  name=\"Password\"\n                  required\n                  fullWidth\n         \n                  label=\"Password\"\n                  autoFocus\n                  type=\"password\" id=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Enter Password\"\n                  />\n\n              </Grid>\n              <Grid item xs={12} sm={12}>\n\n              <div className=\"validationError\">{confirmPwdMsg && <span>{confirmPwdMsg}</span>} {errorMsg} </div>\n\n              <TextField\n                  autoComplete=\"given-name\"\n                  name=\"Confirm-Password\"\n                  required\n                  fullWidth\n         \n                  label=\"Confirm-Password\"\n                  autoFocus\n                  type=\"password\" id=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} placeholder=\"Enter Confirm Password\"\n                  />\n\n              </Grid>\n\n              </Grid>\n\n                   \n                 \n                    <div className=\"validationError\">{apiError && <h4>{apiError}</h4>}</div>\n                         <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n                        <Link to=\"/login\"> <a>Already Have an Account? Login </a></Link>\n                   \n\n                        </Box>\n\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n        </Container>\n    \n    </ThemeProvider>\n                </form>\n            )}\n            \n        </div>\n    );\n}\n\nexport default Signup;\n\n\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\n// export default function SignUp() {\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const data = new FormData(event.currentTarget);\n//     console.log({\n//       email: data.get('email'),\n//       password: data.get('password'),\n//     });\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 8,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign up\n//           </Typography>\n//           <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12} sm={12}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"firstName\"\n//                   required\n//                   fullWidth\n//                   id=\"firstName\"\n//                   label=\"Username\"\n//                   autoFocus\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   id=\"email\"\n//                   label=\"Email Address\"\n//                   name=\"email\"\n//                   autoComplete=\"email\"\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"password\"\n//                   label=\"Password\"\n//                   type=\"password\"\n//                   id=\"password\"\n//                   autoComplete=\"new-password\"\n//                 />\n//               </Grid>\n\n//             </Grid>\n//             <Button\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2 }}\n//             >\n//               Sign Up\n//             </Button>\n//             <Grid container justifyContent=\"flex-end\">\n//               <Grid item>\n//                 <Link to=\"/login\" variant=\"body2\">\n//                   Already have an account? Sign in\n//                 </Link>\n//               </Grid>\n//             </Grid>\n//           </Box>\n//         </Box>\n//         <Copyright sx={{ mt: 5 }} />\n//       </Container>\n//     </ThemeProvider>\n  // );\n// }","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Update from \"./update\";\nimport Create from \"./create\";\nimport Logout from \"./logout\";\nimport ImageUploader from \"./storeImagetemporarily\";\nimport Login from \"./login\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction UpdateBlog() {\n    const [loading, setLoading] = useState(true);\n    const [newBlogTitle, setNewBlogTitle] = useState(\"\");\n    const [newBlogContent, setNewBlogContent] = useState(\"\");\n    const [newBlogAuthorName, setNewBlogAuthorName] = useState(\"\");\n\n    const [blogs, setBlogs] = useState([]);\n    const [selectedBlogId, setSelectedBlogId] = useState(\"\");\n    const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n    const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n    const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n\n    const [newBlogImage, setNewBlogImage] = useState(null);\n    const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n\n    const [imageUrl, setImageUrl] = useState(null);\n\n    const [created_at, setCreatedAt] = useState(\"\");\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const tokenParts = accessToken.split(\".\");\n\n    // Decode the access token payload\n    const payload = JSON.parse(atob(tokenParts[1]));\n\n    // Get the expiration time from the payload\n    const expirationTime = payload.exp;\n\n    // Calculate the remaining time in seconds until the token expires\n    const currentTime = Math.floor(Date.now() / 1000);\n    const remainingTime = expirationTime - currentTime;\n\n    console.log(`The access token will expire in ${remainingTime} seconds.`);\n    useEffect(() => {\n        const fetchBlogs = async () => {\n            try {\n                const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                    },\n                });\n\n                if (response.status === 401) {\n                    console.log(\"token expired and expired time is\", remainingTime);\n\n                    // Access token has expired, use refresh token to get a new access token\n                    const refreshResponse = await fetch(\"http://localhost:8000/api/refresh/\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                            refresh: localStorage.getItem(\"refreshToken\"),\n                        }),\n                    });\n\n                    if (refreshResponse.ok) {\n                        const tokens = await refreshResponse.json();\n                        localStorage.setItem(\"accessToken\", tokens.access);\n                        // Try fetching blogs again with the new access token\n                        const newResponse = await fetch(\"http://localhost:8000/api/blog/list/\", {\n                            headers: {\n                                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                            },\n                        });\n                        const data = await newResponse.json();\n                        setBlogs(data);\n                        setLoading(false);\n                    } else {\n                        throw new Error(\"Refresh token is invalid\");\n                    }\n                } else {\n                    const data = await response.json();\n                    setBlogs(data);\n                    setLoading(false);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchBlogs();\n    }, []);\n    \n    const handleUpdate = () => {\n        const updatedBlog = {\n            id: selectedBlogId,\n            title: updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle,\n            content: updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent,\n            authorName: updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName,\n        };\n\n        const formData = new FormData();\n        formData.append(\"title\", updatedBlog.title);\n        formData.append(\"content\", updatedBlog.content);\n        formData.append(\"authorName\", updatedBlog.authorName);\n        if(updatedBlogImage != null){\n            formData.append('image', updatedBlogImage);\n        }\n\n        fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n            method: \"PUT\",\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            },\n            body: formData,\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                const index = blogs.findIndex((blog) => blog.id === data.id);\n                const newBlogs = [...blogs];\n                newBlogs[index] = data;\n                setBlogs(newBlogs);\n                setSelectedBlogId(\"\");\n                setUpdatedBlogTitle(undefined);\n                setUpdatedBlogContent(undefined);\n                setUpdatedBlogAuthorName(undefined);\n                setUpdatedBlogImage(null);\n            })\n            .catch((error) => console.error(error));\n    };\n    \n  const navigate = useNavigate();\n\n  const  handleLogout = () => {\n    if (window.confirm(\"Are you sure you want to logout?\")) {\n    // Remove access token and refresh token from local storage\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n\n    // Navigate to the login page\n  \n    navigate('/login');\n  } }\n\n    if (loading) {\n        return <span class=\"loader\"></span>\n    }\n\n    return (\n\n        <div>\n\n\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" , flexWrap: \"wrap-reverse\" , width: \"100%\", padding: \"0 55px\", margin: \"0 35px\"}}>\n\n        <div style={{ margin: \"0px\", width: \"auto\"}}>\n  \n\n        <button onClick={handleLogout}>Logout</button>\n        <div style={{ position: \"auto\"}}>\n\n\n\n                                    {/* <UpdateBlog/> */}\n                {selectedBlogId !== \"\" && (\n                    <div style={{ width: \"auto\"}}>\n                        <h2>Update Blog \"{blogs.find((blog) => blog.id === selectedBlogId).title}\"</h2>\n\n                        <div>\n                            <label htmlFor=\"blog-title\">Title:</label> <br></br>\n                            <input type=\"text\" id=\"blog-title\" value={updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle} onChange={(e) => setUpdatedBlogTitle(e.target.value)} />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"blog-content\">Content:</label> <br></br>\n                            <textarea id=\"blog-content\" value={updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent} onChange={(e) => setUpdatedBlogContent(e.target.value)} />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"blog-author-name\">Author Name:</label> <br></br>\n                            <input\n                                type=\"text\"\n                                id=\"blog-author-name\"\n                                value={updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName}\n                                onChange={(e) => setUpdatedBlogAuthorName(e.target.value)}\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"updatedBlogImage\">Image:</label>\n                            <img src={`http://localhost:8000${blogs.find((blog) => blog.id === selectedBlogId).image}`} style={{ width: \"50px\", maxWidth: \"100%\" }} />\n                            <input style={{backgroundColor: \"transparent\"}} type=\"file\" id=\"updatedBlogImage\" name=\"updatedBlogImage\" onChange={(event) => setUpdatedBlogImage(event.target.files[0])} />\n                        </div>\n                    \n\n                        <button className=\"update\"  onClick={handleUpdate}>Update Blog</button>\n                        <button className=\"cancel\" onClick={() => setSelectedBlogId(\"\")}>Cancel</button>\n                    </div>\n                )}\n\n               \n        </div>\n        \n        </div>\n        </div>\n        </div>\n    );\n}\nexport default UpdateBlog;","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/storeImagetemporarily.js",["306"],[],"import React, { useState } from 'react';\n\nfunction ImageUploader() {\n  const [image, setImage] = useState(null);\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      setImage(e.target.result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleImageChange} /> <br></br>\n      {image && <img src={image} alt=\"Uploaded Image\" style={{width: \"300px\"}} />}\n    </div>\n  );\n}\n\nexport default ImageUploader;\n","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/create.js",["307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Update from \"./update\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction Create() {\n    const [loading, setLoading] = useState(true);\n    const [newBlogTitle, setNewBlogTitle] = useState(\"\");\n    const [newBlogContent, setNewBlogContent] = useState(\"\");\n    const [newBlogAuthorName, setNewBlogAuthorName] = useState(\"\");\n\n    const [blogs, setBlogs] = useState([]);\n    const [selectedBlogId, setSelectedBlogId] = useState(\"\");\n    const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n    const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n    const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n\n    const [newBlogImage, setNewBlogImage] = useState(null);\n    const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n\n    const [imageUrl, setImageUrl] = useState(null);\n\n    const [created_at, setCreatedAt] = useState(\"\");\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const tokenParts = accessToken.split(\".\");\n\n    // Decode the access token payload\n    const payload = JSON.parse(atob(tokenParts[1]));\n\n    // Get the expiration time from the payload\n    const expirationTime = payload.exp;\n\n    // Calculate the remaining time in seconds until the token expires\n    const currentTime = Math.floor(Date.now() / 1000);\n    const remainingTime = expirationTime - currentTime;\n\n    console.log(`The access token will expire in ${remainingTime} seconds.`);\n    useEffect(() => {\n        const fetchBlogs = async () => {\n            try {\n                const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                    },\n                });\n\n                if (response.status === 401) {\n                    console.log(\"token expired and expired time is\", remainingTime);\n\n                    // Access token has expired, use refresh token to get a new access token\n                    const refreshResponse = await fetch(\"http://localhost:8000/api/refresh/\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                            refresh: localStorage.getItem(\"refreshToken\"),\n                        }),\n                    });\n\n                    if (refreshResponse.ok) {\n                        const tokens = await refreshResponse.json();\n                        localStorage.setItem(\"accessToken\", tokens.access);\n                        // Try fetching blogs again with the new access token\n                        const newResponse = await fetch(\"http://localhost:8000/api/blog/list/\", {\n                            headers: {\n                                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                            },\n                        });\n                        const data = await newResponse.json();\n                        setBlogs(data);\n                        setLoading(false);\n                    } else {\n                        throw new Error(\"Refresh token is invalid\");\n                    }\n                } else {\n                    const data = await response.json();\n                    setBlogs(data);\n                    setLoading(false);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchBlogs();\n    }, []);\n\n    const handleCreate = () => {\n        const newBlog = {\n            title: newBlogTitle,\n            content: newBlogContent,\n            authorName: newBlogAuthorName,\n            image: newBlogImage, // Add the image file to the new blog object\n        };\n\n        const formData = new FormData();\n        formData.append(\"title\", newBlog.title);\n        formData.append(\"content\", newBlog.content);\n        formData.append(\"authorName\", newBlog.authorName);\n        if(newBlogImage != null){\n            formData.append('image', newBlogImage);\n        }\n\n        fetch(\"http://localhost:8000/api/blog/create/\", {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            },\n            body: formData, // Use the form data instead of JSON.stringify\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                setBlogs([...blogs, data]);\n                setNewBlogTitle(\"\");\n                setNewBlogContent(\"\");\n                setNewBlogAuthorName(\"\");\n                setNewBlogImage(null); // Reset the image state after submitting the form\n            });\n    };\n\n  const navigate = useNavigate();\n\n  const  handleLogout = () => {\n    if (window.confirm(\"Are you sure you want to logout?\")) {\n    // Remove access token and refresh token from local storage\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n\n    // Navigate to the login page\n  \n    navigate('/login');\n  } }\n\n    if (loading) {\n        return <span class=\"loader\"></span>\n    }\n\n    return (\n\n      \n\n        <div style={{margin: \"0px\" ,width: \"auto\"}}> \n\n        <button onClick={handleLogout}>Logout</button>\n\n        <div style={{ position: \"auto\"}}>\n        \n\n        <h2>Create New Blog</h2>\n                    <label>\n                        Title: </label><br></br>\n                        <input type=\"text\" value={newBlogTitle} onChange={(event) => setNewBlogTitle(event.target.value)} />\n                   \n                    <br />\n                    <label>\n                        Content: </label> <br></br>\n                        <textarea value={newBlogContent} onChange={(event) => setNewBlogContent(event.target.value)} />\n                   \n                    <br />\n                    <label>\n                        Author Name:    </label>  <br></br>\n                        <input type=\"text\" value={newBlogAuthorName} onChange={(event) => setNewBlogAuthorName(event.target.value)} />\n                 \n\n                    <div>\n                        <label htmlFor=\"newBlogImage\">Image:</label> \n                        <input style={{backgroundColor: \"transparent\"}} type=\"file\" id=\"newBlogImage\" name=\"newBlogImage\" onChange={(event) => setNewBlogImage(event.target.files[0])} />\n                    </div>\n                    <button  className=\"create\" onClick={handleCreate}>Create Blog</button>\n                    </div>\n        </div>\n    );\n}\nexport default Create;\n","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/apiCall.js",["324","325"],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/logout.js",[],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/register.js",["326","327"],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/blogList.js",["328","329","330","331","332","333","334","335","336","337","338","339","340","341"],[],"\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Update from \"./update\";\nimport Create from \"./create\";\nimport Logout from \"./logout\";\nimport ImageUploader from \"./storeImagetemporarily\";\nimport Login from \"./login\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction BlogList() {\n    const [loading, setLoading] = useState(true);\n    const [newBlogTitle, setNewBlogTitle] = useState(\"\");\n    const [newBlogContent, setNewBlogContent] = useState(\"\");\n    const [newBlogAuthorName, setNewBlogAuthorName] = useState(\"\");\n\n    const [blogs, setBlogs] = useState([]);\n    const [selectedBlogId, setSelectedBlogId] = useState(\"\");\n    const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n    const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n    const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n\n    const [newBlogImage, setNewBlogImage] = useState(null);\n    const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n\n    const [imageUrl, setImageUrl] = useState(null);\n\n    const [created_at, setCreatedAt] = useState(\"\");\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const tokenParts = accessToken.split(\".\");\n\n    // Decode the access token payload\n    const payload = JSON.parse(atob(tokenParts[1]));\n\n    // Get the expiration time from the payload\n    const expirationTime = payload.exp;\n\n    // Calculate the remaining time in seconds until the token expires\n    const currentTime = Math.floor(Date.now() / 1000);\n    const remainingTime = expirationTime - currentTime;\n\n    console.log(`The access token will expire in ${remainingTime} seconds.`);\n    useEffect(() => {\n        const fetchBlogs = async () => {\n            try {\n                const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                    },\n                });\n\n                if (response.status === 401) {\n                    console.log(\"token expired and expired time is\", remainingTime);\n\n                    // Access token has expired, use refresh token to get a new access token\n                    const refreshResponse = await fetch(\"http://localhost:8000/api/refresh/\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                            refresh: localStorage.getItem(\"refreshToken\"),\n                        }),\n                    });\n\n                    if (refreshResponse.ok) {\n                        const tokens = await refreshResponse.json();\n                        localStorage.setItem(\"accessToken\", tokens.access);\n                        // Try fetching blogs again with the new access token\n                        const newResponse = await fetch(\"http://localhost:8000/api/blog/list/\", {\n                            headers: {\n                                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                            },\n                        });\n                        const data = await newResponse.json();\n                        setBlogs(data);\n                        setLoading(false);\n                    } else {\n                        throw new Error(\"Refresh token is invalid\");\n                    }\n                } else {\n                    const data = await response.json();\n                    setBlogs(data);\n                    setLoading(false);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchBlogs();\n    }, []);\n\n    const handleCreate = () => {\n        const newBlog = {\n            title: newBlogTitle,\n            content: newBlogContent,\n            authorName: newBlogAuthorName,\n            image: newBlogImage, // Add the image file to the new blog object\n        };\n\n        const formData = new FormData();\n        formData.append(\"title\", newBlog.title);\n        formData.append(\"content\", newBlog.content);\n        formData.append(\"authorName\", newBlog.authorName);\n        if(newBlogImage != null){\n            formData.append('image', newBlogImage);\n        }\n\n        fetch(\"http://localhost:8000/api/blog/create/\", {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            },\n            body: formData, // Use the form data instead of JSON.stringify\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                setBlogs([...blogs, data]);\n                setNewBlogTitle(\"\");\n                setNewBlogContent(\"\");\n                setNewBlogAuthorName(\"\");\n                setNewBlogImage(null); // Reset the image state after submitting the form\n            });\n    };\n\n    const handleDelete = (id) => {\n        if (window.confirm(\"Are you sure you want to delete this post?\")) {\n            fetch(`http://localhost:8000/api/blog/delete/${id}/`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                },\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setBlogs(blogs.filter((blog) => blog.id !== id));\n                    } else {\n                        throw new Error(\"Delete failed\");\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    };\n\n    const handleUpdate = () => {\n        const updatedBlog = {\n            id: selectedBlogId,\n            title: updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle,\n            content: updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent,\n            authorName: updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName,\n        };\n\n        const formData = new FormData();\n        formData.append(\"title\", updatedBlog.title);\n        formData.append(\"content\", updatedBlog.content);\n        formData.append(\"authorName\", updatedBlog.authorName);\n        if(updatedBlogImage != null){\n            formData.append('image', updatedBlogImage);\n        }\n\n        fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n            method: \"PUT\",\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            },\n            body: formData,\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                const index = blogs.findIndex((blog) => blog.id === data.id);\n                const newBlogs = [...blogs];\n                newBlogs[index] = data;\n                setBlogs(newBlogs);\n                setSelectedBlogId(\"\");\n                setUpdatedBlogTitle(undefined);\n                setUpdatedBlogContent(undefined);\n                setUpdatedBlogAuthorName(undefined);\n                setUpdatedBlogImage(null);\n            })\n            .catch((error) => console.error(error));\n    };\n    \n  const navigate = useNavigate();\n\n  const  handleLogout = () => {\n    if (window.confirm(\"Are you sure you want to logout?\")) {\n    // Remove access token and refresh token from local storage\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n\n    // Navigate to the login page\n  \n    navigate('/login');\n  } }\n\n    if (loading) {\n        return <span class=\"loader\"></span>\n    }\n\n    return (\n\n        <div>\n\n\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" , flexWrap: \"wrap-reverse\" , width: \"100%\", padding: \"0 55px\", margin: \"0 35px\"}}>\n\n        <div style={{ margin: \"0px\", width: \"50%\"}}>\n          \n            \n            <div>\n\n\n\n                <h1>Blog List</h1>\n\n                {blogs\n                    .sort((a, b) => b.id - a.id)\n                    .map((blog) => (\n                        <div key={blog.id}>\n                            <h2>{blog.title}</h2>\n                            <img src={`http://localhost:8000${blog.image}`} style={{ width: \"450px\", maxWidth: \"100%\" }} />\n\n                            <p>{blog.content}</p>\n                            <p>Author: {blog.authorName}</p>\n                            <p>Published Date: {blog.created_at}</p>\n                            <p>Updated Date: {blog.updated_at}</p>\n                            {created_at && <p>Blog Created at Standard: {created_at}</p>}\n                        \n                        </div>\n                    ))}\n            </div>\n        </div>\n\n        <div style={{margin: \"0px\" ,width: \"50%\"}}> \n\n        <button onClick={handleLogout}>Logout</button>\n        <div style={{ position: \"fixed\"}}>\n      \n                                    {/* <UpdateBlog/> */}\n                {selectedBlogId !== \"\" && (\n                    <div style={{ width: \"auto\"}}>\n                        <h2>Update Blog \"{blogs.find((blog) => blog.id === selectedBlogId).title}\"</h2>\n\n                        <div>\n                            <label htmlFor=\"blog-title\">Title:</label> <br></br>\n                            <input type=\"text\" id=\"blog-title\" value={updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle} onChange={(e) => setUpdatedBlogTitle(e.target.value)} />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"blog-content\">Content:</label> <br></br>\n                            <textarea id=\"blog-content\" value={updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent} onChange={(e) => setUpdatedBlogContent(e.target.value)} />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"blog-author-name\">Author Name:</label> <br></br>\n                            <input\n                                type=\"text\"\n                                id=\"blog-author-name\"\n                                value={updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName}\n                                onChange={(e) => setUpdatedBlogAuthorName(e.target.value)}\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"updatedBlogImage\">Image:</label>\n                            <img src={`http://localhost:8000${blogs.find((blog) => blog.id === selectedBlogId).image}`} style={{ width: \"50px\", maxWidth: \"100%\" }} />\n                            <input style={{backgroundColor: \"transparent\"}} type=\"file\" id=\"updatedBlogImage\" name=\"updatedBlogImage\" onChange={(event) => setUpdatedBlogImage(event.target.files[0])} />\n                        </div>\n                    \n\n                        <button className=\"update\"  onClick={handleUpdate}>Update Blog</button>\n                        <button className=\"cancel\" onClick={() => setSelectedBlogId(\"\")}>Cancel</button>\n                    </div>\n                )}\n\n               \n        </div>\n        \n        </div>\n        </div>\n        </div>\n    );\n}\nexport default BlogList;\n","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/listed_Menu/account_Menu.js",["342","343","344","345"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport PersonAdd from '@mui/icons-material/PersonAdd';\nimport Settings from '@mui/icons-material/Settings';\nimport Logout from '@mui/icons-material/Logout';\nimport {Link, useNavigate} from \"react-router-dom\";\n\n\n\nexport default function AccountMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const navigate = useNavigate();\n\nconst  handleLogout = () => {\n  if (window.confirm(\"Are you sure you want to logout?\")) {\n  // Remove access token and refresh token from local storage\n  localStorage.removeItem('accessToken');\n  localStorage.removeItem('refreshToken');\n\n  // Navigate to the login page\n\n  navigate('/login');\n} }\n  return (\n    <React.Fragment>\n      <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\n \n        <Tooltip title=\"Account settings\">\n          <IconButton\n            onClick={handleClick}\n            size=\"small\"\n            sx={{ ml: 2 }}\n            aria-controls={open ? 'account-menu' : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? 'true' : undefined}\n          >\n            <Avatar sx={{ width: 40, height: 40 }}>M</Avatar>\n          </IconButton>\n        </Tooltip>\n      </Box>\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n          elevation: 0,\n          sx: {\n            overflow: 'visible',\n            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n            mt: 1.5,\n            '& .MuiAvatar-root': {\n              width: 32,\n              height: 32,\n              ml: -0.5,\n              mr: 1,\n            },\n            '&:before': {\n              content: '\"\"',\n              display: 'block',\n              position: 'absolute',\n              top: 0,\n              right: 14,\n              width: 10,\n              height: 10,\n              bgcolor: 'background.paper',\n              transform: 'translateY(-50%) rotate(45deg)',\n              zIndex: 0,\n            },\n          },\n        }}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n      >\n        <MenuItem onClick={handleClose}>\n          <Avatar /> Profile\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <Avatar /> My account\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n         <Avatar/> Create a New Account\n        </MenuItem>\n        <Divider />\n\n        <MenuItem onClick={handleLogout}>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          Logout\n        </MenuItem>\n      </Menu>\n\n \n    \n    </React.Fragment>\n  );\n}\n","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/listed_Menu/past_menu_list.js",["346","347"],[],"import * as React from 'react';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Collapse from '@mui/material/Collapse';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport DraftsIcon from '@mui/icons-material/Drafts';\nimport SendIcon from '@mui/icons-material/Send';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport StarBorder from '@mui/icons-material/StarBorder';\nimport { Card } from \"@mui/material\";\n\n\n\nexport default function PastNestedList() {\n\n      \n      const [open, setOpen] = React.useState(false);\n      const [open2, setOpen2] = React.useState(false);\n      const [open3, setOpen3] = React.useState(false);\n      \n      const handleClick = () => {\n        setOpen(!open);\n      };\n      \n      \n      const handleClick2 = () => {\n        setOpen2(!open2);\n      };\n      \n      const handleClick3 = () => {\n        setOpen3(!open3);\n      };\n    return(\n<Card sx={{ minWidth: 275 }}>\n<List\nsx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\ncomponent=\"nav\"\naria-labelledby=\"nested-list-subheader\"\nsubheader={\n<ListSubheader component=\"div\" id=\"nested-list-subheader\">\nThird Semester\n</ListSubheader>\n}\n>\n\n\n<ListItemButton onClick={handleClick}>\n<ListItemIcon>\n<InboxIcon />\n</ListItemIcon>\n\n<ListItemText primary=\"Past Questions\" />\n{open ? <ExpandLess /> : <ExpandMore />}\n</ListItemButton>\n<Collapse in={open} timeout=\"auto\" unmountOnExit>\n<List component=\"div\" disablePadding>\n<ListItemButton sx={{ pl: 4 }}>\n<ListItemIcon>\n<StarBorder />\n</ListItemIcon>\n<ListItemText primary=\"Starred\" />\n</ListItemButton>\n\n<ListItemButton sx={{ pl: 4 }}>\n<ListItemIcon>\n<StarBorder />\n</ListItemIcon>\n<ListItemText primary=\"Starred\" />\n</ListItemButton>\n\n</List>\n</Collapse>\n\n<ListItemButton onClick={handleClick2}>\n<ListItemIcon>\n<InboxIcon />\n</ListItemIcon>\n\n<ListItemText primary=\"Past Questions Solutions\" />\n{open2 ? <ExpandLess /> : <ExpandMore />}\n</ListItemButton>\n<Collapse in={open2} timeout=\"auto\" unmountOnExit>\n<List component=\"div\" disablePadding>\n<ListItemButton sx={{ pl: 4 }}>\n<ListItemIcon>\n<StarBorder />\n</ListItemIcon>\n<ListItemText primary=\"Starred\" />\n</ListItemButton>\n\n<ListItemButton sx={{ pl: 4 }}>\n<ListItemIcon>\n<StarBorder />\n</ListItemIcon>\n<ListItemText primary=\"Starred\" />\n</ListItemButton>\n\n</List>\n</Collapse>\n\n<ListItemButton onClick={handleClick3}>\n<ListItemIcon>\n<InboxIcon />\n</ListItemIcon>\n\n<ListItemText primary=\"Past Questions Topics\" />\n{open3 ? <ExpandLess /> : <ExpandMore />}\n</ListItemButton>\n<Collapse in={open3} timeout=\"auto\" unmountOnExit>\n<List component=\"div\" disablePadding>\n<ListItemButton sx={{ pl: 4 }}>\n<ListItemIcon>\n<StarBorder />\n</ListItemIcon>\n<ListItemText primary=\"Starred\" />\n</ListItemButton>\n\n<ListItemButton sx={{ pl: 4 }}>\n<ListItemIcon>\n<StarBorder />\n</ListItemIcon>\n<ListItemText primary=\"Starred\" />\n</ListItemButton>\n\n</List>\n</Collapse>\n</List>\n\n</Card>\n\n    )\n}\n\n","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/listed_Menu/semester_subject_menu.js",["348","349"],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/searching/top_menu_search.js",["350","351","352"],[],"import * as React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(1),\n    width: 'auto',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function SearchAppBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton> */}\n          {/* <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n          >\n            MUI\n          </Typography> */}\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </Search>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/content/newsfeed_content.js",[],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js",["353"],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/details/blogDetails.js",["354"],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/sharePost/sharePost.js",["355","356","357","358","359"],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/resetPassword/reset_password.js",[],[],"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/comments.js",[],[],{"ruleId":"360","severity":1,"message":"361","line":2,"column":8,"nodeType":"362","messageId":"363","endLine":2,"endColumn":16},{"ruleId":"360","severity":1,"message":"364","line":4,"column":10,"nodeType":"362","messageId":"363","endLine":4,"endColumn":16},{"ruleId":"360","severity":1,"message":"365","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":18},{"ruleId":"360","severity":1,"message":"366","line":6,"column":8,"nodeType":"362","messageId":"363","endLine":6,"endColumn":19},{"ruleId":"360","severity":1,"message":"367","line":8,"column":8,"nodeType":"362","messageId":"363","endLine":8,"endColumn":16},{"ruleId":"360","severity":1,"message":"368","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":20},{"ruleId":"360","severity":1,"message":"369","line":10,"column":8,"nodeType":"362","messageId":"363","endLine":10,"endColumn":17},{"ruleId":"360","severity":1,"message":"370","line":11,"column":8,"nodeType":"362","messageId":"363","endLine":11,"endColumn":14},{"ruleId":"360","severity":1,"message":"371","line":32,"column":12,"nodeType":"362","messageId":"363","endLine":32,"endColumn":20},{"ruleId":"360","severity":1,"message":"372","line":32,"column":22,"nodeType":"362","messageId":"363","endLine":32,"endColumn":33},{"ruleId":"360","severity":1,"message":"373","line":34,"column":12,"nodeType":"362","messageId":"363","endLine":34,"endColumn":22},{"ruleId":"360","severity":1,"message":"374","line":34,"column":24,"nodeType":"362","messageId":"363","endLine":34,"endColumn":36},{"ruleId":"375","severity":1,"message":"376","line":98,"column":8,"nodeType":"377","endLine":98,"endColumn":10,"suggestions":"378"},{"ruleId":"360","severity":1,"message":"379","line":100,"column":11,"nodeType":"362","messageId":"363","endLine":100,"endColumn":23},{"ruleId":"360","severity":1,"message":"380","line":133,"column":11,"nodeType":"362","messageId":"363","endLine":133,"endColumn":23},{"ruleId":"360","severity":1,"message":"381","line":155,"column":11,"nodeType":"362","messageId":"363","endLine":155,"endColumn":23},{"ruleId":"382","severity":1,"message":"383","line":218,"column":13,"nodeType":"384","endLine":218,"endColumn":48},{"ruleId":"382","severity":1,"message":"383","line":221,"column":13,"nodeType":"384","endLine":221,"endColumn":64},{"ruleId":"382","severity":1,"message":"383","line":224,"column":13,"nodeType":"384","endLine":224,"endColumn":48},{"ruleId":"382","severity":1,"message":"383","line":227,"column":33,"nodeType":"384","endLine":227,"endColumn":90},{"ruleId":"382","severity":1,"message":"385","line":228,"column":14,"nodeType":"384","endLine":228,"endColumn":85},{"ruleId":"382","severity":1,"message":"383","line":236,"column":11,"nodeType":"384","endLine":236,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":237,"column":11,"nodeType":"384","endLine":237,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":238,"column":11,"nodeType":"384","endLine":238,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":239,"column":11,"nodeType":"384","endLine":239,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":240,"column":11,"nodeType":"384","endLine":240,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":241,"column":11,"nodeType":"384","endLine":241,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":242,"column":11,"nodeType":"384","endLine":242,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":243,"column":11,"nodeType":"384","endLine":243,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":244,"column":11,"nodeType":"384","endLine":244,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":245,"column":11,"nodeType":"384","endLine":245,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":246,"column":11,"nodeType":"384","endLine":246,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":247,"column":11,"nodeType":"384","endLine":247,"endColumn":50},{"ruleId":"382","severity":1,"message":"383","line":257,"column":36,"nodeType":"384","endLine":257,"endColumn":84},{"ruleId":"382","severity":1,"message":"383","line":269,"column":17,"nodeType":"384","endLine":269,"endColumn":51},{"ruleId":"382","severity":1,"message":"383","line":273,"column":15,"nodeType":"384","endLine":273,"endColumn":27},{"ruleId":"386","severity":1,"message":"387","line":275,"column":13,"nodeType":"384","endLine":275,"endColumn":124},{"ruleId":"382","severity":1,"message":"383","line":286,"column":17,"nodeType":"384","endLine":286,"endColumn":51},{"ruleId":"382","severity":1,"message":"383","line":290,"column":15,"nodeType":"384","endLine":290,"endColumn":27},{"ruleId":"386","severity":1,"message":"387","line":292,"column":13,"nodeType":"384","endLine":292,"endColumn":124},{"ruleId":"382","severity":1,"message":"383","line":308,"column":62,"nodeType":"384","endLine":308,"endColumn":74},{"ruleId":"382","severity":1,"message":"383","line":312,"column":55,"nodeType":"384","endLine":312,"endColumn":67},{"ruleId":"382","severity":1,"message":"383","line":341,"column":64,"nodeType":"384","endLine":341,"endColumn":76},{"ruleId":"382","severity":1,"message":"383","line":343,"column":55,"nodeType":"384","endLine":343,"endColumn":67},{"ruleId":"382","severity":1,"message":"383","line":353,"column":64,"nodeType":"384","endLine":353,"endColumn":76},{"ruleId":"382","severity":1,"message":"383","line":366,"column":13,"nodeType":"384","endLine":366,"endColumn":61},{"ruleId":"382","severity":1,"message":"383","line":367,"column":13,"nodeType":"384","endLine":367,"endColumn":72},{"ruleId":"382","severity":1,"message":"383","line":381,"column":19,"nodeType":"384","endLine":381,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":382,"column":19,"nodeType":"384","endLine":382,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":383,"column":19,"nodeType":"384","endLine":383,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":384,"column":19,"nodeType":"384","endLine":384,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":385,"column":19,"nodeType":"384","endLine":385,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":386,"column":19,"nodeType":"384","endLine":386,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":387,"column":19,"nodeType":"384","endLine":387,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":388,"column":19,"nodeType":"384","endLine":388,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":389,"column":19,"nodeType":"384","endLine":389,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":390,"column":19,"nodeType":"384","endLine":390,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":391,"column":19,"nodeType":"384","endLine":391,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":392,"column":19,"nodeType":"384","endLine":392,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":399,"column":19,"nodeType":"384","endLine":399,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":400,"column":19,"nodeType":"384","endLine":400,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":401,"column":19,"nodeType":"384","endLine":401,"endColumn":31},{"ruleId":"382","severity":1,"message":"383","line":413,"column":9,"nodeType":"384","endLine":413,"endColumn":21},{"ruleId":"360","severity":1,"message":"388","line":2,"column":8,"nodeType":"362","messageId":"363","endLine":2,"endColumn":12},{"ruleId":"360","severity":1,"message":"389","line":4,"column":8,"nodeType":"362","messageId":"363","endLine":4,"endColumn":14},{"ruleId":"360","severity":1,"message":"390","line":6,"column":8,"nodeType":"362","messageId":"363","endLine":6,"endColumn":19},{"ruleId":"360","severity":1,"message":"391","line":8,"column":8,"nodeType":"362","messageId":"363","endLine":8,"endColumn":24},{"ruleId":"360","severity":1,"message":"392","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":16},{"ruleId":"360","severity":1,"message":"393","line":12,"column":8,"nodeType":"362","messageId":"363","endLine":12,"endColumn":11},{"ruleId":"360","severity":1,"message":"394","line":13,"column":8,"nodeType":"362","messageId":"363","endLine":13,"endColumn":24},{"ruleId":"360","severity":1,"message":"365","line":14,"column":8,"nodeType":"362","messageId":"363","endLine":14,"endColumn":18},{"ruleId":"360","severity":1,"message":"395","line":15,"column":8,"nodeType":"362","messageId":"363","endLine":15,"endColumn":17},{"ruleId":"360","severity":1,"message":"396","line":16,"column":10,"nodeType":"362","messageId":"363","endLine":16,"endColumn":21},{"ruleId":"360","severity":1,"message":"397","line":16,"column":23,"nodeType":"362","messageId":"363","endLine":16,"endColumn":36},{"ruleId":"360","severity":1,"message":"398","line":24,"column":10,"nodeType":"362","messageId":"363","endLine":24,"endColumn":17},{"ruleId":"360","severity":1,"message":"399","line":24,"column":19,"nodeType":"362","messageId":"363","endLine":24,"endColumn":29},{"ruleId":"400","severity":1,"message":"401","line":64,"column":34,"nodeType":"402","messageId":"403","endLine":64,"endColumn":36},{"ruleId":"400","severity":1,"message":"401","line":69,"column":34,"nodeType":"402","messageId":"403","endLine":69,"endColumn":36},{"ruleId":"400","severity":1,"message":"401","line":74,"column":34,"nodeType":"402","messageId":"403","endLine":74,"endColumn":36},{"ruleId":"400","severity":1,"message":"401","line":79,"column":34,"nodeType":"402","messageId":"403","endLine":79,"endColumn":36},{"ruleId":"400","severity":1,"message":"401","line":85,"column":34,"nodeType":"402","messageId":"403","endLine":85,"endColumn":36},{"ruleId":"400","severity":1,"message":"401","line":89,"column":35,"nodeType":"402","messageId":"403","endLine":89,"endColumn":37},{"ruleId":"360","severity":1,"message":"404","line":7,"column":8,"nodeType":"362","messageId":"363","endLine":7,"endColumn":13},{"ruleId":"360","severity":1,"message":"405","line":8,"column":8,"nodeType":"362","messageId":"363","endLine":8,"endColumn":15},{"ruleId":"360","severity":1,"message":"406","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":18},{"ruleId":"360","severity":1,"message":"407","line":11,"column":8,"nodeType":"362","messageId":"363","endLine":11,"endColumn":13},{"ruleId":"360","severity":1,"message":"408","line":13,"column":8,"nodeType":"362","messageId":"363","endLine":13,"endColumn":16},{"ruleId":"360","severity":1,"message":"409","line":14,"column":8,"nodeType":"362","messageId":"363","endLine":14,"endColumn":18},{"ruleId":"360","severity":1,"message":"410","line":15,"column":10,"nodeType":"362","messageId":"363","endLine":15,"endColumn":14},{"ruleId":"360","severity":1,"message":"411","line":19,"column":8,"nodeType":"362","messageId":"363","endLine":19,"endColumn":21},{"ruleId":"360","severity":1,"message":"412","line":20,"column":8,"nodeType":"362","messageId":"363","endLine":20,"endColumn":12},{"ruleId":"360","severity":1,"message":"413","line":21,"column":8,"nodeType":"362","messageId":"363","endLine":21,"endColumn":22},{"ruleId":"360","severity":1,"message":"414","line":22,"column":8,"nodeType":"362","messageId":"363","endLine":22,"endColumn":20},{"ruleId":"360","severity":1,"message":"415","line":23,"column":8,"nodeType":"362","messageId":"363","endLine":23,"endColumn":20},{"ruleId":"360","severity":1,"message":"416","line":24,"column":8,"nodeType":"362","messageId":"363","endLine":24,"endColumn":16},{"ruleId":"360","severity":1,"message":"417","line":25,"column":8,"nodeType":"362","messageId":"363","endLine":25,"endColumn":17},{"ruleId":"360","severity":1,"message":"418","line":26,"column":8,"nodeType":"362","messageId":"363","endLine":26,"endColumn":18},{"ruleId":"360","severity":1,"message":"419","line":27,"column":8,"nodeType":"362","messageId":"363","endLine":27,"endColumn":16},{"ruleId":"360","severity":1,"message":"420","line":28,"column":8,"nodeType":"362","messageId":"363","endLine":28,"endColumn":18},{"ruleId":"360","severity":1,"message":"421","line":29,"column":8,"nodeType":"362","messageId":"363","endLine":29,"endColumn":18},{"ruleId":"360","severity":1,"message":"422","line":30,"column":8,"nodeType":"362","messageId":"363","endLine":30,"endColumn":18},{"ruleId":"360","severity":1,"message":"423","line":33,"column":8,"nodeType":"362","messageId":"363","endLine":33,"endColumn":20},{"ruleId":"360","severity":1,"message":"366","line":37,"column":8,"nodeType":"362","messageId":"363","endLine":37,"endColumn":19},{"ruleId":"360","severity":1,"message":"367","line":39,"column":8,"nodeType":"362","messageId":"363","endLine":39,"endColumn":16},{"ruleId":"360","severity":1,"message":"368","line":40,"column":8,"nodeType":"362","messageId":"363","endLine":40,"endColumn":20},{"ruleId":"360","severity":1,"message":"369","line":41,"column":8,"nodeType":"362","messageId":"363","endLine":41,"endColumn":17},{"ruleId":"360","severity":1,"message":"370","line":42,"column":8,"nodeType":"362","messageId":"363","endLine":42,"endColumn":14},{"ruleId":"360","severity":1,"message":"424","line":43,"column":9,"nodeType":"362","messageId":"363","endLine":43,"endColumn":13},{"ruleId":"360","severity":1,"message":"425","line":45,"column":8,"nodeType":"362","messageId":"363","endLine":45,"endColumn":12},{"ruleId":"360","severity":1,"message":"426","line":47,"column":10,"nodeType":"362","messageId":"363","endLine":47,"endColumn":16},{"ruleId":"360","severity":1,"message":"427","line":48,"column":8,"nodeType":"362","messageId":"363","endLine":48,"endColumn":18},{"ruleId":"360","severity":1,"message":"428","line":48,"column":22,"nodeType":"362","messageId":"363","endLine":48,"endColumn":33},{"ruleId":"360","severity":1,"message":"429","line":48,"column":35,"nodeType":"362","messageId":"363","endLine":48,"endColumn":43},{"ruleId":"360","severity":1,"message":"430","line":50,"column":8,"nodeType":"362","messageId":"363","endLine":50,"endColumn":12},{"ruleId":"360","severity":1,"message":"431","line":51,"column":8,"nodeType":"362","messageId":"363","endLine":51,"endColumn":16},{"ruleId":"360","severity":1,"message":"432","line":54,"column":8,"nodeType":"362","messageId":"363","endLine":54,"endColumn":15},{"ruleId":"360","severity":1,"message":"433","line":62,"column":8,"nodeType":"362","messageId":"363","endLine":62,"endColumn":20},{"ruleId":"360","severity":1,"message":"434","line":63,"column":8,"nodeType":"362","messageId":"363","endLine":63,"endColumn":17},{"ruleId":"360","severity":1,"message":"435","line":68,"column":7,"nodeType":"362","messageId":"363","endLine":68,"endColumn":11},{"ruleId":"360","severity":1,"message":"436","line":76,"column":7,"nodeType":"362","messageId":"363","endLine":76,"endColumn":13},{"ruleId":"360","severity":1,"message":"437","line":91,"column":9,"nodeType":"362","messageId":"363","endLine":91,"endColumn":26},{"ruleId":"360","severity":1,"message":"438","line":101,"column":9,"nodeType":"362","messageId":"363","endLine":101,"endColumn":24},{"ruleId":"360","severity":1,"message":"439","line":173,"column":12,"nodeType":"362","messageId":"363","endLine":173,"endColumn":16},{"ruleId":"360","severity":1,"message":"371","line":174,"column":12,"nodeType":"362","messageId":"363","endLine":174,"endColumn":20},{"ruleId":"360","severity":1,"message":"372","line":174,"column":22,"nodeType":"362","messageId":"363","endLine":174,"endColumn":33},{"ruleId":"360","severity":1,"message":"440","line":176,"column":12,"nodeType":"362","messageId":"363","endLine":176,"endColumn":20},{"ruleId":"360","severity":1,"message":"374","line":179,"column":24,"nodeType":"362","messageId":"363","endLine":179,"endColumn":36},{"ruleId":"360","severity":1,"message":"441","line":182,"column":12,"nodeType":"362","messageId":"363","endLine":182,"endColumn":22},{"ruleId":"360","severity":1,"message":"442","line":182,"column":24,"nodeType":"362","messageId":"363","endLine":182,"endColumn":37},{"ruleId":"360","severity":1,"message":"443","line":198,"column":12,"nodeType":"362","messageId":"363","endLine":198,"endColumn":26},{"ruleId":"360","severity":1,"message":"444","line":200,"column":11,"nodeType":"362","messageId":"363","endLine":200,"endColumn":26},{"ruleId":"375","severity":1,"message":"376","line":288,"column":8,"nodeType":"377","endLine":288,"endColumn":10,"suggestions":"445"},{"ruleId":"360","severity":1,"message":"446","line":407,"column":10,"nodeType":"362","messageId":"363","endLine":407,"endColumn":22},{"ruleId":"447","severity":1,"message":"448","line":555,"column":29,"nodeType":"384","endLine":555,"endColumn":167},{"ruleId":"400","severity":1,"message":"401","line":570,"column":17,"nodeType":"402","messageId":"403","endLine":570,"endColumn":19},{"ruleId":"447","severity":1,"message":"448","line":581,"column":13,"nodeType":"384","endLine":581,"endColumn":108},{"ruleId":"360","severity":1,"message":"391","line":8,"column":8,"nodeType":"362","messageId":"363","endLine":8,"endColumn":24},{"ruleId":"360","severity":1,"message":"392","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":16},{"ruleId":"360","severity":1,"message":"449","line":17,"column":8,"nodeType":"362","messageId":"363","endLine":17,"endColumn":13},{"ruleId":"360","severity":1,"message":"450","line":18,"column":10,"nodeType":"362","messageId":"363","endLine":18,"endColumn":18},{"ruleId":"360","severity":1,"message":"451","line":31,"column":12,"nodeType":"362","messageId":"363","endLine":31,"endColumn":28},{"ruleId":"360","severity":1,"message":"452","line":31,"column":29,"nodeType":"362","messageId":"363","endLine":31,"endColumn":48},{"ruleId":"360","severity":1,"message":"453","line":32,"column":12,"nodeType":"362","messageId":"363","endLine":32,"endColumn":31},{"ruleId":"360","severity":1,"message":"454","line":32,"column":33,"nodeType":"362","messageId":"363","endLine":32,"endColumn":55},{"ruleId":"360","severity":1,"message":"455","line":34,"column":12,"nodeType":"362","messageId":"363","endLine":34,"endColumn":24},{"ruleId":"360","severity":1,"message":"456","line":44,"column":15,"nodeType":"362","messageId":"363","endLine":44,"endColumn":24},{"ruleId":"400","severity":1,"message":"401","line":62,"column":37,"nodeType":"402","messageId":"403","endLine":62,"endColumn":39},{"ruleId":"400","severity":1,"message":"401","line":72,"column":43,"nodeType":"402","messageId":"403","endLine":72,"endColumn":45},{"ruleId":"382","severity":1,"message":"385","line":224,"column":44,"nodeType":"384","endLine":224,"endColumn":47},{"ruleId":"360","severity":1,"message":"424","line":2,"column":10,"nodeType":"362","messageId":"363","endLine":2,"endColumn":14},{"ruleId":"360","severity":1,"message":"457","line":3,"column":8,"nodeType":"362","messageId":"363","endLine":3,"endColumn":14},{"ruleId":"360","severity":1,"message":"458","line":4,"column":8,"nodeType":"362","messageId":"363","endLine":4,"endColumn":14},{"ruleId":"360","severity":1,"message":"459","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":14},{"ruleId":"360","severity":1,"message":"460","line":6,"column":8,"nodeType":"362","messageId":"363","endLine":6,"endColumn":21},{"ruleId":"360","severity":1,"message":"449","line":7,"column":8,"nodeType":"362","messageId":"363","endLine":7,"endColumn":13},{"ruleId":"360","severity":1,"message":"461","line":12,"column":12,"nodeType":"362","messageId":"363","endLine":12,"endColumn":24},{"ruleId":"360","severity":1,"message":"462","line":12,"column":26,"nodeType":"362","messageId":"363","endLine":12,"endColumn":41},{"ruleId":"360","severity":1,"message":"463","line":13,"column":12,"nodeType":"362","messageId":"363","endLine":13,"endColumn":26},{"ruleId":"360","severity":1,"message":"464","line":13,"column":28,"nodeType":"362","messageId":"363","endLine":13,"endColumn":45},{"ruleId":"360","severity":1,"message":"465","line":14,"column":12,"nodeType":"362","messageId":"363","endLine":14,"endColumn":29},{"ruleId":"360","severity":1,"message":"466","line":14,"column":31,"nodeType":"362","messageId":"363","endLine":14,"endColumn":51},{"ruleId":"360","severity":1,"message":"467","line":22,"column":12,"nodeType":"362","messageId":"363","endLine":22,"endColumn":24},{"ruleId":"360","severity":1,"message":"468","line":22,"column":26,"nodeType":"362","messageId":"363","endLine":22,"endColumn":41},{"ruleId":"360","severity":1,"message":"371","line":25,"column":12,"nodeType":"362","messageId":"363","endLine":25,"endColumn":20},{"ruleId":"360","severity":1,"message":"372","line":25,"column":22,"nodeType":"362","messageId":"363","endLine":25,"endColumn":33},{"ruleId":"360","severity":1,"message":"373","line":27,"column":12,"nodeType":"362","messageId":"363","endLine":27,"endColumn":22},{"ruleId":"360","severity":1,"message":"374","line":27,"column":24,"nodeType":"362","messageId":"363","endLine":27,"endColumn":36},{"ruleId":"375","severity":1,"message":"376","line":91,"column":8,"nodeType":"377","endLine":91,"endColumn":10,"suggestions":"469"},{"ruleId":"447","severity":1,"message":"448","line":190,"column":29,"nodeType":"384","endLine":190,"endColumn":167},{"ruleId":"386","severity":1,"message":"387","line":20,"column":17,"nodeType":"384","endLine":20,"endColumn":82},{"ruleId":"360","severity":1,"message":"424","line":2,"column":10,"nodeType":"362","messageId":"363","endLine":2,"endColumn":14},{"ruleId":"360","severity":1,"message":"457","line":3,"column":8,"nodeType":"362","messageId":"363","endLine":3,"endColumn":14},{"ruleId":"360","severity":1,"message":"470","line":13,"column":12,"nodeType":"362","messageId":"363","endLine":13,"endColumn":26},{"ruleId":"360","severity":1,"message":"471","line":13,"column":28,"nodeType":"362","messageId":"363","endLine":13,"endColumn":45},{"ruleId":"360","severity":1,"message":"472","line":14,"column":12,"nodeType":"362","messageId":"363","endLine":14,"endColumn":28},{"ruleId":"360","severity":1,"message":"473","line":14,"column":30,"nodeType":"362","messageId":"363","endLine":14,"endColumn":49},{"ruleId":"360","severity":1,"message":"474","line":15,"column":12,"nodeType":"362","messageId":"363","endLine":15,"endColumn":30},{"ruleId":"360","severity":1,"message":"475","line":15,"column":32,"nodeType":"362","messageId":"363","endLine":15,"endColumn":53},{"ruleId":"360","severity":1,"message":"476","line":16,"column":12,"nodeType":"362","messageId":"363","endLine":16,"endColumn":33},{"ruleId":"360","severity":1,"message":"477","line":16,"column":35,"nodeType":"362","messageId":"363","endLine":16,"endColumn":59},{"ruleId":"360","severity":1,"message":"478","line":19,"column":12,"nodeType":"362","messageId":"363","endLine":19,"endColumn":28},{"ruleId":"360","severity":1,"message":"479","line":19,"column":30,"nodeType":"362","messageId":"363","endLine":19,"endColumn":49},{"ruleId":"360","severity":1,"message":"371","line":21,"column":12,"nodeType":"362","messageId":"363","endLine":21,"endColumn":20},{"ruleId":"360","severity":1,"message":"372","line":21,"column":22,"nodeType":"362","messageId":"363","endLine":21,"endColumn":33},{"ruleId":"360","severity":1,"message":"373","line":23,"column":12,"nodeType":"362","messageId":"363","endLine":23,"endColumn":22},{"ruleId":"360","severity":1,"message":"374","line":23,"column":24,"nodeType":"362","messageId":"363","endLine":23,"endColumn":36},{"ruleId":"375","severity":1,"message":"376","line":87,"column":8,"nodeType":"377","endLine":87,"endColumn":10,"suggestions":"480"},{"ruleId":"360","severity":1,"message":"481","line":2,"column":8,"nodeType":"362","messageId":"363","endLine":2,"endColumn":13},{"ruleId":"360","severity":1,"message":"404","line":3,"column":8,"nodeType":"362","messageId":"363","endLine":3,"endColumn":13},{"ruleId":"360","severity":1,"message":"391","line":6,"column":8,"nodeType":"362","messageId":"363","endLine":6,"endColumn":24},{"ruleId":"360","severity":1,"message":"392","line":7,"column":8,"nodeType":"362","messageId":"363","endLine":7,"endColumn":16},{"ruleId":"360","severity":1,"message":"424","line":3,"column":10,"nodeType":"362","messageId":"363","endLine":3,"endColumn":14},{"ruleId":"360","severity":1,"message":"457","line":4,"column":8,"nodeType":"362","messageId":"363","endLine":4,"endColumn":14},{"ruleId":"360","severity":1,"message":"458","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":14},{"ruleId":"360","severity":1,"message":"459","line":6,"column":8,"nodeType":"362","messageId":"363","endLine":6,"endColumn":14},{"ruleId":"360","severity":1,"message":"460","line":7,"column":8,"nodeType":"362","messageId":"363","endLine":7,"endColumn":21},{"ruleId":"360","severity":1,"message":"449","line":8,"column":8,"nodeType":"362","messageId":"363","endLine":8,"endColumn":13},{"ruleId":"360","severity":1,"message":"371","line":26,"column":12,"nodeType":"362","messageId":"363","endLine":26,"endColumn":20},{"ruleId":"360","severity":1,"message":"372","line":26,"column":22,"nodeType":"362","messageId":"363","endLine":26,"endColumn":33},{"ruleId":"360","severity":1,"message":"374","line":28,"column":24,"nodeType":"362","messageId":"363","endLine":28,"endColumn":36},{"ruleId":"375","severity":1,"message":"376","line":92,"column":8,"nodeType":"377","endLine":92,"endColumn":10,"suggestions":"482"},{"ruleId":"360","severity":1,"message":"379","line":94,"column":11,"nodeType":"362","messageId":"363","endLine":94,"endColumn":23},{"ruleId":"360","severity":1,"message":"380","line":127,"column":11,"nodeType":"362","messageId":"363","endLine":127,"endColumn":23},{"ruleId":"447","severity":1,"message":"448","line":225,"column":29,"nodeType":"384","endLine":225,"endColumn":124},{"ruleId":"447","severity":1,"message":"448","line":270,"column":29,"nodeType":"384","endLine":270,"endColumn":167},{"ruleId":"360","severity":1,"message":"365","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":18},{"ruleId":"360","severity":1,"message":"483","line":11,"column":8,"nodeType":"362","messageId":"363","endLine":11,"endColumn":17},{"ruleId":"360","severity":1,"message":"484","line":12,"column":8,"nodeType":"362","messageId":"363","endLine":12,"endColumn":16},{"ruleId":"360","severity":1,"message":"424","line":14,"column":9,"nodeType":"362","messageId":"363","endLine":14,"endColumn":13},{"ruleId":"360","severity":1,"message":"418","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":18},{"ruleId":"360","severity":1,"message":"419","line":10,"column":8,"nodeType":"362","messageId":"363","endLine":10,"endColumn":16},{"ruleId":"360","severity":1,"message":"418","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":18},{"ruleId":"360","severity":1,"message":"419","line":10,"column":8,"nodeType":"362","messageId":"363","endLine":10,"endColumn":16},{"ruleId":"360","severity":1,"message":"406","line":6,"column":8,"nodeType":"362","messageId":"363","endLine":6,"endColumn":18},{"ruleId":"360","severity":1,"message":"365","line":7,"column":8,"nodeType":"362","messageId":"363","endLine":7,"endColumn":18},{"ruleId":"360","severity":1,"message":"408","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":16},{"ruleId":"400","severity":1,"message":"401","line":41,"column":47,"nodeType":"402","messageId":"403","endLine":41,"endColumn":49},{"ruleId":"447","severity":1,"message":"448","line":42,"column":1,"nodeType":"384","endLine":42,"endColumn":95},{"ruleId":"360","severity":1,"message":"485","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":19},{"ruleId":"360","severity":1,"message":"486","line":6,"column":27,"nodeType":"362","messageId":"363","endLine":6,"endColumn":33},{"ruleId":"360","severity":1,"message":"487","line":6,"column":35,"nodeType":"362","messageId":"363","endLine":6,"endColumn":41},{"ruleId":"360","severity":1,"message":"488","line":6,"column":43,"nodeType":"362","messageId":"363","endLine":6,"endColumn":48},{"ruleId":"360","severity":1,"message":"424","line":6,"column":50,"nodeType":"362","messageId":"363","endLine":6,"endColumn":54},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Typography' is defined but never used.","'Breadcrumbs' is defined but never used.","'HomeIcon' is defined but never used.","'WhatshotIcon' is defined but never used.","'GrainIcon' is defined but never used.","'SignUp' is defined but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'created_at' is assigned a value but never used.","'setCreatedAt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'remainingTime'. Either include it or remove the dependency array.","ArrayExpression",["489"],"'handleCreate' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Blog' is defined but never used.","'Avatar' is defined but never used.","'CssBaseline' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Container' is defined but never used.","'createTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'authMsg' is assigned a value but never used.","'setAuthMsg' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Stack' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'Card' is defined but never used.","'ListSubheader' is defined but never used.","'List' is defined but never used.","'ListItemButton' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Collapse' is defined but never used.","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'SendIcon' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'StarBorder' is defined but never used.","'NewsFeedCard' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'create' is defined but never used.","'PopupState' is defined but never used.","'bindTrigger' is defined but never used.","'bindMenu' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'ThumbUp' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'Item' is assigned a value but never used.","'Search' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'StyledInputBase' is assigned a value but never used.","'user' is assigned a value but never used.","'authorId' is assigned a value but never used.","'createdMsg' is assigned a value but never used.","'setCreatedMsg' is assigned a value but never used.","'countBlogLikes' is assigned a value but never used.","'handleLikeClick' is assigned a value but never used.",["490"],"'handleLogout' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Login' is defined but never used.","'Navigate' is defined but never used.","'userErrorMessage' is assigned a value but never used.","'setUserErrorMessage' is assigned a value but never used.","'usernameExistsError' is assigned a value but never used.","'setUsernameExistsError' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'fetchdata' is assigned a value but never used.","'Update' is defined but never used.","'Create' is defined but never used.","'Logout' is defined but never used.","'ImageUploader' is defined but never used.","'newBlogTitle' is assigned a value but never used.","'setNewBlogTitle' is assigned a value but never used.","'newBlogContent' is assigned a value but never used.","'setNewBlogContent' is assigned a value but never used.","'newBlogAuthorName' is assigned a value but never used.","'setNewBlogAuthorName' is assigned a value but never used.","'newBlogImage' is assigned a value but never used.","'setNewBlogImage' is assigned a value but never used.",["491"],"'selectedBlogId' is assigned a value but never used.","'setSelectedBlogId' is assigned a value but never used.","'updatedBlogTitle' is assigned a value but never used.","'setUpdatedBlogTitle' is assigned a value but never used.","'updatedBlogContent' is assigned a value but never used.","'setUpdatedBlogContent' is assigned a value but never used.","'updatedBlogAuthorName' is assigned a value but never used.","'setUpdatedBlogAuthorName' is assigned a value but never used.","'updatedBlogImage' is assigned a value but never used.","'setUpdatedBlogImage' is assigned a value but never used.",["492"],"'React' is defined but never used.",["493"],"'PersonAdd' is defined but never used.","'Settings' is defined but never used.","'CommentIcon' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.",{"desc":"494","fix":"495"},{"desc":"494","fix":"496"},{"desc":"494","fix":"497"},{"desc":"494","fix":"498"},{"desc":"494","fix":"499"},"Update the dependencies array to be: [remainingTime]",{"range":"500","text":"501"},{"range":"502","text":"501"},{"range":"503","text":"501"},{"range":"504","text":"501"},{"range":"505","text":"501"},[3987,3989],"[remainingTime]",[9883,9885],[3825,3827],[3677,3679],[3824,3826]]