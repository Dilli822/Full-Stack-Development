{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/blog.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// // import { Link } from \"react-router-dom\";\n// // import Update from \"./update\";\n// // import Create from \"./create\";\n// // import Logout from \"./logout\";\n// // import ImageUploader from \"./storeImagetemporarily\";\n// // import Login from \"./login\";\n// // import { useNavigate } from 'react-router-dom';\n\n// import Container from '@mui/material/Container';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import Box from '@mui/material/Box';\n// import Grid from '@mui/material/Grid';\n\n// // function Blog() {\n// //     const [loading, setLoading] = useState(true);\n// //     const [newBlogTitle, setNewBlogTitle] = useState(\"\");\n// //     const [newBlogContent, setNewBlogContent] = useState(\"\");\n// //     const [newBlogAuthorName, setNewBlogAuthorName] = useState(\"\");\n\n// //     const [blogs, setBlogs] = useState([]);\n// //     const [selectedBlogId, setSelectedBlogId] = useState(\"\");\n// //     const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n// //     const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n// //     const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n\n// //     const [newBlogImage, setNewBlogImage] = useState(null);\n// //     const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n\n// //     const [imageUrl, setImageUrl] = useState(null);\n\n// //     const [created_at, setCreatedAt] = useState(\"\");\n// //     const accessToken = localStorage.getItem(\"accessToken\");\n// //     const tokenParts = accessToken.split(\".\");\n\n// //     // Decode the access token payload\n// //     const payload = JSON.parse(atob(tokenParts[1]));\n\n// //     // Get the expiration time from the payload\n// //     const expirationTime = payload.exp;\n\n// //     // Calculate the remaining time in seconds until the token expires\n// //     const currentTime = Math.floor(Date.now() / 1000);\n// //     const remainingTime = expirationTime - currentTime;\n\n// //     console.log(`The access token will expire in ${remainingTime} seconds.`);\n// //     useEffect(() => {\n// //         const fetchBlogs = async () => {\n// //             try {\n// //                 const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n// //                     headers: {\n// //                         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //                     },\n// //                 });\n\n// //                 if (response.status === 401) {\n// //                     console.log(\"token expired and expired time is\", remainingTime);\n\n// //                     // Access token has expired, use refresh token to get a new access token\n// //                     const refreshResponse = await fetch(\"http://localhost:8000/api/refresh/\", {\n// //                         method: \"POST\",\n// //                         headers: {\n// //                             \"Content-Type\": \"application/json\",\n// //                         },\n// //                         body: JSON.stringify({\n// //                             refresh: localStorage.getItem(\"refreshToken\"),\n// //                         }),\n// //                     });\n\n// //                     if (refreshResponse.ok) {\n// //                         const tokens = await refreshResponse.json();\n// //                         localStorage.setItem(\"accessToken\", tokens.access);\n// //                         // Try fetching blogs again with the new access token\n// //                         const newResponse = await fetch(\"http://localhost:8000/api/blog/list/\", {\n// //                             headers: {\n// //                                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //                             },\n// //                         });\n// //                         const data = await newResponse.json();\n// //                         setBlogs(data);\n// //                         setLoading(false);\n// //                     } else {\n// //                         throw new Error(\"Refresh token is invalid\");\n// //                     }\n// //                 } else {\n// //                     const data = await response.json();\n// //                     setBlogs(data);\n// //                     setLoading(false);\n// //                 }\n// //             } catch (error) {\n// //                 console.error(error);\n// //             }\n// //         };\n\n// //         fetchBlogs();\n// //     }, []);\n\n// //     const handleCreate = () => {\n// //         const newBlog = {\n// //             title: newBlogTitle,\n// //             content: newBlogContent,\n// //             authorName: newBlogAuthorName,\n// //             image: newBlogImage, // Add the image file to the new blog object\n// //         };\n\n// //         const formData = new FormData();\n// //         formData.append(\"title\", newBlog.title);\n// //         formData.append(\"content\", newBlog.content);\n// //         formData.append(\"authorName\", newBlog.authorName);\n// //         if(newBlogImage != null){\n// //             formData.append('image', newBlogImage);\n// //         }\n\n// //         fetch(\"http://localhost:8000/api/blog/create/\", {\n// //             method: \"POST\",\n// //             headers: {\n// //                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //             },\n// //             body: formData, // Use the form data instead of JSON.stringify\n// //         })\n// //             .then((response) => response.json())\n// //             .then((data) => {\n// //                 setBlogs([...blogs, data]);\n// //                 setNewBlogTitle(\"\");\n// //                 setNewBlogContent(\"\");\n// //                 setNewBlogAuthorName(\"\");\n// //                 setNewBlogImage(null); // Reset the image state after submitting the form\n// //             });\n// //     };\n\n// //     const handleDelete = (id) => {\n// //         if (window.confirm(\"Are you sure you want to delete this post?\")) {\n// //             fetch(`http://localhost:8000/api/blog/delete/${id}/`, {\n// //                 method: \"DELETE\",\n// //                 headers: {\n// //                     \"Content-Type\": \"application/json\",\n// //                     Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //                 },\n// //             })\n// //                 .then((response) => {\n// //                     if (response.ok) {\n// //                         setBlogs(blogs.filter((blog) => blog.id !== id));\n// //                     } else {\n// //                         throw new Error(\"Delete failed\");\n// //                     }\n// //                 })\n// //                 .catch((error) => {\n// //                     console.error(error);\n// //                 });\n// //         }\n// //     };\n\n// //     const handleUpdate = () => {\n// //         const updatedBlog = {\n// //             id: selectedBlogId,\n// //             title: updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle,\n// //             content: updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent,\n// //             authorName: updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName,\n// //         };\n\n// //         const formData = new FormData();\n// //         formData.append(\"title\", updatedBlog.title);\n// //         formData.append(\"content\", updatedBlog.content);\n// //         formData.append(\"authorName\", updatedBlog.authorName);\n// //         if(updatedBlogImage != null){\n// //             formData.append('image', updatedBlogImage);\n// //         }\n\n// //         fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n// //             method: \"PUT\",\n// //             headers: {\n// //                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //             },\n// //             body: formData,\n// //         })\n// //             .then((response) => response.json())\n// //             .then((data) => {\n// //                 const index = blogs.findIndex((blog) => blog.id === data.id);\n// //                 const newBlogs = [...blogs];\n// //                 newBlogs[index] = data;\n// //                 setBlogs(newBlogs);\n// //                 setSelectedBlogId(\"\");\n// //                 setUpdatedBlogTitle(undefined);\n// //                 setUpdatedBlogContent(undefined);\n// //                 setUpdatedBlogAuthorName(undefined);\n// //                 setUpdatedBlogImage(null);\n// //             })\n// //             .catch((error) => console.error(error));\n// //     };\n\n// //   const navigate = useNavigate();\n\n// //   const  handleLogout = () => {\n// //     if (window.confirm(\"Are you sure you want to logout?\")) {\n// //     // Remove access token and refresh token from local storage\n// //     localStorage.removeItem('accessToken');\n// //     localStorage.removeItem('refreshToken');\n\n// //     // Navigate to the login page\n\n// //     navigate('/login');\n// //   } }\n\n// //     if (loading) {\n// //         return <span class=\"loader\"></span>\n// //     }\n\n// //     return (\n\n// //         <div>\n\n// //         <div style={{ display: \"flex\", justifyContent: \"space-around\" , flexWrap: \"wrap-reverse\" , width: \"100%\", padding: \"0 55px\", margin: \"0 35px\"}}>\n\n// //         <div style={{ margin: \"0px\", width: \"50%\"}}>\n\n// //             <div>\n\n// //                 <h1>Blog List</h1>\n\n// //                 {blogs\n// //                     .sort((a, b) => b.id - a.id)\n// //                     .map((blog) => (\n// //                         <div key={blog.id}>\n// //                             <h2>{blog.title}</h2>\n// //                             <img src={`http://localhost:8000${blog.image}`} style={{ width: \"450px\", maxWidth: \"100%\" }} />\n\n// //                             <p>{blog.content}</p>\n// //                             <p>Author: {blog.authorName}</p>\n// //                             <p>Published Date: {blog.created_at}</p>\n// //                             <p>Updated Date: {blog.updated_at}</p>\n// //                             {created_at && <p>Blog Created at Standard: {created_at}</p>}\n// //                             <button className=\"update\" onClick={() => setSelectedBlogId(blog.id)}>Edit</button>\n// //                             <button className=\"delete\" onClick={() => handleDelete(blog.id)}>Delete</button>\n// //                         </div>\n// //                     ))}\n// //             </div>\n// //         </div>\n\n// //         <div style={{margin: \"0px\" ,width: \"50%\"}}> \n\n// //         <button onClick={handleLogout}>Logout</button>\n// //         <div style={{ position: \"fixed\"}}>\n// //         <h2>Create New Blog</h2>\n// //                     <label>\n// //                         Title: </label><br></br>\n// //                         <input type=\"text\" value={newBlogTitle} onChange={(event) => setNewBlogTitle(event.target.value)} />\n\n// //                     <br />\n// //                     <label>\n// //                         Content: </label> <br></br>\n// //                         <textarea value={newBlogContent} onChange={(event) => setNewBlogContent(event.target.value)} />\n\n// //                     <br />\n// //                     <label>\n// //                         Author Name:    </label>  <br></br>\n// //                         <input type=\"text\" value={newBlogAuthorName} onChange={(event) => setNewBlogAuthorName(event.target.value)} />\n\n// //                     <div>\n// //                         <label htmlFor=\"newBlogImage\">Image:</label> \n// //                         <input style={{backgroundColor: \"transparent\"}} type=\"file\" id=\"newBlogImage\" name=\"newBlogImage\" onChange={(event) => setNewBlogImage(event.target.files[0])} />\n// //                     </div>\n// //                     <button  className=\"create\" onClick={handleCreate}>Create Blog</button>\n\n// //                                     {/* <UpdateBlog/> */}\n// //                 {selectedBlogId !== \"\" && (\n// //                     <div style={{ width: \"auto\"}}>\n// //                         <h2>Update Blog \"{blogs.find((blog) => blog.id === selectedBlogId).title}\"</h2>\n\n// //                         <div>\n// //                             <label htmlFor=\"blog-title\">Title:</label> <br></br>\n// //                             <input type=\"text\" id=\"blog-title\" value={updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle} onChange={(e) => setUpdatedBlogTitle(e.target.value)} />\n// //                         </div>\n\n// //                         <div>\n// //                             <label htmlFor=\"blog-content\">Content:</label> <br></br>\n// //                             <textarea id=\"blog-content\" value={updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent} onChange={(e) => setUpdatedBlogContent(e.target.value)} />\n// //                         </div>\n\n// //                         <div>\n// //                             <label htmlFor=\"blog-author-name\">Author Name:</label> <br></br>\n// //                             <input\n// //                                 type=\"text\"\n// //                                 id=\"blog-author-name\"\n// //                                 value={updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName}\n// //                                 onChange={(e) => setUpdatedBlogAuthorName(e.target.value)}\n// //                             />\n// //                         </div>\n\n// //                         <div>\n// //                             <label htmlFor=\"updatedBlogImage\">Image:</label>\n// //                             <img src={`http://localhost:8000${blogs.find((blog) => blog.id === selectedBlogId).image}`} style={{ width: \"50px\", maxWidth: \"100%\" }} />\n// //                             <input style={{backgroundColor: \"transparent\"}} type=\"file\" id=\"updatedBlogImage\" name=\"updatedBlogImage\" onChange={(event) => setUpdatedBlogImage(event.target.files[0])} />\n// //                         </div>\n\n// //                         <button className=\"update\"  onClick={handleUpdate}>Update Blog</button>\n// //                         <button className=\"cancel\" onClick={() => setSelectedBlogId(\"\")}>Cancel</button>\n// //                     </div>\n// //                 )}\n\n// //         </div>\n\n// //         </div>\n// //         </div>\n// //         </div>\n// //     );\n// // }\n// // export default Blog;\n\n// import { Button } from 'react-bootstrap';\n// import Typography from '@mui/material/Typography';\n// import Breadcrumbs from '@mui/material/Breadcrumbs';\n// // import Link from '@mui/material/Link';\n// import HomeIcon from '@mui/icons-material/Home';\n// import WhatshotIcon from '@mui/icons-material/Whatshot';\n// import GrainIcon from '@mui/icons-material/Grain';\n// import SignUp from './signup';\n// import {Link, useNavigate} from \"react-router-dom\";\n// import { styled } from '@mui/material/styles';\n// import Paper from '@mui/material/Paper';\n// const Item = styled(Paper)(({ theme }) => ({\n//     backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n//     ...theme.typography.body2,\n//     padding: theme.spacing(1),\n//     textAlign: 'center',\n//     color: theme.palette.text.secondary,\n//   }));\n//   import PropTypes from 'prop-types';\n//   import Tabs from '@mui/material/Tabs';\n//   import Tab from '@mui/material/Tab';\n//   import Typography from '@mui/material/Typography';\n//   import Box from '@mui/material/Box';\n\n// function Blog(){\n\n//     const [loading, setLoading] = useState(true);\n//     const [newBlogTitle, setNewBlogTitle] = useState(\"\");\n//     const [newBlogContent, setNewBlogContent] = useState(\"\");\n//     const [newBlogAuthorName, setNewBlogAuthorName] = useState(\"\");\n\n//     const [blogs, setBlogs] = useState([]);\n//     const [selectedBlogId, setSelectedBlogId] = useState(\"\");\n//     const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n//     const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n//     const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n\n//     const [newBlogImage, setNewBlogImage] = useState(null);\n//     const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n\n//     const [imageUrl, setImageUrl] = useState(null);\n\n//     const [created_at, setCreatedAt] = useState(\"\");\n//     const accessToken = localStorage.getItem(\"accessToken\");\n//     const tokenParts = accessToken.split(\".\");\n\n//     // Decode the access token payload\n//     const payload = JSON.parse(atob(tokenParts[1]));\n\n//     // Get the expiration time from the payload\n//     const expirationTime = payload.exp;\n\n//     // Calculate the remaining time in seconds until the token expires\n//     const currentTime = Math.floor(Date.now() / 1000);\n//     const remainingTime = expirationTime - currentTime;\n\n//     console.log(`The access token will expire in ${remainingTime} seconds.`);\n//     useEffect(() => {\n//         const fetchBlogs = async () => {\n//             try {\n//                 const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//                     headers: {\n//                         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                     },\n//                 });\n\n//                 if (response.status === 401) {\n//                     console.log(\"token expired and expired time is\", remainingTime);\n\n//                     // Access token has expired, use refresh token to get a new access token\n//                     const refreshResponse = await fetch(\"http://localhost:8000/api/refresh/\", {\n//                         method: \"POST\",\n//                         headers: {\n//                             \"Content-Type\": \"application/json\",\n//                         },\n//                         body: JSON.stringify({\n//                             refresh: localStorage.getItem(\"refreshToken\"),\n//                         }),\n//                     });\n\n//                     if (refreshResponse.ok) {\n//                         const tokens = await refreshResponse.json();\n//                         localStorage.setItem(\"accessToken\", tokens.access);\n//                         // Try fetching blogs again with the new access token\n//                         const newResponse = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//                             headers: {\n//                                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                             },\n//                         });\n//                         const data = await newResponse.json();\n//                         setBlogs(data);\n//                         setLoading(false);\n//                     } else {\n//                         throw new Error(\"Refresh token is invalid\");\n//                     }\n//                 } else {\n//                     const data = await response.json();\n//                     setBlogs(data);\n//                     setLoading(false);\n//                 }\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         };\n\n//         fetchBlogs();\n//     }, []);\n\n//     const handleCreate = () => {\n//         const newBlog = {\n//             title: newBlogTitle,\n//             content: newBlogContent,\n//             authorName: newBlogAuthorName,\n//             image: newBlogImage, // Add the image file to the new blog object\n//         };\n\n//         const formData = new FormData();\n//         formData.append(\"title\", newBlog.title);\n//         formData.append(\"content\", newBlog.content);\n//         formData.append(\"authorName\", newBlog.authorName);\n//         if(newBlogImage != null){\n//             formData.append('image', newBlogImage);\n//         }\n\n//         fetch(\"http://localhost:8000/api/blog/create/\", {\n//             method: \"POST\",\n//             headers: {\n//                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//             },\n//             body: formData, // Use the form data instead of JSON.stringify\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 setBlogs([...blogs, data]);\n//                 setNewBlogTitle(\"\");\n//                 setNewBlogContent(\"\");\n//                 setNewBlogAuthorName(\"\");\n//                 setNewBlogImage(null); // Reset the image state after submitting the form\n//             });\n//     };\n\n//     const handleDelete = (id) => {\n//         if (window.confirm(\"Are you sure you want to delete this post?\")) {\n//             fetch(`http://localhost:8000/api/blog/delete/${id}/`, {\n//                 method: \"DELETE\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                 },\n//             })\n//                 .then((response) => {\n//                     if (response.ok) {\n//                         setBlogs(blogs.filter((blog) => blog.id !== id));\n//                     } else {\n//                         throw new Error(\"Delete failed\");\n//                     }\n//                 })\n//                 .catch((error) => {\n//                     console.error(error);\n//                 });\n//         }\n//     };\n\n//     const handleUpdate = () => {\n//         const updatedBlog = {\n//             id: selectedBlogId,\n//             title: updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle,\n//             content: updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent,\n//             authorName: updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName,\n//         };\n\n//         const formData = new FormData();\n//         formData.append(\"title\", updatedBlog.title);\n//         formData.append(\"content\", updatedBlog.content);\n//         formData.append(\"authorName\", updatedBlog.authorName);\n//         if(updatedBlogImage != null){\n//             formData.append('image', updatedBlogImage);\n//         }\n\n//         fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n//             method: \"PUT\",\n//             headers: {\n//                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//             },\n//             body: formData,\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 const index = blogs.findIndex((blog) => blog.id === data.id);\n//                 const newBlogs = [...blogs];\n//                 newBlogs[index] = data;\n//                 setBlogs(newBlogs);\n//                 setSelectedBlogId(\"\");\n//                 setUpdatedBlogTitle(undefined);\n//                 setUpdatedBlogContent(undefined);\n//                 setUpdatedBlogAuthorName(undefined);\n//                 setUpdatedBlogImage(null);\n//             })\n//             .catch((error) => console.error(error));\n//     };\n\n//   const navigate = useNavigate();\n\n//   const  handleLogout = () => {\n//     if (window.confirm(\"Are you sure you want to logout?\")) {\n//     // Remove access token and refresh token from local storage\n//     localStorage.removeItem('accessToken');\n//     localStorage.removeItem('refreshToken');\n\n//     // Navigate to the login page\n\n//     navigate('/login');\n//   } }\n\n//     if (loading) {\n//         return <span class=\"loader\"></span>\n//     }\n\n//     return(\n\n// //         <div>\n\n// //             <div class=\"container\">\n\n// // <nav class=\"navbar navbar-light\">\n// // <div class=\"col\" role=\"presentation\">\n// //       <Breadcrumbs aria-label=\"breadcrumb\">\n// //         <Link\n// //           underline=\"hover\"\n// //           sx={{ display: 'flex', alignItems: 'center' }}\n// //           color=\"inherit\"\n// //           href=\"/\"\n// //         >\n// //           <HomeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\n// //           MUI\n// //         </Link>\n// //         <Link\n// //           underline=\"hover\"\n// //           sx={{ display: 'flex', alignItems: 'center' }}\n// //           color=\"inherit\"\n// //           href=\"/material-ui/getting-started/installation/\"\n// //         >\n// //           <WhatshotIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\n// //           Core\n// //         </Link>\n// //         <Typography\n// //           sx={{ display: 'flex', alignItems: 'center' }}\n// //           color=\"text.primary\"\n// //         >\n// //           <GrainIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\n// //           Breadcrumb\n// //         </Typography>\n// //       </Breadcrumbs>\n// //     </div>\n// // </nav>\n\n// //             </div>\n\n// //             <div class=\"container\">\n\n// //                 <div class=\"row\">\n\n// //                 </div>\n// //   <div class=\"row\">\n// //     <div class=\"col col-lg-9\">\n\n// //      <div class=\"container\">\n\n// //      <div class=\"col\">\n// //         <img src=\"https://unsplash.it/500\" />\n// //       </div>\n\n// //       <div class=\"col col-lg-9\">\n// //        <div class=\"row\">\n\n// //         <div class=\"col\">\n// //         adsfasfa\n// //         </div>\n\n// //         <div class=\"col\">\n// //         adsfasfa\n// //         </div>\n\n// //        </div>\n// //       </div>\n\n// //      </div>\n\n// //     </div>\n\n// //     <div class=\"col col-lg-3\">\n// //           <div>\n// //             <input placeholder='Search Blogs Here.....'></input>\n// //             <button>Search</button>\n// //             </div>\n// //           <div>Search List</div>\n// //     </div>\n// //   </div>\n// // </div>\n// //         </div>\n\n// // <div>\n\n// // <div className=\"container\">\n// //       <header className=\"blog-header py-3\">\n// //         <div className=\"row flex-nowrap justify-content-between align-items-center\">\n// //           <div className=\"col-4 pt-1\">\n// //             <a className=\"text-muted\" href=\"#\">Subscribe</a>\n// //           </div>\n// //           <div className=\"col-4 text-center\">\n// //             <a className=\"blog-header-logo text-dark\" href=\"#\">Large</a>\n// //           </div>\n// //           <div className=\"col-4 d-flex justify-content-end align-items-center\">\n// //             <a className=\"text-muted\" href=\"#\">\n\n// //             </a>\n// //             <Link to=\"/signup\"> <a className=\"btn btn-sm btn-outline-secondary\" href=\"#\">Sign up</a> </Link>\n// //              <a className=\"btn btn-sm btn-outline-secondary\" onClick={handleLogout}>Logout</a> \n// //           </div>\n// //         </div>\n// //       </header>\n\n// //       <div class=\"nav-scroller py-1 mb-2\">\n\n// //         <nav className=\"nav d-flex justify-content-between\">\n// //           <a className=\"p-2 text-muted\" href=\"#\">World</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">U.S.</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Technology</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Design</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Culture</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Business</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Politics</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Opinion</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Science</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Health</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Style</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Travel</a>\n// //         </nav>\n\n// //       </div>\n\n// //       <div className=\"jumbotron p-3 p-md-5 text-white rounded bg-dark\">\n\n// //         <div className=\"col-md-6 px-0\">\n// //           <h1 className=\"display-4 font-italic\">Title of a longer featured blog post</h1>\n// //           <p className=\"lead my-3\">Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents.</p>\n// //           <p className=\"lead mb-0\"><a href=\"#\" class=\"text-white font-weight-bold\">Continue reading...</a></p>\n// //         </div>\n\n// //       </div>\n\n// //       <div className=\"row mb-2\">\n\n// //         <div className=\"col-md-6\">\n// //           <div className=\"card flex-md-row mb-4 box-shadow h-md-250\">\n// //             <div className=\"card-body d-flex flex-column align-items-start\">\n// //               <strong className=\"d-inline-block mb-2 text-primary\">World</strong>\n// //               <h3 className=\"mb-0\">\n// //                 <a className=\"text-dark\" href=\"#\">Featured post</a>\n// //               </h3>\n// //               <div className=\"mb-1 text-muted\">Nov 12</div>\n// //               <p className=\"card-text mb-auto\">This is a wider card with supporting text below as a natural lead-in to additional content.</p>\n// //               <a href=\"#\">Continue reading</a>\n// //             </div>\n// //             <img className=\"card-img-right flex-auto d-none d-md-block\" src=\"https://unsplash.it/200\" alt=\"Card image cap\"></img>\n// //           </div>\n\n// //         </div>\n\n// //         <div className=\"col-md-6\">\n// //           <div className=\"card flex-md-row mb-4 box-shadow h-md-250\">\n// //             <div className=\"card-body d-flex flex-column align-items-start\">\n// //               <strong className=\"d-inline-block mb-2 text-primary\">World</strong>\n// //               <h3 className=\"mb-0\">\n// //                 <a className=\"text-dark\" href=\"#\">Featured post</a>\n// //               </h3>\n// //               <div className=\"mb-1 text-muted\">Nov 12</div>\n// //               <p className=\"card-text mb-auto\">This is a wider card with supporting text below as a natural lead-in to additional content.</p>\n// //               <a href=\"#\">Continue reading</a>\n// //             </div>\n// //             <img className=\"card-img-right flex-auto d-none d-md-block\" src=\"https://unsplash.it/200\" alt=\"Card image cap\"></img>\n// //           </div>\n\n// //         </div>\n\n// //     <main className=\"container\">\n// //       <div className=\"row\">\n// //         <div className=\"col-md-8 blog-main\">\n// //           <h3 className=\"pb-3 mb-4 font-italic border-bottom\">\n// //             From the Firehose\n// //           </h3>\n\n// //           <div className=\"blog-post\">\n// //             <h2 className=\"blog-post-title\">Sample blog post</h2>\n// //             <p className=\"blog-post-meta\">January 1, 2014 by <a href=\"#\">Mark</a></p>\n\n// //             <p>This blog post shows a few different types of content that's supported and styled with Bootstrap. Basic typography, images, and code are all supported.</p>\n// //             <hr></hr>\n// //             <p>Cum sociis natoque penatibus et magnis <a href=\"#\">dis parturient montes</a>, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.</p>\n// //             <blockquote>\n// //               <p>Curabitur blandit tempus porttitor. <strong>Nullam quis risus eget urna mollis</strong> ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n// //             </blockquote>\n// //             <p>Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n// //             <h2>Heading</h2>\n// //             <p>Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n// //             <h3>Sub-heading</h3>\n// //             <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</p>\n// //             <pre><code>Example code block</code></pre>\n// //             <p>Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.</p>\n// //             <h3>Sub-heading</h3>\n// //             <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p>\n// //             <ul>\n// //               <li>Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</li>\n// //               <li>Donec id elit non mi porta gravida at eget metus.</li>\n// //               <li>Nulla vitae elit libero, a pharetra augue.</li>\n// //             </ul>\n// //             <p>Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.</p>\n// //             <ol>\n// //               <li>Vestibulum id ligula porta felis euismod semper.</li>\n// //               <li>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</li>\n// //               <li>Maecenas sed diam eget risus varius blandit sit amet non magna.</li>\n// //             </ol>\n// //             <p>Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.</p>\n// //           </div>\n\n// //           <div className=\"blog-post\">\n// //             <h2 className=\"blog-post-title\">Another blog post</h2>\n// //             <p className=\"blog-post-meta\">December 23, 2013 by <a href=\"#\">Jacob</a></p>\n\n// //             <p>Cum sociis natoque penatibus et magnis <a href=\"#\">dis parturient montes</a>, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.</p>\n// //             <blockquote>\n// //               <p>Curabitur blandit tempus porttitor. <strong>Nullam quis risus eget urna mollis</strong> ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n// //             </blockquote>\n// //             <p>Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n// //             <p>Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n// //           </div>\n\n// //           <div className=\"blog-post\">\n// //             <h2 className=\"blog-post-title\">New feature</h2>\n// //             <p className=\"blog-post-meta\">December 14, 2013 by <a href=\"#\">Chris</a></p>\n\n// //             <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p>\n// //             <ul>\n// //               <li>Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</li>\n// //               <li>Donec id elit non mi porta gravida at eget metus.</li>\n// //               <li>Nulla vitae elit libero, a pharetra augue.</li>\n// //             </ul>\n// //             <p>Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n// //             <p>Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.</p>\n// //           </div>  \n\n// //           <nav className=\"blog-pagination\">\n// //             <a className=\"btn btn-outline-primary\" href=\"#\">Older</a>\n// //             <a className=\"btn btn-outline-secondary disabled\" href=\"#\">Newer</a>\n// //           </nav>\n\n// //         </div>\n\n// //         <aside className=\"col-md-4 blog-sidebar\">\n// //           <div className=\"p-3 mb-3 bg-light rounded\">\n// //             <h4 className=\"font-italic\">About</h4>\n// //             <p className=\"mb-0\">Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n// //           </div>\n\n// //           <div className=\"p-3\">\n// //             <h4 className=\"font-italic\">Archives</h4>\n// //             <ol className=\"list-unstyled mb-0\">\n// //               <li><a href=\"#\">March 2014</a></li>\n// //               <li><a href=\"#\">February 2014</a></li>\n// //               <li><a href=\"#\">January 2014</a></li>\n// //               <li><a href=\"#\">December 2013</a></li>\n// //               <li><a href=\"#\">November 2013</a></li>\n// //               <li><a href=\"#\">October 2013</a></li>\n// //               <li><a href=\"#\">September 2013</a></li>\n// //               <li><a href=\"#\">August 2013</a></li>\n// //               <li><a href=\"#\">July 2013</a></li>\n// //               <li><a href=\"#\">June 2013</a></li>\n// //               <li><a href=\"#\">May 2013</a></li>\n// //               <li><a href=\"#\">April 2013</a></li>\n// //             </ol>\n// //           </div>\n\n// //           <div className=\"p-3\">\n// //             <h4 className=\"font-italic\">Elsewhere</h4>\n// //             <ol className=\"list-unstyled\">\n// //               <li><a href=\"#\">GitHub</a></li>\n// //               <li><a href=\"#\">Twitter</a></li>\n// //               <li><a href=\"#\">Facebook</a></li>\n// //             </ol>\n// //           </div> \n// //         </aside> \n\n// //       </div>\n\n// //     </main>\n\n// //     <footer className=\"blog-footer\">\n// //       <p>Blog template built for <a href=\"https://getbootstrap.com/\">Bootstrap</a> by <a href=\"https://twitter.com/mdo\">@mdo</a>.</p>\n// //       <p>\n// //         <a href=\"#\">Back to top</a>\n// //       </p>\n// //     </footer>\n\n// //     </div>\n\n// //     </div>  </div> \n// <div>\n\n//   {/* <div class=\"row\" style={{ position: \"sticky\", top:\"0\", minHeight: \"50px\"}}>\n\n//   <div class=\"col col-3\">\n//       <div style={{ position: \"fixed\"}}>\n// sdfsdfsd\n// </div>\n//       </div>\n\n//   <div class=\"col col-6\">\n//       <div class=\"col\" style={{ position: \"fixed\", height: \"auto\"}}>\n//       header\n//     </div>\n\n//       </div>\n\n//   <div class=\"col col-3\">\n//       <div lass=\"col\" style={{ position: \"fixed\", height: \"auto\"}}>\n//     <h5>Search</h5>\n//     <input type=\"text\" placeholder=\"Search Here\"></input>\n\n//     </div>\n\n//       </div>\n\n//   </div>\n// <div class=\"container\">\n\n//   <div class=\"row\" style={{ minHeight: \"100px\"}}>\n\n//     <div class=\"col\" style={{ minHeight: \"100px\"}} >\n//       <div class=\"row\" style={{ minHeight: \"100px\"}}> \n\n//       </div>\n\n//       <div class=\"row\">\n//         <div class=\"col-3\">\n\n//         </div>\n//         <div class=\"col col-6\">\n//         <h1>Blog List</h1>\n\n// {blogs\n//     .sort((a, b) => b.id - a.id)\n//    .map((blog) => (\n//        <div key={blog.id}>\n//            <h2>{blog.title}</h2>\n//            <img src={`http://localhost:8000${blog.image}`} style={{ width: \"450px\", maxWidth: \"100%\" }} />\n\n//             <p>{blog.content}</p>\n//             <p>Author: {blog.authorName}</p>\n//            <p>Published Date: {blog.created_at}</p>\n//             <p>Updated Date: {blog.updated_at}</p>\n//             {created_at && <p>Blog Created at Standard: {created_at}</p>}\n//             <button className=\"update\" onClick={() => setSelectedBlogId(blog.id)}>Edit</button>\n//             <button className=\"delete\" onClick={() => handleDelete(blog.id)}>Delete</button>\n//             <hr></hr>\n//         </div>\n\n//     ))}\n//         </div>\n\n//         <div class= \"col-3\"></div>\n//       </div>\n\n//     </div>\n\n//   </div>\n\n//   <div class=\"row\">\n\n//   </div>\n\n// </div> */}\n\n// <div>\n// <Container maxWidth=\"\">\n// <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n//   <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n//     <Tab label=\"Item One\" {...a11yProps(0)} />\n//     <Tab label=\"Item Two\" {...a11yProps(1)} />\n//     <Tab label=\"Item Three\" {...a11yProps(2)} />\n//   </Tabs>\n// </Box>\n// <TabPanel value={value} index={0}>\n//   Item One\n// </TabPanel>\n// <TabPanel value={value} index={1}>\n//   Item Two\n// </TabPanel>\n// <TabPanel value={value} index={2}>\n//   Item Three\n// </TabPanel>\n//     </Container>\n// </div>\n// <Container maxWidth=\"\">\n// <Box sx={{ flexGrow: 1 }}>\n//       <Grid container spacing={3}>\n//         <Grid item xs>\n//           <Item>xs</Item>\n//         </Grid>\n//         <Grid item xs={6}>\n//           <Item>xs=6</Item>\n//         </Grid>\n//         <Grid item xs>\n//           <Item>xs</Item>\n//         </Grid>\n//       </Grid>\n//     </Box>\n\n//  </Container>\n\n// </div>\n// )}\n\n// export default Blog;\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  };\n});\n_c = Item;\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 993,\n    columnNumber: 5\n  }, this);\n}\n_c2 = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\nexport default function BasicTabs() {\n  _s();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              borderBottom: 1,\n              borderColor: 'divider'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: \"sticky\",\n                top: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n              value: value,\n              onChange: handleChange,\n              \"aria-label\": \"basic tabs example\",\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Item One\",\n                ...a11yProps(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Item Two\",\n                ...a11yProps(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"Item Three\",\n                ...a11yProps(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: value,\n            index: 0,\n            children: \"Main menu WikipediaThe Free Encyclopedia Search Create account Log in Personal tools Toggle the table of contents Lorem ipsum 57 languages Article Talk Read Edit View history Tools From Wikipedia, the free encyclopedia \\\"Ipsum\\\" redirects here. For the car, see Toyota Ipsum. An example of the Lorem ipsum placeholder text on a green and white webpage. Using Lorem ipsum to focus attention on graphic elements in a webpage design proposal One of the earliest examples of the Lorem ipsum placeholder text on 1960s advertising. In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available. It is also used to temporarily replace text in a process called greeking, which allows designers to consider the form of a webpage or publication, without the meaning of the text influencing the design. Lorem ipsum is typically a corrupted version of De finibus bonorum et malorum, a 1st-century BC text by the Roman statesman and philosopher Cicero, with words altered, added, and removed to make it nonsensical and improper Latin. Versions of the Lorem ipsum text have been used in typesetting at least since the 1960s, when it was popularized by advertisements for Letraset transfer sheets.[1] Lorem ipsum was introduced to the digital world in the mid-1980s, when Aldus employed it in graphic and word-processing templates for its desktop publishing program PageMaker. Other popular word processors, including Pages and Microsoft Word, have since adopted Lorem ipsum,[2] as have many LaTeX packages,[3][4][5] web content managers such as Joomla! and WordPress, and CSS libraries such as Semantic UI.[6] Example text[edit] A common form of Lorem ipsum reads: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Source text[edit] The Lorem ipsum text is derived from sections 1.10.32 and 1.10.33 of Cicero's 'De finibus bonorum et malorum'.[7][8] The physical source may have been the 1914 Loeb Classical Library edition of De finibus, where the Latin text, presented on the left-hand (even) pages, breaks off on page 34 with \\\"Neque porro quisquam est qui do-\\\" and continues on page 36 with \\\"lorem ipsum ...\\\", suggesting that the galley type of that page was mixed up to make the dummy text seen today.[1] The discovery of the text's origin is attributed to Richard McClintock, a Latin scholar at Hampden\\u2013Sydney College. McClintock connected Lorem ipsum to Cicero's writing sometime before 1982 while searching for instances of the Latin word consectetur, which was rarely used in classical literature.[2] McClintock first published his discovery in a 1994 letter to the editor of Before & After magazine, contesting the editor's earlier claim that Lorem ipsum held no meaning.[2] The relevant section of Cicero as printed in the source is reproduced below with fragments used in Lorem ipsum highlighted. Letters in brackets were added to Lorem ipsum and were not present in the source text: [32] Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit amet consectetur adipisci[ng] velit, sed quia non numquam [do] eius modi tempora inci[di]dunt, ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum[d] exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? [D]Quis autem vel eum i[r]ure reprehenderit, qui in ea voluptate velit esse, quam nihil molestiae consequatur, vel illum, qui dolorem eum fugiat, quo voluptas nulla pariatur? [33] At vero eos et accusamus et iusto odio dignissimos ducimus, qui blanditiis praesentium voluptatum deleniti atque corrupti, quos dolores et quas molestias excepturi sint, obcaecati cupiditate non provident, similique sunt in culpa, qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio, cumque nihil impedit, quo minus id, quod maxime placeat, facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet, ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat. What follows is H. Rackham's translation, as printed in the 1914 Loeb edition, with words at least partially represented in Lorem ipsum highlighted:[8] [32] But I must explain to you how all this mistaken idea of reprobating pleasure and extolling pain arose. To do so, I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure? [33] On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammeled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains. See also[edit] Asemic writing \\u2013 Wordless open semantic form of writing Etaoin shrdlu \\u2013 Common metal-type printing error Hamburgevons \\u2013 Text used as a sample for assessing fonts The quick brown fox jumps over the lazy dog \\u2013 Sentence containing all letters of the alphabet Lenna \\u2013 Standard test image Gibberish \\u2013 Nonsensical language Indian-head test pattern \\u2013 Television test card Utah teapot \\u2013 Computer graphics 3D reference and test model \\\"Hello, World!\\\" program \\u2013 Traditional beginners' computer program Li Europan lingues \\u2013 Placeholder text in Interlingue List of Latin phrases Metasyntactic variable \\u2013 Placeholder term used in computer science Pangram \\u2013 Sentence using every letter of alphabet \\\"To come\\\" \\u2013 Phrase used in publishing to indicate missing material References[edit] ^ Jump up to: a b Cibois, Philippe (2012-06-03). \\\"Lorem ipsum: nouvel \\xE9tat de la question\\\". L'intelligence du monde. L'Institut fran\\xE7ais. Retrieved 2017-04-07. ^ Jump up to: a b c Adams, Cecil (February 2001). \\\"What does the filler text 'lorem ipsum' mean?\\\". The Straight Dope. Retrieved 3 June 2022. ^ \\\"LaTeX lipsum package\\\". Retrieved 23 September 2017. ^ \\\"LaTeX blind text package\\\". Retrieved 23 September 2017. ^ \\\"How to insert sample text into a document in Word\\\". Microsoft Support. 18 September 2011. Archived from the original on 12 January 2012. Retrieved 14 November 2011. ^ \\\"Best Lorem Ipsum Generator\\\". loremgenerator.io. Retrieved 2021-03-14. ^ \\\"Description of the \\\"Lorem ipsum dolor sit amet\\\" text that appears in Word Help\\\". support.microsoft.com. Retrieved 2007-03-22. ^ Jump up to: a b Cicero, Marcus Tullius; Rackham, H. (1914). De finibus bonorum et malorum (in Latin and English). New York: Macmillan Co. p. 36 (Book I ix 32). External links[edit] Lorem ipsum at Wikipedia's sister projects Definitions from Wiktionary Media from Commons Texts from Wikisource The original De finibus bonorum et malorum (Book 1) from Cicero, on Latin WikiSource showvte Standard test items showvte Typography Categories: Filler textLatin words and phrasesNonsenseGibberish languageCicero This page was last edited on 5 April 2023, at 11:58 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License 3.0; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia\\xAE is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policyAbout WikipediaDisclaimersContact WikipediaMobile viewDevelopersStatisticsCookie statement Wikimedia FoundationPowered by MediaWiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: value,\n            index: 1,\n            children: \"Item Two\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: value,\n            index: 2,\n            children: \"Item Three\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1030,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicTabs, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n_c3 = BasicTabs;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"TabPanel\");\n$RefreshReg$(_c3, \"BasicTabs\");","map":{"version":3,"names":["React","styled","PropTypes","Tabs","Tab","Typography","Box","Container","Paper","Grid","jsxDEV","_jsxDEV","Item","_ref","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","_c","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","_c2","propTypes","node","number","isRequired","a11yProps","BasicTabs","_s","setValue","useState","handleChange","event","newValue","maxWidth","container","item","xs","borderBottom","borderColor","style","position","top","onChange","label","_c3","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/blog.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// // import { Link } from \"react-router-dom\";\n// // import Update from \"./update\";\n// // import Create from \"./create\";\n// // import Logout from \"./logout\";\n// // import ImageUploader from \"./storeImagetemporarily\";\n// // import Login from \"./login\";\n// // import { useNavigate } from 'react-router-dom';\n\n\n// import Container from '@mui/material/Container';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import Box from '@mui/material/Box';\n// import Grid from '@mui/material/Grid';\n\n// // function Blog() {\n// //     const [loading, setLoading] = useState(true);\n// //     const [newBlogTitle, setNewBlogTitle] = useState(\"\");\n// //     const [newBlogContent, setNewBlogContent] = useState(\"\");\n// //     const [newBlogAuthorName, setNewBlogAuthorName] = useState(\"\");\n\n// //     const [blogs, setBlogs] = useState([]);\n// //     const [selectedBlogId, setSelectedBlogId] = useState(\"\");\n// //     const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n// //     const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n// //     const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n\n// //     const [newBlogImage, setNewBlogImage] = useState(null);\n// //     const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n\n// //     const [imageUrl, setImageUrl] = useState(null);\n\n// //     const [created_at, setCreatedAt] = useState(\"\");\n// //     const accessToken = localStorage.getItem(\"accessToken\");\n// //     const tokenParts = accessToken.split(\".\");\n\n// //     // Decode the access token payload\n// //     const payload = JSON.parse(atob(tokenParts[1]));\n\n// //     // Get the expiration time from the payload\n// //     const expirationTime = payload.exp;\n\n// //     // Calculate the remaining time in seconds until the token expires\n// //     const currentTime = Math.floor(Date.now() / 1000);\n// //     const remainingTime = expirationTime - currentTime;\n\n// //     console.log(`The access token will expire in ${remainingTime} seconds.`);\n// //     useEffect(() => {\n// //         const fetchBlogs = async () => {\n// //             try {\n// //                 const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n// //                     headers: {\n// //                         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //                     },\n// //                 });\n\n// //                 if (response.status === 401) {\n// //                     console.log(\"token expired and expired time is\", remainingTime);\n\n// //                     // Access token has expired, use refresh token to get a new access token\n// //                     const refreshResponse = await fetch(\"http://localhost:8000/api/refresh/\", {\n// //                         method: \"POST\",\n// //                         headers: {\n// //                             \"Content-Type\": \"application/json\",\n// //                         },\n// //                         body: JSON.stringify({\n// //                             refresh: localStorage.getItem(\"refreshToken\"),\n// //                         }),\n// //                     });\n\n// //                     if (refreshResponse.ok) {\n// //                         const tokens = await refreshResponse.json();\n// //                         localStorage.setItem(\"accessToken\", tokens.access);\n// //                         // Try fetching blogs again with the new access token\n// //                         const newResponse = await fetch(\"http://localhost:8000/api/blog/list/\", {\n// //                             headers: {\n// //                                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //                             },\n// //                         });\n// //                         const data = await newResponse.json();\n// //                         setBlogs(data);\n// //                         setLoading(false);\n// //                     } else {\n// //                         throw new Error(\"Refresh token is invalid\");\n// //                     }\n// //                 } else {\n// //                     const data = await response.json();\n// //                     setBlogs(data);\n// //                     setLoading(false);\n// //                 }\n// //             } catch (error) {\n// //                 console.error(error);\n// //             }\n// //         };\n\n// //         fetchBlogs();\n// //     }, []);\n\n// //     const handleCreate = () => {\n// //         const newBlog = {\n// //             title: newBlogTitle,\n// //             content: newBlogContent,\n// //             authorName: newBlogAuthorName,\n// //             image: newBlogImage, // Add the image file to the new blog object\n// //         };\n\n// //         const formData = new FormData();\n// //         formData.append(\"title\", newBlog.title);\n// //         formData.append(\"content\", newBlog.content);\n// //         formData.append(\"authorName\", newBlog.authorName);\n// //         if(newBlogImage != null){\n// //             formData.append('image', newBlogImage);\n// //         }\n\n// //         fetch(\"http://localhost:8000/api/blog/create/\", {\n// //             method: \"POST\",\n// //             headers: {\n// //                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //             },\n// //             body: formData, // Use the form data instead of JSON.stringify\n// //         })\n// //             .then((response) => response.json())\n// //             .then((data) => {\n// //                 setBlogs([...blogs, data]);\n// //                 setNewBlogTitle(\"\");\n// //                 setNewBlogContent(\"\");\n// //                 setNewBlogAuthorName(\"\");\n// //                 setNewBlogImage(null); // Reset the image state after submitting the form\n// //             });\n// //     };\n\n// //     const handleDelete = (id) => {\n// //         if (window.confirm(\"Are you sure you want to delete this post?\")) {\n// //             fetch(`http://localhost:8000/api/blog/delete/${id}/`, {\n// //                 method: \"DELETE\",\n// //                 headers: {\n// //                     \"Content-Type\": \"application/json\",\n// //                     Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //                 },\n// //             })\n// //                 .then((response) => {\n// //                     if (response.ok) {\n// //                         setBlogs(blogs.filter((blog) => blog.id !== id));\n// //                     } else {\n// //                         throw new Error(\"Delete failed\");\n// //                     }\n// //                 })\n// //                 .catch((error) => {\n// //                     console.error(error);\n// //                 });\n// //         }\n// //     };\n\n// //     const handleUpdate = () => {\n// //         const updatedBlog = {\n// //             id: selectedBlogId,\n// //             title: updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle,\n// //             content: updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent,\n// //             authorName: updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName,\n// //         };\n\n// //         const formData = new FormData();\n// //         formData.append(\"title\", updatedBlog.title);\n// //         formData.append(\"content\", updatedBlog.content);\n// //         formData.append(\"authorName\", updatedBlog.authorName);\n// //         if(updatedBlogImage != null){\n// //             formData.append('image', updatedBlogImage);\n// //         }\n\n// //         fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n// //             method: \"PUT\",\n// //             headers: {\n// //                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //             },\n// //             body: formData,\n// //         })\n// //             .then((response) => response.json())\n// //             .then((data) => {\n// //                 const index = blogs.findIndex((blog) => blog.id === data.id);\n// //                 const newBlogs = [...blogs];\n// //                 newBlogs[index] = data;\n// //                 setBlogs(newBlogs);\n// //                 setSelectedBlogId(\"\");\n// //                 setUpdatedBlogTitle(undefined);\n// //                 setUpdatedBlogContent(undefined);\n// //                 setUpdatedBlogAuthorName(undefined);\n// //                 setUpdatedBlogImage(null);\n// //             })\n// //             .catch((error) => console.error(error));\n// //     };\n    \n// //   const navigate = useNavigate();\n\n// //   const  handleLogout = () => {\n// //     if (window.confirm(\"Are you sure you want to logout?\")) {\n// //     // Remove access token and refresh token from local storage\n// //     localStorage.removeItem('accessToken');\n// //     localStorage.removeItem('refreshToken');\n\n// //     // Navigate to the login page\n  \n// //     navigate('/login');\n// //   } }\n\n// //     if (loading) {\n// //         return <span class=\"loader\"></span>\n// //     }\n\n// //     return (\n\n// //         <div>\n\n\n// //         <div style={{ display: \"flex\", justifyContent: \"space-around\" , flexWrap: \"wrap-reverse\" , width: \"100%\", padding: \"0 55px\", margin: \"0 35px\"}}>\n\n// //         <div style={{ margin: \"0px\", width: \"50%\"}}>\n          \n            \n// //             <div>\n\n\n\n// //                 <h1>Blog List</h1>\n\n// //                 {blogs\n// //                     .sort((a, b) => b.id - a.id)\n// //                     .map((blog) => (\n// //                         <div key={blog.id}>\n// //                             <h2>{blog.title}</h2>\n// //                             <img src={`http://localhost:8000${blog.image}`} style={{ width: \"450px\", maxWidth: \"100%\" }} />\n\n// //                             <p>{blog.content}</p>\n// //                             <p>Author: {blog.authorName}</p>\n// //                             <p>Published Date: {blog.created_at}</p>\n// //                             <p>Updated Date: {blog.updated_at}</p>\n// //                             {created_at && <p>Blog Created at Standard: {created_at}</p>}\n// //                             <button className=\"update\" onClick={() => setSelectedBlogId(blog.id)}>Edit</button>\n// //                             <button className=\"delete\" onClick={() => handleDelete(blog.id)}>Delete</button>\n// //                         </div>\n// //                     ))}\n// //             </div>\n// //         </div>\n\n// //         <div style={{margin: \"0px\" ,width: \"50%\"}}> \n\n// //         <button onClick={handleLogout}>Logout</button>\n// //         <div style={{ position: \"fixed\"}}>\n// //         <h2>Create New Blog</h2>\n// //                     <label>\n// //                         Title: </label><br></br>\n// //                         <input type=\"text\" value={newBlogTitle} onChange={(event) => setNewBlogTitle(event.target.value)} />\n                   \n// //                     <br />\n// //                     <label>\n// //                         Content: </label> <br></br>\n// //                         <textarea value={newBlogContent} onChange={(event) => setNewBlogContent(event.target.value)} />\n                   \n// //                     <br />\n// //                     <label>\n// //                         Author Name:    </label>  <br></br>\n// //                         <input type=\"text\" value={newBlogAuthorName} onChange={(event) => setNewBlogAuthorName(event.target.value)} />\n                 \n\n// //                     <div>\n// //                         <label htmlFor=\"newBlogImage\">Image:</label> \n// //                         <input style={{backgroundColor: \"transparent\"}} type=\"file\" id=\"newBlogImage\" name=\"newBlogImage\" onChange={(event) => setNewBlogImage(event.target.files[0])} />\n// //                     </div>\n// //                     <button  className=\"create\" onClick={handleCreate}>Create Blog</button>\n\n\n// //                                     {/* <UpdateBlog/> */}\n// //                 {selectedBlogId !== \"\" && (\n// //                     <div style={{ width: \"auto\"}}>\n// //                         <h2>Update Blog \"{blogs.find((blog) => blog.id === selectedBlogId).title}\"</h2>\n\n// //                         <div>\n// //                             <label htmlFor=\"blog-title\">Title:</label> <br></br>\n// //                             <input type=\"text\" id=\"blog-title\" value={updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle} onChange={(e) => setUpdatedBlogTitle(e.target.value)} />\n// //                         </div>\n\n// //                         <div>\n// //                             <label htmlFor=\"blog-content\">Content:</label> <br></br>\n// //                             <textarea id=\"blog-content\" value={updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent} onChange={(e) => setUpdatedBlogContent(e.target.value)} />\n// //                         </div>\n\n// //                         <div>\n// //                             <label htmlFor=\"blog-author-name\">Author Name:</label> <br></br>\n// //                             <input\n// //                                 type=\"text\"\n// //                                 id=\"blog-author-name\"\n// //                                 value={updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName}\n// //                                 onChange={(e) => setUpdatedBlogAuthorName(e.target.value)}\n// //                             />\n// //                         </div>\n\n// //                         <div>\n// //                             <label htmlFor=\"updatedBlogImage\">Image:</label>\n// //                             <img src={`http://localhost:8000${blogs.find((blog) => blog.id === selectedBlogId).image}`} style={{ width: \"50px\", maxWidth: \"100%\" }} />\n// //                             <input style={{backgroundColor: \"transparent\"}} type=\"file\" id=\"updatedBlogImage\" name=\"updatedBlogImage\" onChange={(event) => setUpdatedBlogImage(event.target.files[0])} />\n// //                         </div>\n                    \n\n// //                         <button className=\"update\"  onClick={handleUpdate}>Update Blog</button>\n// //                         <button className=\"cancel\" onClick={() => setSelectedBlogId(\"\")}>Cancel</button>\n// //                     </div>\n// //                 )}\n\n               \n// //         </div>\n        \n// //         </div>\n// //         </div>\n// //         </div>\n// //     );\n// // }\n// // export default Blog;\n\n\n// import { Button } from 'react-bootstrap';\n// import Typography from '@mui/material/Typography';\n// import Breadcrumbs from '@mui/material/Breadcrumbs';\n// // import Link from '@mui/material/Link';\n// import HomeIcon from '@mui/icons-material/Home';\n// import WhatshotIcon from '@mui/icons-material/Whatshot';\n// import GrainIcon from '@mui/icons-material/Grain';\n// import SignUp from './signup';\n// import {Link, useNavigate} from \"react-router-dom\";\n// import { styled } from '@mui/material/styles';\n// import Paper from '@mui/material/Paper';\n// const Item = styled(Paper)(({ theme }) => ({\n//     backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n//     ...theme.typography.body2,\n//     padding: theme.spacing(1),\n//     textAlign: 'center',\n//     color: theme.palette.text.secondary,\n//   }));\n//   import PropTypes from 'prop-types';\n//   import Tabs from '@mui/material/Tabs';\n//   import Tab from '@mui/material/Tab';\n//   import Typography from '@mui/material/Typography';\n//   import Box from '@mui/material/Box';\n  \n// function Blog(){\n\n//     const [loading, setLoading] = useState(true);\n//     const [newBlogTitle, setNewBlogTitle] = useState(\"\");\n//     const [newBlogContent, setNewBlogContent] = useState(\"\");\n//     const [newBlogAuthorName, setNewBlogAuthorName] = useState(\"\");\n\n//     const [blogs, setBlogs] = useState([]);\n//     const [selectedBlogId, setSelectedBlogId] = useState(\"\");\n//     const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n//     const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n//     const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n\n//     const [newBlogImage, setNewBlogImage] = useState(null);\n//     const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n\n//     const [imageUrl, setImageUrl] = useState(null);\n\n//     const [created_at, setCreatedAt] = useState(\"\");\n//     const accessToken = localStorage.getItem(\"accessToken\");\n//     const tokenParts = accessToken.split(\".\");\n\n//     // Decode the access token payload\n//     const payload = JSON.parse(atob(tokenParts[1]));\n\n//     // Get the expiration time from the payload\n//     const expirationTime = payload.exp;\n\n//     // Calculate the remaining time in seconds until the token expires\n//     const currentTime = Math.floor(Date.now() / 1000);\n//     const remainingTime = expirationTime - currentTime;\n\n//     console.log(`The access token will expire in ${remainingTime} seconds.`);\n//     useEffect(() => {\n//         const fetchBlogs = async () => {\n//             try {\n//                 const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//                     headers: {\n//                         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                     },\n//                 });\n\n//                 if (response.status === 401) {\n//                     console.log(\"token expired and expired time is\", remainingTime);\n\n//                     // Access token has expired, use refresh token to get a new access token\n//                     const refreshResponse = await fetch(\"http://localhost:8000/api/refresh/\", {\n//                         method: \"POST\",\n//                         headers: {\n//                             \"Content-Type\": \"application/json\",\n//                         },\n//                         body: JSON.stringify({\n//                             refresh: localStorage.getItem(\"refreshToken\"),\n//                         }),\n//                     });\n\n//                     if (refreshResponse.ok) {\n//                         const tokens = await refreshResponse.json();\n//                         localStorage.setItem(\"accessToken\", tokens.access);\n//                         // Try fetching blogs again with the new access token\n//                         const newResponse = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//                             headers: {\n//                                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                             },\n//                         });\n//                         const data = await newResponse.json();\n//                         setBlogs(data);\n//                         setLoading(false);\n//                     } else {\n//                         throw new Error(\"Refresh token is invalid\");\n//                     }\n//                 } else {\n//                     const data = await response.json();\n//                     setBlogs(data);\n//                     setLoading(false);\n//                 }\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         };\n\n//         fetchBlogs();\n//     }, []);\n\n//     const handleCreate = () => {\n//         const newBlog = {\n//             title: newBlogTitle,\n//             content: newBlogContent,\n//             authorName: newBlogAuthorName,\n//             image: newBlogImage, // Add the image file to the new blog object\n//         };\n\n//         const formData = new FormData();\n//         formData.append(\"title\", newBlog.title);\n//         formData.append(\"content\", newBlog.content);\n//         formData.append(\"authorName\", newBlog.authorName);\n//         if(newBlogImage != null){\n//             formData.append('image', newBlogImage);\n//         }\n\n//         fetch(\"http://localhost:8000/api/blog/create/\", {\n//             method: \"POST\",\n//             headers: {\n//                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//             },\n//             body: formData, // Use the form data instead of JSON.stringify\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 setBlogs([...blogs, data]);\n//                 setNewBlogTitle(\"\");\n//                 setNewBlogContent(\"\");\n//                 setNewBlogAuthorName(\"\");\n//                 setNewBlogImage(null); // Reset the image state after submitting the form\n//             });\n//     };\n\n//     const handleDelete = (id) => {\n//         if (window.confirm(\"Are you sure you want to delete this post?\")) {\n//             fetch(`http://localhost:8000/api/blog/delete/${id}/`, {\n//                 method: \"DELETE\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                 },\n//             })\n//                 .then((response) => {\n//                     if (response.ok) {\n//                         setBlogs(blogs.filter((blog) => blog.id !== id));\n//                     } else {\n//                         throw new Error(\"Delete failed\");\n//                     }\n//                 })\n//                 .catch((error) => {\n//                     console.error(error);\n//                 });\n//         }\n//     };\n\n//     const handleUpdate = () => {\n//         const updatedBlog = {\n//             id: selectedBlogId,\n//             title: updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle,\n//             content: updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent,\n//             authorName: updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName,\n//         };\n\n//         const formData = new FormData();\n//         formData.append(\"title\", updatedBlog.title);\n//         formData.append(\"content\", updatedBlog.content);\n//         formData.append(\"authorName\", updatedBlog.authorName);\n//         if(updatedBlogImage != null){\n//             formData.append('image', updatedBlogImage);\n//         }\n\n//         fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n//             method: \"PUT\",\n//             headers: {\n//                 Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//             },\n//             body: formData,\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 const index = blogs.findIndex((blog) => blog.id === data.id);\n//                 const newBlogs = [...blogs];\n//                 newBlogs[index] = data;\n//                 setBlogs(newBlogs);\n//                 setSelectedBlogId(\"\");\n//                 setUpdatedBlogTitle(undefined);\n//                 setUpdatedBlogContent(undefined);\n//                 setUpdatedBlogAuthorName(undefined);\n//                 setUpdatedBlogImage(null);\n//             })\n//             .catch((error) => console.error(error));\n//     };\n    \n//   const navigate = useNavigate();\n\n//   const  handleLogout = () => {\n//     if (window.confirm(\"Are you sure you want to logout?\")) {\n//     // Remove access token and refresh token from local storage\n//     localStorage.removeItem('accessToken');\n//     localStorage.removeItem('refreshToken');\n\n//     // Navigate to the login page\n  \n//     navigate('/login');\n//   } }\n\n//     if (loading) {\n//         return <span class=\"loader\"></span>\n//     }\n\n//     return(\n\n// //         <div>\n\n// //             <div class=\"container\">\n\n// // <nav class=\"navbar navbar-light\">\n// // <div class=\"col\" role=\"presentation\">\n// //       <Breadcrumbs aria-label=\"breadcrumb\">\n// //         <Link\n// //           underline=\"hover\"\n// //           sx={{ display: 'flex', alignItems: 'center' }}\n// //           color=\"inherit\"\n// //           href=\"/\"\n// //         >\n// //           <HomeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\n// //           MUI\n// //         </Link>\n// //         <Link\n// //           underline=\"hover\"\n// //           sx={{ display: 'flex', alignItems: 'center' }}\n// //           color=\"inherit\"\n// //           href=\"/material-ui/getting-started/installation/\"\n// //         >\n// //           <WhatshotIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\n// //           Core\n// //         </Link>\n// //         <Typography\n// //           sx={{ display: 'flex', alignItems: 'center' }}\n// //           color=\"text.primary\"\n// //         >\n// //           <GrainIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\n// //           Breadcrumb\n// //         </Typography>\n// //       </Breadcrumbs>\n// //     </div>\n// // </nav>\n\n// //             </div>\n\n\n// //             <div class=\"container\">\n\n// //                 <div class=\"row\">\n               \n \n// //                 </div>\n// //   <div class=\"row\">\n// //     <div class=\"col col-lg-9\">\n      \n// //      <div class=\"container\">\n\n// //      <div class=\"col\">\n// //         <img src=\"https://unsplash.it/500\" />\n// //       </div>\n\n\n// //       <div class=\"col col-lg-9\">\n// //        <div class=\"row\">\n        \n// //         <div class=\"col\">\n// //         adsfasfa\n// //         </div>\n\n// //         <div class=\"col\">\n// //         adsfasfa\n// //         </div>\n\n// //        </div>\n// //       </div>\n\n// //      </div>\n\n// //     </div>\n\n// //     <div class=\"col col-lg-3\">\n// //           <div>\n// //             <input placeholder='Search Blogs Here.....'></input>\n// //             <button>Search</button>\n// //             </div>\n// //           <div>Search List</div>\n// //     </div>\n// //   </div>\n// // </div>\n// //         </div>\n\n// // <div>\n\n// // <div className=\"container\">\n// //       <header className=\"blog-header py-3\">\n// //         <div className=\"row flex-nowrap justify-content-between align-items-center\">\n// //           <div className=\"col-4 pt-1\">\n// //             <a className=\"text-muted\" href=\"#\">Subscribe</a>\n// //           </div>\n// //           <div className=\"col-4 text-center\">\n// //             <a className=\"blog-header-logo text-dark\" href=\"#\">Large</a>\n// //           </div>\n// //           <div className=\"col-4 d-flex justify-content-end align-items-center\">\n// //             <a className=\"text-muted\" href=\"#\">\n\n// //             </a>\n// //             <Link to=\"/signup\"> <a className=\"btn btn-sm btn-outline-secondary\" href=\"#\">Sign up</a> </Link>\n// //              <a className=\"btn btn-sm btn-outline-secondary\" onClick={handleLogout}>Logout</a> \n// //           </div>\n// //         </div>\n// //       </header>\n\n// //       <div class=\"nav-scroller py-1 mb-2\">\n\n// //         <nav className=\"nav d-flex justify-content-between\">\n// //           <a className=\"p-2 text-muted\" href=\"#\">World</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">U.S.</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Technology</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Design</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Culture</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Business</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Politics</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Opinion</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Science</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Health</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Style</a>\n// //           <a className=\"p-2 text-muted\" href=\"#\">Travel</a>\n// //         </nav>\n\n// //       </div>\n\n// //       <div className=\"jumbotron p-3 p-md-5 text-white rounded bg-dark\">\n\n// //         <div className=\"col-md-6 px-0\">\n// //           <h1 className=\"display-4 font-italic\">Title of a longer featured blog post</h1>\n// //           <p className=\"lead my-3\">Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents.</p>\n// //           <p className=\"lead mb-0\"><a href=\"#\" class=\"text-white font-weight-bold\">Continue reading...</a></p>\n// //         </div>\n\n// //       </div>\n\n// //       <div className=\"row mb-2\">\n\n// //         <div className=\"col-md-6\">\n// //           <div className=\"card flex-md-row mb-4 box-shadow h-md-250\">\n// //             <div className=\"card-body d-flex flex-column align-items-start\">\n// //               <strong className=\"d-inline-block mb-2 text-primary\">World</strong>\n// //               <h3 className=\"mb-0\">\n// //                 <a className=\"text-dark\" href=\"#\">Featured post</a>\n// //               </h3>\n// //               <div className=\"mb-1 text-muted\">Nov 12</div>\n// //               <p className=\"card-text mb-auto\">This is a wider card with supporting text below as a natural lead-in to additional content.</p>\n// //               <a href=\"#\">Continue reading</a>\n// //             </div>\n// //             <img className=\"card-img-right flex-auto d-none d-md-block\" src=\"https://unsplash.it/200\" alt=\"Card image cap\"></img>\n// //           </div>\n\n// //         </div>\n\n\n// //         <div className=\"col-md-6\">\n// //           <div className=\"card flex-md-row mb-4 box-shadow h-md-250\">\n// //             <div className=\"card-body d-flex flex-column align-items-start\">\n// //               <strong className=\"d-inline-block mb-2 text-primary\">World</strong>\n// //               <h3 className=\"mb-0\">\n// //                 <a className=\"text-dark\" href=\"#\">Featured post</a>\n// //               </h3>\n// //               <div className=\"mb-1 text-muted\">Nov 12</div>\n// //               <p className=\"card-text mb-auto\">This is a wider card with supporting text below as a natural lead-in to additional content.</p>\n// //               <a href=\"#\">Continue reading</a>\n// //             </div>\n// //             <img className=\"card-img-right flex-auto d-none d-md-block\" src=\"https://unsplash.it/200\" alt=\"Card image cap\"></img>\n// //           </div>\n\n// //         </div>\n\n\n\n// //     <main className=\"container\">\n// //       <div className=\"row\">\n// //         <div className=\"col-md-8 blog-main\">\n// //           <h3 className=\"pb-3 mb-4 font-italic border-bottom\">\n// //             From the Firehose\n// //           </h3>\n\n// //           <div className=\"blog-post\">\n// //             <h2 className=\"blog-post-title\">Sample blog post</h2>\n// //             <p className=\"blog-post-meta\">January 1, 2014 by <a href=\"#\">Mark</a></p>\n\n// //             <p>This blog post shows a few different types of content that's supported and styled with Bootstrap. Basic typography, images, and code are all supported.</p>\n// //             <hr></hr>\n// //             <p>Cum sociis natoque penatibus et magnis <a href=\"#\">dis parturient montes</a>, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.</p>\n// //             <blockquote>\n// //               <p>Curabitur blandit tempus porttitor. <strong>Nullam quis risus eget urna mollis</strong> ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n// //             </blockquote>\n// //             <p>Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n// //             <h2>Heading</h2>\n// //             <p>Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n// //             <h3>Sub-heading</h3>\n// //             <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</p>\n// //             <pre><code>Example code block</code></pre>\n// //             <p>Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.</p>\n// //             <h3>Sub-heading</h3>\n// //             <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p>\n// //             <ul>\n// //               <li>Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</li>\n// //               <li>Donec id elit non mi porta gravida at eget metus.</li>\n// //               <li>Nulla vitae elit libero, a pharetra augue.</li>\n// //             </ul>\n// //             <p>Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.</p>\n// //             <ol>\n// //               <li>Vestibulum id ligula porta felis euismod semper.</li>\n// //               <li>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</li>\n// //               <li>Maecenas sed diam eget risus varius blandit sit amet non magna.</li>\n// //             </ol>\n// //             <p>Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.</p>\n// //           </div>\n\n// //           <div className=\"blog-post\">\n// //             <h2 className=\"blog-post-title\">Another blog post</h2>\n// //             <p className=\"blog-post-meta\">December 23, 2013 by <a href=\"#\">Jacob</a></p>\n\n// //             <p>Cum sociis natoque penatibus et magnis <a href=\"#\">dis parturient montes</a>, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.</p>\n// //             <blockquote>\n// //               <p>Curabitur blandit tempus porttitor. <strong>Nullam quis risus eget urna mollis</strong> ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n// //             </blockquote>\n// //             <p>Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n// //             <p>Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n// //           </div>\n\n// //           <div className=\"blog-post\">\n// //             <h2 className=\"blog-post-title\">New feature</h2>\n// //             <p className=\"blog-post-meta\">December 14, 2013 by <a href=\"#\">Chris</a></p>\n\n// //             <p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p>\n// //             <ul>\n// //               <li>Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</li>\n// //               <li>Donec id elit non mi porta gravida at eget metus.</li>\n// //               <li>Nulla vitae elit libero, a pharetra augue.</li>\n// //             </ul>\n// //             <p>Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n// //             <p>Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.</p>\n// //           </div>  \n        \n// //           <nav className=\"blog-pagination\">\n// //             <a className=\"btn btn-outline-primary\" href=\"#\">Older</a>\n// //             <a className=\"btn btn-outline-secondary disabled\" href=\"#\">Newer</a>\n// //           </nav>\n\n// //         </div>\n\n// //         <aside className=\"col-md-4 blog-sidebar\">\n// //           <div className=\"p-3 mb-3 bg-light rounded\">\n// //             <h4 className=\"font-italic\">About</h4>\n// //             <p className=\"mb-0\">Etiam porta <em>sem malesuada magna</em> mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.</p>\n// //           </div>\n\n// //           <div className=\"p-3\">\n// //             <h4 className=\"font-italic\">Archives</h4>\n// //             <ol className=\"list-unstyled mb-0\">\n// //               <li><a href=\"#\">March 2014</a></li>\n// //               <li><a href=\"#\">February 2014</a></li>\n// //               <li><a href=\"#\">January 2014</a></li>\n// //               <li><a href=\"#\">December 2013</a></li>\n// //               <li><a href=\"#\">November 2013</a></li>\n// //               <li><a href=\"#\">October 2013</a></li>\n// //               <li><a href=\"#\">September 2013</a></li>\n// //               <li><a href=\"#\">August 2013</a></li>\n// //               <li><a href=\"#\">July 2013</a></li>\n// //               <li><a href=\"#\">June 2013</a></li>\n// //               <li><a href=\"#\">May 2013</a></li>\n// //               <li><a href=\"#\">April 2013</a></li>\n// //             </ol>\n// //           </div>\n\n// //           <div className=\"p-3\">\n// //             <h4 className=\"font-italic\">Elsewhere</h4>\n// //             <ol className=\"list-unstyled\">\n// //               <li><a href=\"#\">GitHub</a></li>\n// //               <li><a href=\"#\">Twitter</a></li>\n// //               <li><a href=\"#\">Facebook</a></li>\n// //             </ol>\n// //           </div> \n// //         </aside> \n\n// //       </div>\n\n// //     </main>\n\n// //     <footer className=\"blog-footer\">\n// //       <p>Blog template built for <a href=\"https://getbootstrap.com/\">Bootstrap</a> by <a href=\"https://twitter.com/mdo\">@mdo</a>.</p>\n// //       <p>\n// //         <a href=\"#\">Back to top</a>\n// //       </p>\n// //     </footer>\n\n// //     </div>\n  \n\n// //     </div>  </div> \n// <div>\n\n//   {/* <div class=\"row\" style={{ position: \"sticky\", top:\"0\", minHeight: \"50px\"}}>\n   \n//   <div class=\"col col-3\">\n//       <div style={{ position: \"fixed\"}}>\n// sdfsdfsd\n// </div>\n//       </div>\n\n\n//   <div class=\"col col-6\">\n//       <div class=\"col\" style={{ position: \"fixed\", height: \"auto\"}}>\n//       header\n//     </div>\n    \n//       </div>\n\n//   <div class=\"col col-3\">\n//       <div lass=\"col\" style={{ position: \"fixed\", height: \"auto\"}}>\n//     <h5>Search</h5>\n//     <input type=\"text\" placeholder=\"Search Here\"></input>\n\n//     </div>\n\n//       </div>\n\n//   </div>\n// <div class=\"container\">\n\n\n//   <div class=\"row\" style={{ minHeight: \"100px\"}}>\n\n//     <div class=\"col\" style={{ minHeight: \"100px\"}} >\n//       <div class=\"row\" style={{ minHeight: \"100px\"}}> \n      \n\n\n\n//       </div>\n\n//       <div class=\"row\">\n//         <div class=\"col-3\">\n\n//         </div>\n//         <div class=\"col col-6\">\n//         <h1>Blog List</h1>\n\n// {blogs\n//     .sort((a, b) => b.id - a.id)\n//    .map((blog) => (\n//        <div key={blog.id}>\n//            <h2>{blog.title}</h2>\n//            <img src={`http://localhost:8000${blog.image}`} style={{ width: \"450px\", maxWidth: \"100%\" }} />\n\n//             <p>{blog.content}</p>\n//             <p>Author: {blog.authorName}</p>\n//            <p>Published Date: {blog.created_at}</p>\n//             <p>Updated Date: {blog.updated_at}</p>\n//             {created_at && <p>Blog Created at Standard: {created_at}</p>}\n//             <button className=\"update\" onClick={() => setSelectedBlogId(blog.id)}>Edit</button>\n//             <button className=\"delete\" onClick={() => handleDelete(blog.id)}>Delete</button>\n//             <hr></hr>\n//         </div>\n       \n//     ))}\n//         </div>\n\n//         <div class= \"col-3\"></div>\n//       </div>\n\n//     </div>\n\n\n\n\n//   </div>\n\n//   <div class=\"row\">\n\n\n\n\n\n\n\n\n//   </div>\n\n \n// </div> */}\n\n// <div>\n// <Container maxWidth=\"\">\n// <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n//   <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n//     <Tab label=\"Item One\" {...a11yProps(0)} />\n//     <Tab label=\"Item Two\" {...a11yProps(1)} />\n//     <Tab label=\"Item Three\" {...a11yProps(2)} />\n//   </Tabs>\n// </Box>\n// <TabPanel value={value} index={0}>\n//   Item One\n// </TabPanel>\n// <TabPanel value={value} index={1}>\n//   Item Two\n// </TabPanel>\n// <TabPanel value={value} index={2}>\n//   Item Three\n// </TabPanel>\n//     </Container>\n// </div>\n// <Container maxWidth=\"\">\n// <Box sx={{ flexGrow: 1 }}>\n//       <Grid container spacing={3}>\n//         <Grid item xs>\n//           <Item>xs</Item>\n//         </Grid>\n//         <Grid item xs={6}>\n//           <Item>xs=6</Item>\n//         </Grid>\n//         <Grid item xs>\n//           <Item>xs</Item>\n//         </Grid>\n//       </Grid>\n//     </Box>\n\n//  </Container>\n\n// </div>\n// )}\n\n// export default Blog;\n\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n  \n\nfunction TabPanel(props) {\n\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function BasicTabs() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container maxWidth=\"\">\n        <Grid container spacing={3}>\n  <Grid item xs>\n    <Item>Profile</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>\n    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <div style={{ position: \"sticky\", top: 0}}></div>\n  <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n    <Tab label=\"Item One\" {...a11yProps(0)} />\n    <Tab label=\"Item Two\" {...a11yProps(1)} />\n    <Tab label=\"Item Three\" {...a11yProps(2)} />\n  </Tabs>\n\n</Box>\n<TabPanel value={value} index={0}>\nMain menu\n \n WikipediaThe Free Encyclopedia\n Search\n Create account\n Log in\n \n Personal tools\n Toggle the table of contents\n Lorem ipsum\n \n 57 languages\n Article\n Talk\n Read\n Edit\n View history\n  \n Tools\n From Wikipedia, the free encyclopedia\n \"Ipsum\" redirects here. For the car, see Toyota Ipsum.\n An example of the Lorem ipsum placeholder text on a green and white webpage.\n Using Lorem ipsum to focus attention on graphic elements in a webpage design proposal\n \n One of the earliest examples of the Lorem ipsum placeholder text on 1960s advertising.\n In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available. It is also used to temporarily replace text in a process called greeking, which allows designers to consider the form of a webpage or publication, without the meaning of the text influencing the design.\n \n Lorem ipsum is typically a corrupted version of De finibus bonorum et malorum, a 1st-century BC text by the Roman statesman and philosopher Cicero, with words altered, added, and removed to make it nonsensical and improper Latin.\n \n Versions of the Lorem ipsum text have been used in typesetting at least since the 1960s, when it was popularized by advertisements for Letraset transfer sheets.[1] Lorem ipsum was introduced to the digital world in the mid-1980s, when Aldus employed it in graphic and word-processing templates for its desktop publishing program PageMaker. Other popular word processors, including Pages and Microsoft Word, have since adopted Lorem ipsum,[2] as have many LaTeX packages,[3][4][5] web content managers such as Joomla! and WordPress, and CSS libraries such as Semantic UI.[6]\n \n Example text[edit]\n A common form of Lorem ipsum reads:\n \n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n Source text[edit]\n The Lorem ipsum text is derived from sections 1.10.32 and 1.10.33 of Cicero's 'De finibus bonorum et malorum'.[7][8] The physical source may have been the 1914 Loeb Classical Library edition of De finibus, where the Latin text, presented on the left-hand (even) pages, breaks off on page 34 with \"Neque porro quisquam est qui do-\" and continues on page 36 with \"lorem ipsum ...\", suggesting that the galley type of that page was mixed up to make the dummy text seen today.[1]\n \n The discovery of the text's origin is attributed to Richard McClintock, a Latin scholar at Hampden–Sydney College. McClintock connected Lorem ipsum to Cicero's writing sometime before 1982 while searching for instances of the Latin word consectetur, which was rarely used in classical literature.[2] McClintock first published his discovery in a 1994 letter to the editor of Before & After magazine, contesting the editor's earlier claim that Lorem ipsum held no meaning.[2]\n \n The relevant section of Cicero as printed in the source is reproduced below with fragments used in Lorem ipsum highlighted. Letters in brackets were added to Lorem ipsum and were not present in the source text:\n \n [32] Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit amet consectetur adipisci[ng] velit, sed quia non numquam [do] eius modi tempora inci[di]dunt, ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum[d] exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? [D]Quis autem vel eum i[r]ure reprehenderit, qui in ea voluptate velit esse, quam nihil molestiae consequatur, vel illum, qui dolorem eum fugiat, quo voluptas nulla pariatur? [33] At vero eos et accusamus et iusto odio dignissimos ducimus, qui blanditiis praesentium voluptatum deleniti atque corrupti, quos dolores et quas molestias excepturi sint, obcaecati cupiditate non provident, similique sunt in culpa, qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio, cumque nihil impedit, quo minus id, quod maxime placeat, facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet, ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.\n What follows is H. Rackham's translation, as printed in the 1914 Loeb edition, with words at least partially represented in Lorem ipsum highlighted:[8]\n \n [32] But I must explain to you how all this mistaken idea of reprobating pleasure and extolling pain arose. To do so, I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure? [33] On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammeled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.\n See also[edit]\n Asemic writing – Wordless open semantic form of writing\n Etaoin shrdlu – Common metal-type printing error\n Hamburgevons – Text used as a sample for assessing fonts\n The quick brown fox jumps over the lazy dog – Sentence containing all letters of the alphabet\n Lenna – Standard test image\n Gibberish – Nonsensical language\n Indian-head test pattern – Television test card\n Utah teapot – Computer graphics 3D reference and test model\n \"Hello, World!\" program – Traditional beginners' computer program\n Li Europan lingues – Placeholder text in Interlingue\n List of Latin phrases\n Metasyntactic variable – Placeholder term used in computer science\n Pangram – Sentence using every letter of alphabet\n \"To come\" – Phrase used in publishing to indicate missing material\n References[edit]\n ^ Jump up to: a b Cibois, Philippe (2012-06-03). \"Lorem ipsum: nouvel état de la question\". L'intelligence du monde. L'Institut français. Retrieved 2017-04-07.\n ^ Jump up to: a b c Adams, Cecil (February 2001). \"What does the filler text 'lorem ipsum' mean?\". The Straight Dope. Retrieved 3 June 2022.\n ^ \"LaTeX lipsum package\". Retrieved 23 September 2017.\n ^ \"LaTeX blind text package\". Retrieved 23 September 2017.\n ^ \"How to insert sample text into a document in Word\". Microsoft Support. 18 September 2011. Archived from the original on 12 January 2012. Retrieved 14 November 2011.\n ^ \"Best Lorem Ipsum Generator\". loremgenerator.io. Retrieved 2021-03-14.\n ^ \"Description of the \"Lorem ipsum dolor sit amet\" text that appears in Word Help\". support.microsoft.com. Retrieved 2007-03-22.\n ^ Jump up to: a b Cicero, Marcus Tullius; Rackham, H. (1914). De finibus bonorum et malorum (in Latin and English). New York: Macmillan Co. p. 36 (Book I ix 32).\n External links[edit]\n Lorem ipsum\n at Wikipedia's sister projects\n Definitions from Wiktionary\n Media from Commons\n Texts from Wikisource\n The original De finibus bonorum et malorum (Book 1) from Cicero, on Latin WikiSource\n showvte\n Standard test items\n showvte\n Typography\n Categories: Filler textLatin words and phrasesNonsenseGibberish languageCicero\n This page was last edited on 5 April 2023, at 11:58 (UTC).\n Text is available under the Creative Commons Attribution-ShareAlike License 3.0; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.\n Privacy policyAbout WikipediaDisclaimersContact WikipediaMobile viewDevelopersStatisticsCookie statement\n Wikimedia FoundationPowered by MediaWiki\n</TabPanel>\n<TabPanel value={value} index={1}>\n  Item Two\n</TabPanel>\n<TabPanel value={value} index={2}>\n  Item Three\n</TabPanel>\n\n    </Item>\n  </Grid>\n  <Grid item xs>\n    <Item>Search</Item>\n  </Grid>\n</Grid>\n    </Container>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAGA;;AAEA;;AAGA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAGA;;AAEA;AACA;;AAKA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAKA;;AAEA;;AASA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAGA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,IAAI,GAAGX,MAAM,CAACO,KAAK,CAAC,CAACK,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAAA,OAAM;IACvCE,eAAe,EAAED,KAAK,CAACE,OAAO,CAACC,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG,MAAM;IACnE,GAAGH,KAAK,CAACI,UAAU,CAACC,KAAK;IACzBC,OAAO,EAAEN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;IACzBC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAET,KAAK,CAACE,OAAO,CAACQ,IAAI,CAACC;EAC5B,CAAC;AAAA,CAAC,CAAC;AAACC,EAAA,GANAd,IAAI;AASV,SAASe,QAAQA,CAACC,KAAK,EAAE;EAEvB,MAAM;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,KAAK;IAAE,GAAGC;EAAM,CAAC,GAAGJ,KAAK;EAElD,oBACEjB,OAAA;IACEsB,IAAI,EAAC,UAAU;IACfC,MAAM,EAAEJ,KAAK,KAAKC,KAAM;IACxBI,EAAE,EAAG,mBAAkBJ,KAAM,EAAE;IAC/B,mBAAkB,cAAaA,KAAM,EAAE;IAAA,GACnCC,KAAK;IAAAH,QAAA,EAERC,KAAK,KAAKC,KAAK,iBACdpB,OAAA,CAACL,GAAG;MAAC8B,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAE,CAAE;MAAAR,QAAA,eAChBlB,OAAA,CAACN,UAAU;QAAAwB,QAAA,EAAEA;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAc;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEtC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAACC,GAAA,GAnBQf,QAAQ;AAqBjBA,QAAQ,CAACgB,SAAS,GAAG;EACnBd,QAAQ,EAAE3B,SAAS,CAAC0C,IAAI;EACxBb,KAAK,EAAE7B,SAAS,CAAC2C,MAAM,CAACC,UAAU;EAClChB,KAAK,EAAE5B,SAAS,CAAC2C,MAAM,CAACC;AAC1B,CAAC;AAED,SAASC,SAASA,CAAChB,KAAK,EAAE;EACxB,OAAO;IACLI,EAAE,EAAG,cAAaJ,KAAM,EAAC;IACzB,eAAe,EAAG,mBAAkBA,KAAM;EAC5C,CAAC;AACH;AAEA,eAAe,SAASiB,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACnB,KAAK,EAAEoB,QAAQ,CAAC,GAAGlD,KAAK,CAACmD,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxCJ,QAAQ,CAACI,QAAQ,CAAC;EACpB,CAAC;EAED,oBACE3C,OAAA,CAACJ,SAAS;IAACgD,QAAQ,EAAC,EAAE;IAAA1B,QAAA,eAClBlB,OAAA,CAACF,IAAI;MAAC+C,SAAS;MAACnC,OAAO,EAAE,CAAE;MAAAQ,QAAA,gBACjClB,OAAA,CAACF,IAAI;QAACgD,IAAI;QAACC,EAAE;QAAA7B,QAAA,eACXlB,OAAA,CAACC,IAAI;UAAAiB,QAAA,EAAC;QAAO;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACf,eACP9B,OAAA,CAACF,IAAI;QAACgD,IAAI;QAACC,EAAE,EAAE,CAAE;QAAA7B,QAAA,eACflB,OAAA,CAACC,IAAI;UAAAiB,QAAA,gBACLlB,OAAA,CAACL,GAAG;YAAC8B,EAAE,EAAE;cAAEuB,YAAY,EAAE,CAAC;cAAEC,WAAW,EAAE;YAAU,CAAE;YAAA/B,QAAA,gBACjDlB,OAAA;cAAKkD,KAAK,EAAE;gBAAEC,QAAQ,EAAE,QAAQ;gBAAEC,GAAG,EAAE;cAAC;YAAE;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO,eACvD9B,OAAA,CAACR,IAAI;cAAC2B,KAAK,EAAEA,KAAM;cAACkC,QAAQ,EAAEZ,YAAa;cAAC,cAAW,oBAAoB;cAAAvB,QAAA,gBACzElB,OAAA,CAACP,GAAG;gBAAC6D,KAAK,EAAC,UAAU;gBAAA,GAAKlB,SAAS,CAAC,CAAC;cAAC;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAI,eAC1C9B,OAAA,CAACP,GAAG;gBAAC6D,KAAK,EAAC,UAAU;gBAAA,GAAKlB,SAAS,CAAC,CAAC;cAAC;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAI,eAC1C9B,OAAA,CAACP,GAAG;gBAAC6D,KAAK,EAAC,YAAY;gBAAA,GAAKlB,SAAS,CAAC,CAAC;cAAC;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAI;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACvC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEH,eACN9B,OAAA,CAACgB,QAAQ;YAACG,KAAK,EAAEA,KAAM;YAACC,KAAK,EAAE,CAAE;YAAAF,QAAA,EAAC;UAuFlC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAW,eACX9B,OAAA,CAACgB,QAAQ;YAACG,KAAK,EAAEA,KAAM;YAACC,KAAK,EAAE,CAAE;YAAAF,QAAA,EAAC;UAElC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAW,eACX9B,OAAA,CAACgB,QAAQ;YAACG,KAAK,EAAEA,KAAM;YAACC,KAAK,EAAE,CAAE;YAAAF,QAAA,EAAC;UAElC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAW;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eACP9B,OAAA,CAACF,IAAI;QAACgD,IAAI;QAACC,EAAE;QAAA7B,QAAA,eACXlB,OAAA,CAACC,IAAI;UAAAiB,QAAA,EAAC;QAAM;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAEhB;AAACQ,EAAA,CA/HuBD,SAAS;AAAAkB,GAAA,GAATlB,SAAS;AAAA,IAAAtB,EAAA,EAAAgB,GAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzC,EAAA;AAAAyC,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}