{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/comments.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments(_ref) {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    blogPostId\n  } = _ref;\n  function CommentForm(_ref2) {\n    _s();\n    let {\n      parent,\n      onSubmit\n    } = _ref2;\n    const [content, setContent] = useState('');\n    const handleSubmit = event => {\n      event.preventDefault();\n      onSubmit({\n        content,\n        parent\n      });\n      setContent('');\n    };\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => setContent(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this);\n  }\n  _s(CommentForm, \"7qMZGOaOfwYbu+hEA/2Jy8mHHnE=\");\n  function Comment(_ref3) {\n    let {\n      comment\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.author_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), comment.replies.map(reply => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: reply\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  }\n  function Comments(_ref4) {\n    let {\n      comments,\n      onEditComment,\n      onDeleteComment\n    } = _ref4;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onEditComment(comment),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDeleteComment(comment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  }\n  const [comments, setComments] = useState([]);\n  const fetchComments = async () => {\n    const response = await fetch(`http://localhost:8000/api/blog/comments/`);\n    const data = await response.json();\n    setComments(data);\n  };\n  useEffect(() => {\n    fetchComments();\n  }, [blogPostId]);\n  const handleAddComment = async comment => {\n    const response = await fetch(`http://localhost:8000/api/blog/comments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(comment)\n    });\n    const data = await response.json();\n    setComments([...comments, data]);\n  };\n  const handleEditComment = async comment => {\n    const response = await fetch(`http://localhost:8000/api/blog/comments`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(comment)\n    });\n    const data = await response.json();\n    const updatedComments = comments.map(c => {\n      if (c.id === data.id) {\n        return data;\n      }\n      return c;\n    });\n    setComments(updatedComments);\n  };\n  const handleDeleteComment = async commentId => {\n    const response = await fetch(`http://localhost:8000/api/blog/comments`, {\n      method: 'DELETE'\n    });\n    if (response.ok) {\n      const updatedComments = comments.filter(c => c.id !== commentId);\n      setComments(updatedComments);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n      onSubmit: handleAddComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      comments: comments,\n      onEditComment: handleEditComment,\n      onDeleteComment: handleDeleteComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n}\n_s2(Comments, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Comments","_ref","_s2","_s","$RefreshSig$","blogPostId","CommentForm","_ref2","parent","onSubmit","content","setContent","handleSubmit","event","preventDefault","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","Comment","_ref3","comment","author_name","replies","map","reply","id","_ref4","comments","onEditComment","onDeleteComment","onClick","setComments","fetchComments","response","fetch","data","json","handleAddComment","method","headers","body","JSON","stringify","handleEditComment","updatedComments","c","handleDeleteComment","commentId","ok","filter","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Comments({ blogPostId }) {\n    function CommentForm({ parent, onSubmit }) {\n      const [content, setContent] = useState('');\n  \n      const handleSubmit = (event) => {\n        event.preventDefault();\n        onSubmit({ content, parent });\n        setContent('');\n      };\n  \n      return (\n        <form onSubmit={handleSubmit}>\n          <textarea value={content} onChange={(event) => setContent(event.target.value)} />\n          <button type=\"submit\">Post Comment</button>\n        </form>\n      );\n    }\n  \n    function Comment({ comment }) {\n      return (\n        <div>\n          <p>{comment.content}</p>\n          <p>{comment.author_name}</p>\n          {comment.replies.map((reply) => (\n            <Comment key={reply.id} comment={reply} />\n          ))}\n        </div>\n      );\n    }\n  \n    function Comments({ comments, onEditComment, onDeleteComment }) {\n      return (\n        <div>\n          {comments.map((comment) => (\n            <div key={comment.id}>\n              <Comment comment={comment} />\n              <button onClick={() => onEditComment(comment)}>Edit</button>\n              <button onClick={() => onDeleteComment(comment.id)}>Delete</button>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  \n    const [comments, setComments] = useState([]);\n  \n    const fetchComments = async () => {\n      const response = await fetch(`http://localhost:8000/api/blog/comments/`);\n      const data = await response.json();\n      setComments(data);\n    };\n  \n    useEffect(() => {\n      fetchComments();\n    }, [blogPostId]);\n  \n    const handleAddComment = async (comment) => {\n      const response = await fetch(`http://localhost:8000/api/blog/comments`,{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(comment)\n      });\n      const data = await response.json();\n      setComments([...comments, data]);\n    };\n  \n    const handleEditComment = async (comment) => {\n      const response = await fetch(`http://localhost:8000/api/blog/comments`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(comment)\n      });\n      const data = await response.json();\n      const updatedComments = comments.map((c) => {\n        if (c.id === data.id) {\n          return data;\n        }\n        return c;\n      });\n      setComments(updatedComments);\n    };\n  \n    const handleDeleteComment = async (commentId) => {\n      const response = await fetch(`http://localhost:8000/api/blog/comments`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        const updatedComments = comments.filter((c) => c.id !== commentId);\n        setComments(updatedComments);\n      }\n    };\n  \n    return (\n      <div>\n        <CommentForm onSubmit={handleAddComment} />\n        <Comments\n          comments={comments}\n          onEditComment={handleEditComment}\n          onDeleteComment={handleDeleteComment}\n        />\n      </div>\n    );\n  }\n  \n  export default Comments;\n  "],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAAC,IAAA,EAAiB;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,IAAhB;IAAEC;EAAW,CAAC,GAAAJ,IAAA;EAC5B,SAASK,WAAWA,CAAAC,KAAA,EAAuB;IAAAJ,EAAA;IAAA,IAAtB;MAAEK,MAAM;MAAEC;IAAS,CAAC,GAAAF,KAAA;IACvC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;IAE1C,MAAMgB,YAAY,GAAIC,KAAK,IAAK;MAC9BA,KAAK,CAACC,cAAc,EAAE;MACtBL,QAAQ,CAAC;QAAEC,OAAO;QAAEF;MAAO,CAAC,CAAC;MAC7BG,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC;IAED,oBACEZ,OAAA;MAAMU,QAAQ,EAAEG,YAAa;MAAAG,QAAA,gBAC3BhB,OAAA;QAAUiB,KAAK,EAAEN,OAAQ;QAACO,QAAQ,EAAGJ,KAAK,IAAKF,UAAU,CAACE,KAAK,CAACK,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACjFvB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtC;EAEX;EAACnB,EAAA,CAfQG,WAAW;EAiBpB,SAASkB,OAAOA,CAAAC,KAAA,EAAc;IAAA,IAAb;MAAEC;IAAQ,CAAC,GAAAD,KAAA;IAC1B,oBACE1B,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAIW,OAAO,CAAChB;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxBvB,OAAA;QAAAgB,QAAA,EAAIW,OAAO,CAACC;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EAC3BI,OAAO,CAACE,OAAO,CAACC,GAAG,CAAEC,KAAK,iBACzB/B,OAAA,CAACyB,OAAO;QAAgBE,OAAO,EAAEI;MAAM,GAAzBA,KAAK,CAACC,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV;EAEA,SAAStB,QAAQA,CAAAgC,KAAA,EAA+C;IAAA,IAA9C;MAAEC,QAAQ;MAAEC,aAAa;MAAEC;IAAgB,CAAC,GAAAH,KAAA;IAC5D,oBACEjC,OAAA;MAAAgB,QAAA,EACGkB,QAAQ,CAACJ,GAAG,CAAEH,OAAO,iBACpB3B,OAAA;QAAAgB,QAAA,gBACEhB,OAAA,CAACyB,OAAO;UAACE,OAAO,EAAEA;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC7BvB,OAAA;UAAQqC,OAAO,EAAEA,CAAA,KAAMF,aAAa,CAACR,OAAO,CAAE;UAAAX,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAC5DvB,OAAA;UAAQqC,OAAO,EAAEA,CAAA,KAAMD,eAAe,CAACT,OAAO,CAACK,EAAE,CAAE;UAAAhB,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA,GAH3DI,OAAO,CAACK,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV;EAEA,MAAM,CAACW,QAAQ,EAAEI,WAAW,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM0C,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyC,CAAC;IACxE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCL,WAAW,CAACI,IAAI,CAAC;EACnB,CAAC;EAED5C,SAAS,CAAC,MAAM;IACdyC,aAAa,EAAE;EACjB,CAAC,EAAE,CAACjC,UAAU,CAAC,CAAC;EAEhB,MAAMsC,gBAAgB,GAAG,MAAOjB,OAAO,IAAK;IAC1C,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwC,EAAC;MACrEI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,OAAO;IAC9B,CAAC,CAAC;IACF,MAAMe,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCL,WAAW,CAAC,CAAC,GAAGJ,QAAQ,EAAEQ,IAAI,CAAC,CAAC;EAClC,CAAC;EAED,MAAMQ,iBAAiB,GAAG,MAAOvB,OAAO,IAAK;IAC3C,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwC,EAAE;MACtEI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,OAAO;IAC9B,CAAC,CAAC;IACF,MAAMe,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,MAAMQ,eAAe,GAAGjB,QAAQ,CAACJ,GAAG,CAAEsB,CAAC,IAAK;MAC1C,IAAIA,CAAC,CAACpB,EAAE,KAAKU,IAAI,CAACV,EAAE,EAAE;QACpB,OAAOU,IAAI;MACb;MACA,OAAOU,CAAC;IACV,CAAC,CAAC;IACFd,WAAW,CAACa,eAAe,CAAC;EAC9B,CAAC;EAED,MAAME,mBAAmB,GAAG,MAAOC,SAAS,IAAK;IAC/C,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwC,EAAE;MACtEI,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAIL,QAAQ,CAACe,EAAE,EAAE;MACf,MAAMJ,eAAe,GAAGjB,QAAQ,CAACsB,MAAM,CAAEJ,CAAC,IAAKA,CAAC,CAACpB,EAAE,KAAKsB,SAAS,CAAC;MAClEhB,WAAW,CAACa,eAAe,CAAC;IAC9B;EACF,CAAC;EAED,oBACEnD,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACO,WAAW;MAACG,QAAQ,EAAEkC;IAAiB;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC3CvB,OAAA,CAACC,QAAQ;MACPiC,QAAQ,EAAEA,QAAS;MACnBC,aAAa,EAAEe,iBAAkB;MACjCd,eAAe,EAAEiB;IAAoB;MAAAjC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACpB,GAAA,CA1GMF,QAAQ;AAAAwD,EAAA,GAARxD,QAAQ;AA4Gf,eAAeA,QAAQ;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}