{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Desktop/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/blog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blog() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [newBlogTitle, setNewBlogTitle] = useState('');\n  const [newBlogContent, setNewBlogContent] = useState('');\n  const [newBlogAuthorName, setNewBlogAuthorName] = useState('');\n  const [blogs, setBlogs] = useState([]);\n  const [selectedBlogId, setSelectedBlogId] = useState('');\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n  const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n  const [newBlogImage, setNewBlogImage] = useState(null);\n  const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n  const [created_at, setCreatedAt] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:8000/api/blog/', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    }).then(response => response.json()).then(data => {\n      setBlogs(data);\n      setLoading(false);\n      console.log(data[0].created_at);\n      console.log(data);\n      setCreatedAt(data[0].created_at);\n      const imageurl = data[0].image;\n      var imageName = imageurl.substring(0, imageurl.lastIndexOf('_'));\n      const n = 3;\n      const imgFormat = imageurl.substring(imageurl.length - n);\n      console.log(\"image format \", imgFormat);\n      console.log(imageurl);\n      console.log(imageName);\n    }).catch(error => console.error(error));\n  }, []);\n\n  // const handleCreate = () => {\n  //   const newBlog = {\n  //     title: newBlogTitle,\n  //     content: newBlogContent,\n  //     authorName: newBlogAuthorName\n  //   }\n\n  //   fetch('http://localhost:8000/api/blog/', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n  //     },\n  //     body: JSON.stringify(newBlog)\n  //   })\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     setBlogs([...blogs, data])\n  //     setNewBlogTitle('')\n  //     setNewBlogContent('')\n  //     setNewBlogAuthorName('')\n  //   })\n  //   .catch(error => console.error(error))\n  // }\n  const handleCreate = () => {\n    const newBlog = {\n      title: newBlogTitle,\n      content: newBlogContent,\n      authorName: newBlogAuthorName,\n      image: newBlogImage // Add the image file to the new blog object\n    };\n\n    const formData = new FormData();\n    formData.append(\"title\", newBlog.title);\n    formData.append(\"content\", newBlog.content);\n    formData.append(\"authorName\", newBlog.authorName);\n    formData.append(\"image\", newBlog.image);\n    fetch(\"http://localhost:8000/api/blog/\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      },\n      body: formData // Use the form data instead of JSON.stringify\n    }).then(response => response.json()).then(data => {\n      setBlogs([...blogs, data]);\n      setNewBlogTitle(\"\");\n      setNewBlogContent(\"\");\n      setNewBlogAuthorName(\"\");\n      setNewBlogImage(null); // Reset the image state after submitting the form\n    }).catch(error => console.error(error));\n  };\n  const handleDelete = id => {\n    if (window.confirm('Are you sure you want to delete this post?')) {\n      fetch(`http://localhost:8000/api/blog/${id}/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      }).then(response => {\n        if (response.ok) {\n          setBlogs(blogs.filter(blog => blog.id !== id));\n        } else {\n          throw new Error('Delete failed');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  // const handleUpdate = () => {\n  //   const updatedBlog = {\n  //     id: selectedBlogId,\n  //     title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n  //     content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n  //     authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n  //   }\n\n  //   fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n  //     },\n  //     body: JSON.stringify(updatedBlog)\n  //   })\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     const index = blogs.findIndex(blog => blog.id === data.id)\n  //     const newBlogs = [...blogs]\n  //     newBlogs[index] = data\n  //     setBlogs(newBlogs)\n  //     setSelectedBlogId('')\n  //     setUpdatedBlogTitle(undefined)\n  //     setUpdatedBlogContent(undefined)\n  //     setUpdatedBlogAuthorName(undefined)\n  //   })\n  //   .catch(error => console.error(error))\n  // }\n\n  const handleUpdate = () => {\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n      content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n      authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n    };\n    const formData = new FormData();\n    formData.append('title', updatedBlog.title);\n    formData.append('content', updatedBlog.content);\n    formData.append('authorName', updatedBlog.authorName);\n    formData.append('image', updatedBlogImage);\n    fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: formData\n    }).then(response => response.json()).then(data => {\n      const index = blogs.findIndex(blog => blog.id === data.id);\n      const newBlogs = [...blogs];\n      newBlogs[index] = data;\n      setBlogs(newBlogs);\n      setSelectedBlogId('');\n      setUpdatedBlogTitle(undefined);\n      setUpdatedBlogContent(undefined);\n      setUpdatedBlogAuthorName(undefined);\n      setUpdatedBlogImage(null);\n    }).catch(error => console.error(error));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create New Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newBlogTitle,\n            onChange: event => setNewBlogTitle(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newBlogContent,\n            onChange: event => setNewBlogContent(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Author Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newBlogAuthorName,\n            onChange: event => setNewBlogAuthorName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newBlogImage\",\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"newBlogImage\",\n          name: \"newBlogImage\",\n          onChange: event => setNewBlogImage(event.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreate,\n          children: \"Create Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Blog List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", blog.authorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Published Date: \", blog.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Updated Date: \", blog.updated_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), created_at && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Blog Created at Standard: \", created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedBlogId(blog.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(blog.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 1\n    }, this), selectedBlogId !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Update Blog \\\"\", blogs.find(blog => blog.id === selectedBlogId).title, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blog-title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"blog-title\",\n          value: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n          onChange: e => setUpdatedBlogTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blog-content\",\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"blog-content\",\n          value: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n          onChange: e => setUpdatedBlogContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blog-author-name\",\n          children: \"Author Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"blog-author-name\",\n          value: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName,\n          onChange: e => setUpdatedBlogAuthorName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"updatedBlogImage\",\n        children: \"Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"updatedBlogImage\",\n        name: \"updatedBlogImage\",\n        onChange: event => setUpdatedBlogImage(event.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Update Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(Blog, \"OcCz4hQaZ1bBqULJiymVuM+V2Qs=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Blog","_s","loading","setLoading","newBlogTitle","setNewBlogTitle","newBlogContent","setNewBlogContent","newBlogAuthorName","setNewBlogAuthorName","blogs","setBlogs","selectedBlogId","setSelectedBlogId","updatedBlogTitle","setUpdatedBlogTitle","undefined","updatedBlogContent","setUpdatedBlogContent","updatedBlogAuthorName","setUpdatedBlogAuthorName","newBlogImage","setNewBlogImage","updatedBlogImage","setUpdatedBlogImage","created_at","setCreatedAt","fetch","headers","localStorage","getItem","then","response","json","data","console","log","imageurl","image","imageName","substring","lastIndexOf","n","imgFormat","length","catch","error","handleCreate","newBlog","title","content","authorName","formData","FormData","append","method","Authorization","body","handleDelete","id","window","confirm","ok","filter","blog","Error","handleUpdate","updatedBlog","find","index","findIndex","newBlogs","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","event","target","htmlFor","name","files","onClick","map","updated_at","e","_c","$RefreshReg$"],"sources":["/Users/dillirai/Desktop/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/blog.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nfunction Blog() {\n\n  const [loading, setLoading] = useState(true)\n  const [newBlogTitle, setNewBlogTitle] = useState('')\n  const [newBlogContent, setNewBlogContent] = useState('')\n  const [newBlogAuthorName, setNewBlogAuthorName] = useState('')\n\n\n  const [blogs, setBlogs] = useState([]);\n  const [selectedBlogId, setSelectedBlogId] = useState('');\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n  const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n  \n  const [newBlogImage, setNewBlogImage] = useState(null);\n  const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n  \n  const [created_at, setCreatedAt] = useState(\"\");\n\n  useEffect(() => {\n    fetch('http://localhost:8000/api/blog/', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    })\n    .then(response => response.json())\n    .then(data => {\n      setBlogs(data)\n      setLoading(false)\n      console.log(data[0].created_at);\n      console.log(data);\n      setCreatedAt(data[0].created_at);\n      const imageurl = data[0].image;\n      var imageName = imageurl.substring(0, imageurl.lastIndexOf('_'));\n      const n = 3;\n      const imgFormat = imageurl.substring(imageurl.length - n);\n      console.log(\"image format \", imgFormat);\n\n      console.log(imageurl);\n      console.log(imageName);\n\n\n    })\n    .catch(error => console.error(error))\n  }, [])\n\n  // const handleCreate = () => {\n  //   const newBlog = {\n  //     title: newBlogTitle,\n  //     content: newBlogContent,\n  //     authorName: newBlogAuthorName\n  //   }\n\n  //   fetch('http://localhost:8000/api/blog/', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n  //     },\n  //     body: JSON.stringify(newBlog)\n  //   })\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     setBlogs([...blogs, data])\n  //     setNewBlogTitle('')\n  //     setNewBlogContent('')\n  //     setNewBlogAuthorName('')\n  //   })\n  //   .catch(error => console.error(error))\n  // }\n  const handleCreate = () => {\n    const newBlog = {\n      title: newBlogTitle,\n      content: newBlogContent,\n      authorName: newBlogAuthorName,\n      image: newBlogImage // Add the image file to the new blog object\n    };\n  \n    const formData = new FormData();\n    formData.append(\"title\", newBlog.title);\n    formData.append(\"content\", newBlog.content);\n    formData.append(\"authorName\", newBlog.authorName);\n    formData.append(\"image\", newBlog.image);\n  \n    fetch(\"http://localhost:8000/api/blog/\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n      },\n      body: formData, // Use the form data instead of JSON.stringify\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setBlogs([...blogs, data]);\n        setNewBlogTitle(\"\");\n        setNewBlogContent(\"\");\n        setNewBlogAuthorName(\"\");\n        setNewBlogImage(null); // Reset the image state after submitting the form\n      })\n      .catch((error) => console.error(error));\n  };\n  \n  \n\n\n  const handleDelete = (id) => {\n    if (window.confirm('Are you sure you want to delete this post?')) {\n      fetch(`http://localhost:8000/api/blog/${id}/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      })\n      .then(response => {\n        if (response.ok) {\n          setBlogs(blogs.filter(blog => blog.id !== id))\n        } else {\n          throw new Error('Delete failed')\n        }\n      })\n      .catch(error => {\n        console.error(error)\n      })\n    }\n  }\n\n  // const handleUpdate = () => {\n  //   const updatedBlog = {\n  //     id: selectedBlogId,\n  //     title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n  //     content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n  //     authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n  //   }\n        \n  //   fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n  //     },\n  //     body: JSON.stringify(updatedBlog)\n  //   })\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     const index = blogs.findIndex(blog => blog.id === data.id)\n  //     const newBlogs = [...blogs]\n  //     newBlogs[index] = data\n  //     setBlogs(newBlogs)\n  //     setSelectedBlogId('')\n  //     setUpdatedBlogTitle(undefined)\n  //     setUpdatedBlogContent(undefined)\n  //     setUpdatedBlogAuthorName(undefined)\n  //   })\n  //   .catch(error => console.error(error))\n  // }\n\n\n  const handleUpdate = () => {\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n      content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n      authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n    }\n  \n    const formData = new FormData();\n    formData.append('title', updatedBlog.title);\n    formData.append('content', updatedBlog.content);\n    formData.append('authorName', updatedBlog.authorName);\n    formData.append('image', updatedBlogImage);\n  \n    fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: formData\n    })\n    .then(response => response.json())\n    .then(data => {\n      const index = blogs.findIndex(blog => blog.id === data.id)\n      const newBlogs = [...blogs]\n      newBlogs[index] = data\n      setBlogs(newBlogs)\n      setSelectedBlogId('')\n      setUpdatedBlogTitle(undefined)\n      setUpdatedBlogContent(undefined)\n      setUpdatedBlogAuthorName(undefined)\n      setUpdatedBlogImage(null)\n    })\n    .catch(error => console.error(error))\n  }\n  \n\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n \n\n  return (\n    <div>\n<ul>\n<div>\n    <h2>Create New Blog</h2>\n    <label>\n    Title:\n    <input\n    type=\"text\"\n    value={newBlogTitle}\n    onChange={(event) => setNewBlogTitle(event.target.value)}\n    />\n    </label>\n    <br />\n    <label>\n    Content:\n    <textarea\n    value={newBlogContent}\n    onChange={(event) => setNewBlogContent(event.target.value)}\n    />\n    </label>\n    <br />\n    <label>\n    Author Name:\n    <input\n    type=\"text\"\n    value={newBlogAuthorName}\n    onChange={(event) => setNewBlogAuthorName(event.target.value)}\n    />\n    </label>\n\n    <label htmlFor=\"newBlogImage\">Image:</label>\n    <input type=\"file\" id=\"newBlogImage\" name=\"newBlogImage\" onChange={event => setNewBlogImage(event.target.files[0])} />\n\n\n    <br />\n    <button onClick={handleCreate}>Create Blog</button>\n    </div>\n\n      <h1>Blog List</h1>\n\n      {blogs.map(blog => (\n        <li key={blog.id}>\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n          <p>Author: {blog.authorName}</p>\n          <p>Published Date: {blog.created_at}</p>\n          <p>Updated Date: {blog.updated_at}</p>\n          {created_at && <p>Blog Created at Standard: {created_at}</p>}\n\n      \n          {/* <img src={imageName} alt={blog.title} />\n     */}\n          <button onClick={() => setSelectedBlogId(blog.id)}>Edit</button>\n          <button onClick={() => handleDelete(blog.id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n    {/* <UpdateBlog/> */}\n    {selectedBlogId !== '' && (\n        <div>\n\n          <h2>Update Blog \"{blogs.find(blog => blog.id === selectedBlogId).title}\"</h2>\n          \n          <div>\n            <label htmlFor=\"blog-title\">Title:</label>\n            <input type=\"text\" id=\"blog-title\" value={updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle} onChange={e => setUpdatedBlogTitle(e.target.value)} />\n          </div>\n\n          <div>\n            <label htmlFor=\"blog-content\">Content:</label>\n            <textarea id=\"blog-content\" value={updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent} onChange={e => setUpdatedBlogContent(e.target.value)} />\n          </div>\n\n          <div>\n            <label htmlFor=\"blog-author-name\">Author Name:</label>\n            <input type=\"text\" id=\"blog-author-name\" value={updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName} onChange={e => setUpdatedBlogAuthorName(e.target.value)} />\n            </div>\n\n            <label htmlFor=\"updatedBlogImage\">Image:</label>\n            <input type=\"file\" id=\"updatedBlogImage\" name=\"updatedBlogImage\" onChange={event => setUpdatedBlogImage(event.target.files[0])} />\n\n            <button onClick={handleUpdate}>Update Blog</button>\n\n            </div>\n            )}\n    </div>\n    )\n    }\nexport default Blog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}