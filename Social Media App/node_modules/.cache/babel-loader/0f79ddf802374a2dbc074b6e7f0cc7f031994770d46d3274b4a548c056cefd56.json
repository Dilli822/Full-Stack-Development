{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogLikeButton(_ref) {\n  _s();\n  let {\n    blogId,\n    likes,\n    likedBy\n  } = _ref;\n  const [isLiked, setIsLiked] = useState(likedBy.includes(authorId));\n  const [numLikes, setNumLikes] = useState(likes);\n  const [likedByList, setLikedByList] = useState(likedBy);\n  const [error, setError] = useState(\"\");\n  const handleLikeClick = async () => {\n    try {\n      let newLikedState = !isLiked;\n      let newLikes = numLikes;\n      let newLikedByState = likedByList;\n      if (newLikedState) {\n        newLikes += 1;\n        newLikedByState = [...likedByList, authorId];\n      } else {\n        newLikes -= 1;\n        newLikedByState = likedByList.filter(id => id !== authorId);\n      }\n      setIsLiked(newLikedState);\n      setNumLikes(newLikes);\n      setLikedByList(newLikedByState);\n\n      // Call API to update like state\n      await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          liked: newLikedState,\n          likes: newLikes,\n          liked_by: newLikedByState\n        })\n      });\n    } catch (error) {\n      console.error(error);\n      setError(\"Failed to update like state.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLikeClick,\n      children: isLiked ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-heart\",\n        style: {\n          color: \"red\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-heart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 79\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: numLikes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogLikeButton, \"L0kW4Z1Vx4ILqLOq+E+20SXsbNs=\");\n_c = BlogLikeButton;\nvar _c;\n$RefreshReg$(_c, \"BlogLikeButton\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","BlogLikeButton","_ref","_s","blogId","likes","likedBy","isLiked","setIsLiked","includes","authorId","numLikes","setNumLikes","likedByList","setLikedByList","error","setError","handleLikeClick","newLikedState","newLikes","newLikedByState","filter","id","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","liked","liked_by","console","children","onClick","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction BlogLikeButton({ blogId, likes, likedBy }) {\n  const [isLiked, setIsLiked] = useState(likedBy.includes(authorId));\n  const [numLikes, setNumLikes] = useState(likes);\n  const [likedByList, setLikedByList] = useState(likedBy);\n  const [error, setError] = useState(\"\");\n\n  const handleLikeClick = async () => {\n    try {\n      let newLikedState = !isLiked;\n      let newLikes = numLikes;\n      let newLikedByState = likedByList;\n\n      if (newLikedState) {\n        newLikes += 1;\n        newLikedByState = [...likedByList, authorId];\n      } else {\n        newLikes -= 1;\n        newLikedByState = likedByList.filter((id) => id !== authorId);\n      }\n\n      setIsLiked(newLikedState);\n      setNumLikes(newLikes);\n      setLikedByList(newLikedByState);\n\n      // Call API to update like state\n      await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          liked: newLikedState,\n          likes: newLikes,\n          liked_by: newLikedByState,\n        }),\n      });\n    } catch (error) {\n      console.error(error);\n      setError(\"Failed to update like state.\");\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleLikeClick}>\n        {isLiked ? <i className=\"fa fa-heart\" style={{ color: \"red\" }}></i> : <i className=\"fa fa-heart\"></i>}\n      </button>\n      <span>{numLikes}</span>\n      {error && <p>{error}</p>}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}