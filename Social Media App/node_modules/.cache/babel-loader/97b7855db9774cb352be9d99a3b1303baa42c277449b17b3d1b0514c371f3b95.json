{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Likes() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    // Fetch userId from API\n    fetch(\"http://localhost:8000/api/user/\", {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"accessToken\")}`\n      }\n    }).then(response => response.json()).then(data => {\n      setUserId(data.userId);\n    }).catch(error => console.log(error));\n  }, []);\n  useEffect(() => {\n    // Fetch blogs from API\n    fetch(\"http://localhost:8000/api/blog/list/\", {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"accessToken\")}`\n      }\n    }).then(response => response.json()).then(data => {\n      setBlogs(data);\n    }).catch(error => console.log(error));\n  }, []);\n  const handleLikeClick = blogId => {\n    const blogToUpdate = blogs.find(blog => blog.id === blogId);\n    if (blogToUpdate.liked_by.includes(userId)) {\n      // User has already liked the blog, so remove like\n      blogToUpdate.liked_by = blogToUpdate.liked_by.filter(id => id !== userId);\n      blogToUpdate.likes -= 1;\n    } else {\n      // User has not liked the blog, so add like\n      blogToUpdate.liked_by.push(userId);\n      blogToUpdate.likes += 1;\n    }\n\n    // Update likes in API\n    fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"myToken\")}`\n      },\n      body: JSON.stringify({\n        likes: blogToUpdate.likes,\n        liked_by: blogToUpdate.liked_by\n      })\n    }).then(response => response.json()).then(data => {\n      setBlogs(prevBlogs => prevBlogs.map(blog => blog.id === data.id ? data : blog));\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: blog.likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => handleLikeClick(blog.id),\n        children: blog.liked_by.includes(userId) ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"WGDuITeiXS1uVgboA7YGRQUCkKw=\");\n_c = Likes;\nexport default Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["IconButton","FavoriteIcon","ShareIcon","React","useState","useEffect","jsxDEV","_jsxDEV","Likes","_s","blogs","setBlogs","userId","setUserId","fetch","headers","Authorization","localStorage","getItem","then","response","json","data","catch","error","console","log","handleLikeClick","blogId","blogToUpdate","find","blog","id","liked_by","includes","filter","likes","push","method","body","JSON","stringify","prevBlogs","map","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","onClick","color","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction Likes() {\n  const [blogs, setBlogs] = useState([]);\n  const [userId, setUserId] = useState(null);\n\n  useEffect(() => {\n    // Fetch userId from API\n    fetch(\"http://localhost:8000/api/user/\", {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"accessToken\")}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setUserId(data.userId);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    // Fetch blogs from API\n    fetch(\"http://localhost:8000/api/blog/list/\", {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"accessToken\")}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setBlogs(data);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const handleLikeClick = (blogId) => {\n    const blogToUpdate = blogs.find((blog) => blog.id === blogId);\n\n    if (blogToUpdate.liked_by.includes(userId)) {\n      // User has already liked the blog, so remove like\n      blogToUpdate.liked_by = blogToUpdate.liked_by.filter(\n        (id) => id !== userId\n      );\n      blogToUpdate.likes -= 1;\n    } else {\n      // User has not liked the blog, so add like\n      blogToUpdate.liked_by.push(userId);\n      blogToUpdate.likes += 1;\n    }\n\n    // Update likes in API\n    fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"myToken\")}`,\n      },\n      body: JSON.stringify({\n        likes: blogToUpdate.likes,\n        liked_by: blogToUpdate.liked_by,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setBlogs((prevBlogs) =>\n          prevBlogs.map((blog) => (blog.id === data.id ? data : blog))\n        );\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div>\n      {blogs.map((blog) => (\n        <div key={blog.id}>\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n          <span>{blog.likes}</span>\n          <IconButton onClick={() => handleLikeClick(blog.id)}>\n            {blog.liked_by.includes(userId) ? (\n              <FavoriteIcon color=\"error\" />\n            ) : (\n              <FavoriteIcon />\n            )}\n          </IconButton>\n          <IconButton>\n            <ShareIcon />\n          </IconButton>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Likes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}