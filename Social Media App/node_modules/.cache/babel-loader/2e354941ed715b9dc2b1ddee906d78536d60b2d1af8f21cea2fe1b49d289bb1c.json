{"ast":null,"code":"// // import { useState, useEffect } from \"react\";\n// // import { IconButton } from \"@mui/material\";\n// // import FavoriteIcon from '@mui/icons-material/Favorite';\n\n// // export default function Likes() {\n// //   const [liked, setLiked] = useState(false);\n// //   const [likes, setLikes] = useState(0);\n\n// //   const [blogs, setBlogs] = useState([]);\n// //   const [error, setError] = useState(null);\n\n// //   useEffect(() => {\n// //     const fetchBlogs = async () => {\n// //       try {\n// //         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n// //           headers: {\n// //             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //           },\n// //         });\n\n// //         const data = await response.json();\n// //         setBlogs(data);\n// //         setLikes(data.likes);\n// //       } catch (error) {\n// //         console.error(error);\n// //         setError(\"Failed to fetch blog posts.\");\n// //       }\n// //     };\n\n// //     fetchBlogs();\n// //   }, []);\n\n// //   const handleLikeClick = async (blogId) => {\n// //     if (liked) {\n// //       // User has already liked the post, so remove like\n// //       setLiked(false);\n// //       setLikes((prevLikes) => prevLikes - 1);\n// //     } else {\n// //       // User has not liked the post, so add like\n// //       setLiked(true);\n// //       setLikes((prevLikes) => prevLikes + 1);\n// //     }\n\n// //     // Update the API with the new liked state and like count\n// //     try {\n// //       const response = await fetch(\n// //         `http://localhost:8000/api/blog/likes/update/${blogId}/`,\n// //         {\n// //           method: \"PUT\",\n// //           headers: {\n// //             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //             \"Content-Type\": \"application/json\",\n// //           },\n// //           body: JSON.stringify({\n// //             liked: liked,\n// //             likes: likes,\n// //           }),\n// //         }\n// //       );\n\n// //       const data = await response.json();\n// //       console.log(data);\n// //     } catch (error) {\n// //       console.error(error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n\n// // {blogs.map((blog) => (\n// //         <div key={blog.id}>\n// //           <h2>{blog.title}</h2>\n// //           <p>{blog.content}</p>\n// //           <span>{blog.likes}</span>\n// //           <IconButton onClick={() => handleLikeClick(blog.id)}>\n// //   <FavoriteIcon color={liked ? \"error\" : \"inherit\"} />\n// // </IconButton>\n// //         </div>\n// //       ))}\n// //     </div>\n// //   );\n// // }\n\n// import { useState, useEffect } from \"react\";\n// import { IconButton } from \"@mui/material\";\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n\n// export default function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n//         setBlogs(data);\n//       } catch (error) {\n//         console.error(error);\n//         setError(\"Failed to fetch blog posts.\");\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   const handleLikeClick = async (blogId) => {\n//     // Find the index of the blog post in the blogs state array\n//     const index = blogs.findIndex((blog) => blog.id === blogId);\n\n//     // Get the current liked and likes values for the blog post\n//     const { liked, likes } = blogs[index];\n\n//     // Update the liked and likes values for the blog post\n//     const updatedBlogs = [...blogs];\n//     updatedBlogs[index] = {\n//       ...blogs[index],\n//       liked: !liked,\n//       likes: liked ? likes - 1 : likes + 1,\n//     };\n//     setBlogs(updatedBlogs);\n\n//     // Update the API with the new liked state and like count\n//     try {\n//       const response = await fetch(\n//         `http://localhost:8000/api/blog/likes/update/${blogId}/`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             liked: !liked,\n//             likes: liked ? likes - 1 : likes + 1,\n//           }),\n//         }\n//       );\n\n//       const data = await response.json();\n//       console.log(data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//   <div>\n//   {error && <div>{error}</div>}\n//   {blogs.map((blog) => (\n//   <div key={blog.id}>\n//   <h2>{blog.title}</h2>\n//   <p>{blog.content}</p>\n//   <span>{blog.likes}</span>\n//   <IconButton onClick={() => handleLikeClick(blog.id)}>\n//   <FavoriteIcon color={blog.liked ? \"inherit\" : \"error\"} />\n//   </IconButton>\n//   </div>\n//   ))}\n//   </div>\n//   );\n//   }","map":{"version":3,"names":[],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["// // import { useState, useEffect } from \"react\";\n// // import { IconButton } from \"@mui/material\";\n// // import FavoriteIcon from '@mui/icons-material/Favorite';\n\n// // export default function Likes() {\n// //   const [liked, setLiked] = useState(false);\n// //   const [likes, setLikes] = useState(0);\n\n// //   const [blogs, setBlogs] = useState([]);\n// //   const [error, setError] = useState(null);\n\n// //   useEffect(() => {\n// //     const fetchBlogs = async () => {\n// //       try {\n// //         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n// //           headers: {\n// //             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //           },\n// //         });\n\n// //         const data = await response.json();\n// //         setBlogs(data);\n// //         setLikes(data.likes);\n// //       } catch (error) {\n// //         console.error(error);\n// //         setError(\"Failed to fetch blog posts.\");\n// //       }\n// //     };\n\n// //     fetchBlogs();\n// //   }, []);\n\n// //   const handleLikeClick = async (blogId) => {\n// //     if (liked) {\n// //       // User has already liked the post, so remove like\n// //       setLiked(false);\n// //       setLikes((prevLikes) => prevLikes - 1);\n// //     } else {\n// //       // User has not liked the post, so add like\n// //       setLiked(true);\n// //       setLikes((prevLikes) => prevLikes + 1);\n// //     }\n  \n// //     // Update the API with the new liked state and like count\n// //     try {\n// //       const response = await fetch(\n// //         `http://localhost:8000/api/blog/likes/update/${blogId}/`,\n// //         {\n// //           method: \"PUT\",\n// //           headers: {\n// //             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n// //             \"Content-Type\": \"application/json\",\n// //           },\n// //           body: JSON.stringify({\n// //             liked: liked,\n// //             likes: likes,\n// //           }),\n// //         }\n// //       );\n  \n// //       const data = await response.json();\n// //       console.log(data);\n// //     } catch (error) {\n// //       console.error(error);\n// //     }\n// //   };\n  \n\n// //   return (\n// //     <div>\n\n// // {blogs.map((blog) => (\n// //         <div key={blog.id}>\n// //           <h2>{blog.title}</h2>\n// //           <p>{blog.content}</p>\n// //           <span>{blog.likes}</span>\n// //           <IconButton onClick={() => handleLikeClick(blog.id)}>\n// //   <FavoriteIcon color={liked ? \"error\" : \"inherit\"} />\n// // </IconButton>\n// //         </div>\n// //       ))}\n// //     </div>\n// //   );\n// // }\n\n\n// import { useState, useEffect } from \"react\";\n// import { IconButton } from \"@mui/material\";\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n\n// export default function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n//         setBlogs(data);\n//       } catch (error) {\n//         console.error(error);\n//         setError(\"Failed to fetch blog posts.\");\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   const handleLikeClick = async (blogId) => {\n//     // Find the index of the blog post in the blogs state array\n//     const index = blogs.findIndex((blog) => blog.id === blogId);\n\n//     // Get the current liked and likes values for the blog post\n//     const { liked, likes } = blogs[index];\n\n//     // Update the liked and likes values for the blog post\n//     const updatedBlogs = [...blogs];\n//     updatedBlogs[index] = {\n//       ...blogs[index],\n//       liked: !liked,\n//       likes: liked ? likes - 1 : likes + 1,\n//     };\n//     setBlogs(updatedBlogs);\n\n//     // Update the API with the new liked state and like count\n//     try {\n//       const response = await fetch(\n//         `http://localhost:8000/api/blog/likes/update/${blogId}/`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             liked: !liked,\n//             likes: liked ? likes - 1 : likes + 1,\n//           }),\n//         }\n//       );\n\n//       const data = await response.json();\n//       console.log(data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//   <div>\n//   {error && <div>{error}</div>}\n//   {blogs.map((blog) => (\n//   <div key={blog.id}>\n//   <h2>{blog.title}</h2>\n//   <p>{blog.content}</p>\n//   <span>{blog.likes}</span>\n//   <IconButton onClick={() => handleLikeClick(blog.id)}>\n//   <FavoriteIcon color={blog.liked ? \"inherit\" : \"error\"} />\n//   </IconButton>\n//   </div>\n//   ))}\n//   </div>\n//   );\n//   }\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}