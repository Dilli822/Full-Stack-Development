{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Likes = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const fetchBlogsAndComments = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/blog-comments/', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setBlogs(data.blogs);\n          setComments(data.comments);\n        } else {\n          console.error('Failed to fetch blogs and comments');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchBlogsAndComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Author: \", blog.authorName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", blog.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), comments.filter(comment => comment.blog === blog.id).map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Comment by: \", comment.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comment_content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this))]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Likes, \"SJaQf9MKu7854KRemLzJgCPWxDA=\");\n_c = Likes;\nexport default Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Likes","_s","blogs","setBlogs","comments","setComments","fetchBlogsAndComments","response","fetch","headers","Authorization","localStorage","getItem","ok","data","json","console","error","children","map","blog","title","fileName","_jsxFileName","lineNumber","columnNumber","content","authorName","likes","filter","comment","id","author","comment_content","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Likes = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    const fetchBlogsAndComments = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/blog-comments/', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n          },\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setBlogs(data.blogs);\n          setComments(data.comments);\n        } else {\n          console.error('Failed to fetch blogs and comments');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchBlogsAndComments();\n  }, []);\n\n  return (\n    <div>\n      {blogs.map((blog) => (\n        <div key={blog.id}>\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n          <p>Author: {blog.authorName}</p>\n          <p>Likes: {blog.likes}</p>\n          <h3>Comments:</h3>\n          {comments\n            .filter((comment) => comment.blog === blog.id)\n            .map((comment) => (\n              <div key={comment.id}>\n                <p>Comment by: {comment.author}</p>\n                <p>{comment.comment_content}</p>\n              \n              </div>\n            ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Likes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}