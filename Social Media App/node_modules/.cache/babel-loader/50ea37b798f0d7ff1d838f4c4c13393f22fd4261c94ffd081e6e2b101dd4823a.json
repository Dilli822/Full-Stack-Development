{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Update() {\n  _s();\n  useEffect(() => {\n    // Fetch blogs data and update state\n    fetch('http://localhost:8000/api/blog/list/', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    }).then(response => response.json()).then(data => setBlogs(data)).catch(error => console.error(error));\n  }, []);\n  const handleUpdate = event => {\n    event.preventDefault();\n    const blogToUpdate = blogs.find(blog => blog.id === selectedBlogId);\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle || blogToUpdate.title,\n      content: updatedBlogContent || blogToUpdate.content,\n      authorName: updatedBlogAuthorName || blogToUpdate.authorName,\n      image: updatedBlogImage || blogToUpdate.image\n    };\n    const formData = new FormData();\n    formData.append('title', updatedBlog.title);\n    formData.append('content', updatedBlog.content);\n    formData.append('authorName', updatedBlog.authorName);\n    formData.append('image', updatedBlogImage);\n    fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: formData\n    }).then(response => response.json()).then(data => {\n      const updatedBlogIndex = blogs.findIndex(blog => blog.id === data.id);\n      const updatedBlogs = [...blogs];\n      updatedBlogs[updatedBlogIndex] = data;\n      setBlogs(updatedBlogs);\n      setSelectedBlogId('');\n      setUpdatedBlogTitle('');\n      setUpdatedBlogContent('');\n      setUpdatedBlogAuthorName('');\n      setUpdatedBlogImage(null);\n      setImageUrl(null);\n    }).catch(error => console.error(error));\n  };\n}\n_s(Update, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Update;\n;\nconst cancelUpdate = () => {\n  setSelectedBlogId('');\n  setUpdatedBlogTitle('');\n  setUpdatedBlogContent('');\n  setUpdatedBlogAuthorName('');\n  setUpdatedBlogImage(null);\n  setImageUrl(null);\n};\n\n// Check if there is a previously saved image for the record and prepopulate the image upload field\nuseEffect(() => {\n  if (selectedBlogId !== '') {\n    setImageUrl(blogs.find(blog => blog.id === selectedBlogId).image);\n  }\n}, [selectedBlogId]);\nconst handleFileUpload = event => {\n  setUpdatedBlogImage(event.target.files[0]);\n  // Check if there is a previously saved image for the record\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: '/imageUpload',\n        children: \"Image Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        encType: \"multipart/form-data\",\n        children: [selectedBlogId !== '' && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Update Blog \\\"\", blogs.find(blog => blog.id === selectedBlogId).title, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blog-title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"blog-title\",\n          value: updatedBlogTitle || blogs.find(blog => blog.id === selectedBlogId).title,\n          onChange: e => setUpdatedBlogTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blog-author\",\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"blog-author\",\n          value: updatedBlogAuthorName || blogs.find(blog => blog.id === selectedBlogId).authorName,\n          onChange: e => setUpdatedBlogAuthorName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blog-image\",\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"blog-image\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"Blog thumbnail\",\n          style: {\n            width: '200px',\n            marginTop: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary ml-2\",\n          onClick: cancelUpdate,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Update","_s","fetch","method","headers","Authorization","localStorage","getItem","then","response","json","data","setBlogs","catch","error","console","handleUpdate","event","preventDefault","blogToUpdate","blogs","find","blog","id","selectedBlogId","updatedBlog","title","updatedBlogTitle","content","updatedBlogContent","authorName","updatedBlogAuthorName","image","updatedBlogImage","formData","FormData","append","body","updatedBlogIndex","findIndex","updatedBlogs","setSelectedBlogId","setUpdatedBlogTitle","setUpdatedBlogContent","setUpdatedBlogAuthorName","setUpdatedBlogImage","setImageUrl","_c","cancelUpdate","handleFileUpload","target","files","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","htmlFor","type","value","onChange","e","imageUrl","src","alt","style","width","marginTop","className","onClick","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Update() {\n\n\n  useEffect(() => {\n    // Fetch blogs data and update state\n    fetch('http://localhost:8000/api/blog/list/', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => setBlogs(data))\n      .catch((error) => console.error(error));\n  }, []);\n\n  const handleUpdate = (event) => {\n    event.preventDefault();\n    const blogToUpdate = blogs.find((blog) => blog.id === selectedBlogId);\n\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle || blogToUpdate.title,\n      content: updatedBlogContent || blogToUpdate.content,\n      authorName: updatedBlogAuthorName || blogToUpdate.authorName,\n      image: updatedBlogImage || blogToUpdate.image,\n    };\n\n    const formData = new FormData();\n    formData.append('title', updatedBlog.title);\n    formData.append('content', updatedBlog.content);\n    formData.append('authorName', updatedBlog.authorName);\n    formData.append('image', updatedBlogImage);\n\n    fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n      },\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const updatedBlogIndex = blogs.findIndex((blog) => blog.id === data.id);\n        const updatedBlogs = [...blogs];\n        updatedBlogs[updatedBlogIndex] = data;\n        setBlogs(updatedBlogs);\n        setSelectedBlogId('');\n        setUpdatedBlogTitle('');\n        setUpdatedBlogContent('');\n        setUpdatedBlogAuthorName('');\n        setUpdatedBlogImage(null);\n        setImageUrl(null);\n      })\n      .catch((error) => console.error(error));\n    }\n  };\n\n  const cancelUpdate = () => {\n    setSelectedBlogId('');\n    setUpdatedBlogTitle('');\n    setUpdatedBlogContent('');\n    setUpdatedBlogAuthorName('');\n    setUpdatedBlogImage(null);\n    setImageUrl(null);\n  };\n\n  // Check if there is a previously saved image for the record and prepopulate the image upload field\n  useEffect(() => {\n    if (selectedBlogId !== '') {\n      setImageUrl(blogs.find((blog) => blog.id === selectedBlogId).image);\n    }\n  }, [selectedBlogId]);\n\n  const handleFileUpload = (event) => {\n    setUpdatedBlogImage(event.target.files[0]);\n  // Check if there is a previously saved image for the record\n  return (\n    <div>\n      <div>\n        <Link to={'/imageUpload'}>Image Upload</Link>\n        <form onSubmit={handleUpdate} encType='multipart/form-data'>\n          {selectedBlogId !== '' && (\n            <h2>Update Blog \"{blogs.find((blog) => blog.id === selectedBlogId).title}\"</h2>\n          )}\n          <label htmlFor='blog-title'>Title:</label>\n          <input\n            type='text'\n            id='blog-title'\n            value={updatedBlogTitle || blogs.find((blog) => blog.id === selectedBlogId).title}\n            onChange={(e) => setUpdatedBlogTitle(e.target.value)}\n          />\n          <label htmlFor='blog-author'>Author:</label>\n          <input\n            type='text'\n            id='blog-author'\n            value={updatedBlogAuthorName || blogs.find((blog) => blog.id === selectedBlogId).authorName}\n            onChange={(e) => setUpdatedBlogAuthorName(e.target.value)}\n          />\n          <label htmlFor='blog-image'>Image:</label>\n          <input\n            type='file'\n            id='blog-image'\n            onChange={handleFileUpload}\n          />\n          {imageUrl && (\n            <img\n              src={imageUrl}\n              alt='Blog thumbnail'\n              style={{ width: '200px', marginTop: '10px' }}\n            />\n          )}\n          <button type='submit' className='btn btn-primary'>\n            Update\n          </button>\n          <button type='button' className='btn btn-secondary ml-2' onClick={cancelUpdate}>\n            Cancel\n          </button>\n        </form>\n      </div>\n    </div>\n  )}\nexport default Update;  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}