{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Update() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [selectedBlogId, setSelectedBlogId] = useState('');\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState('');\n  const [updatedBlogContent, setUpdatedBlogContent] = useState('');\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState('');\n  const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  useEffect(() => {\n    // Fetch blogs data and update state\n    fetch('http://localhost:8000/api/blog/list/', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    }).then(response => response.json()).then(data => setBlogs(data)).catch(error => console.error(error));\n  }, []);\n  const handleUpdate = event => {\n    event.preventDefault();\n    const blogToUpdate = blogs.find(blog => blog.id === selectedBlogId);\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle || blogToUpdate.title,\n      content: updatedBlogContent || blogToUpdate.content,\n      authorName: updatedBlogAuthorName || blogToUpdate.authorName,\n      image: updatedBlogImage || blogToUpdate.image\n    };\n    const formData = new FormData();\n    formData.append('title', updatedBlog.title);\n    formData.append('content', updatedBlog.content);\n    formData.append('authorName', updatedBlog.authorName);\n    formData.append('image', updatedBlogImage);\n    fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: formData\n    }).then(response => response.json()).then(data => {\n      const updatedBlogIndex = blogs.findIndex(blog => blog.id === data.id);\n      const updatedBlogs = [...blogs];\n      updatedBlogs[updatedBlogIndex] = data;\n      setBlogs(updatedBlogs);\n      setSelectedBlogId('');\n      setUpdatedBlogTitle('');\n      setUpdatedBlogContent('');\n      setUpdatedBlogAuthorName('');\n      setUpdatedBlogImage(null);\n      setImageUrl(null);\n    }).catch(error => console.error(error));\n  };\n  const cancelUpdate = () => {\n    setSelectedBlogId('');\n    setUpdatedBlogTitle('');\n    setUpdatedBlogContent('');\n    setUpdatedBlogAuthorName('');\n    setUpdatedBlogImage(null);\n    setImageUrl(null);\n  };\n\n  // Check if there is a previously saved image for the record and prepopulate the image upload field\n  useEffect(() => {\n    if (selectedBlogId !== '') {\n      setImageUrl(blogs.find(blog => blog.id === selectedBlogId).image);\n    }\n  }, [selectedBlogId]);\n  const handleFileUpload = event => {\n    setUpdatedBlogImage(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Update, \"WX+D+PSGjAiQogxzCqvWmMHVXK0=\");\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Update","_s","blogs","setBlogs","selectedBlogId","setSelectedBlogId","updatedBlogTitle","setUpdatedBlogTitle","updatedBlogContent","setUpdatedBlogContent","updatedBlogAuthorName","setUpdatedBlogAuthorName","updatedBlogImage","setUpdatedBlogImage","imageUrl","setImageUrl","fetch","method","headers","Authorization","localStorage","getItem","then","response","json","data","catch","error","console","handleUpdate","event","preventDefault","blogToUpdate","find","blog","id","updatedBlog","title","content","authorName","image","formData","FormData","append","body","updatedBlogIndex","findIndex","updatedBlogs","cancelUpdate","handleFileUpload","target","files","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Update() {\n  const [blogs, setBlogs] = useState([]);\n  const [selectedBlogId, setSelectedBlogId] = useState('');\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState('');\n  const [updatedBlogContent, setUpdatedBlogContent] = useState('');\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState('');\n  const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n\n  useEffect(() => {\n    // Fetch blogs data and update state\n    fetch('http://localhost:8000/api/blog/list/', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => setBlogs(data))\n      .catch((error) => console.error(error));\n  }, []);\n\n  const handleUpdate = (event) => {\n    event.preventDefault();\n    const blogToUpdate = blogs.find((blog) => blog.id === selectedBlogId);\n\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle || blogToUpdate.title,\n      content: updatedBlogContent || blogToUpdate.content,\n      authorName: updatedBlogAuthorName || blogToUpdate.authorName,\n      image: updatedBlogImage || blogToUpdate.image,\n    };\n\n    const formData = new FormData();\n    formData.append('title', updatedBlog.title);\n    formData.append('content', updatedBlog.content);\n    formData.append('authorName', updatedBlog.authorName);\n    formData.append('image', updatedBlogImage);\n\n    fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n      },\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const updatedBlogIndex = blogs.findIndex((blog) => blog.id === data.id);\n        const updatedBlogs = [...blogs];\n        updatedBlogs[updatedBlogIndex] = data;\n        setBlogs(updatedBlogs);\n        setSelectedBlogId('');\n        setUpdatedBlogTitle('');\n        setUpdatedBlogContent('');\n        setUpdatedBlogAuthorName('');\n        setUpdatedBlogImage(null);\n        setImageUrl(null);\n      })\n      .catch((error) => console.error(error));\n  };\n\n  const cancelUpdate = () => {\n    setSelectedBlogId('');\n    setUpdatedBlogTitle('');\n    setUpdatedBlogContent('');\n    setUpdatedBlogAuthorName('');\n    setUpdatedBlogImage(null);\n    setImageUrl(null);\n  };\n\n  // Check if there is a previously saved image for the record and prepopulate the image upload field\n  useEffect(() => {\n    if (selectedBlogId !== '') {\n      setImageUrl(blogs.find((blog) => blog.id === selectedBlogId).image);\n    }\n  }, [selectedBlogId]);\n\n  const handleFileUpload = (event) => {\n    setUpdatedBlogImage(event.target.files[0]);\n  };\n\n  return (\n    <div>\n    \n\n    </div>\n    );\n}\n\nexport default Update;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}