{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction Comments() {\n  _s();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    fetchComments();\n  }, []);\n  const fetchComments = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/blog/comments/', {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"comments are \", data);\n        setComments(data);\n      } else {\n        console.error('Failed to fetch comments');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // return (\n  //   <div>\n  //     {comments.map((comment) => (\n  //       <div key={comment.id}>\n\n  //         <p>comments: {comment.comment_content}</p>\n  //         <p>commented_by: {comment.author}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n}\n_s(Comments, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = Comments;\n;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","Comments","_s","comments","setComments","fetchComments","response","fetch","method","headers","Authorization","localStorage","getItem","ok","data","json","console","log","error","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Comments () {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const fetchComments = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/blog/comments/', {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        },\n    \n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"comments are \", data);\n        setComments(data);\n      } else {\n        console.error('Failed to fetch comments');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // return (\n  //   <div>\n  //     {comments.map((comment) => (\n  //       <div key={comment.id}>\n   \n  //         <p>comments: {comment.comment_content}</p>\n  //         <p>commented_by: {comment.author}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n};\n\nexport default Comments;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,QAAQA,CAAA,EAAI;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdK,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACvEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;QAC/D;MAEF,CAAC,CAAC;MACF,IAAIN,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;QAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;QAClCV,WAAW,CAACU,IAAI,CAAC;MACnB,CAAC,MAAM;QACLE,OAAO,CAACE,KAAK,CAAC,0BAA0B,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;AACF;AAAChB,EAAA,CAxCQD,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AAwChB;AAED,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}