{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogList() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [likes, setLikes] = useState(0);\n  const [blogId, setBlogId] = useState();\n  const fetchBlogs = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      console.log(data); // log the data to the console\n      setBlogs(data); // update the state with the fetched data\n      data.forEach(blog => {\n        setBlogId(blog.id);\n      });\n      setLikes(data.likes);\n    } catch (error) {\n      console.error(\"Error fetching blogs:\", error);\n    }\n  };\n  const handleLike = async blogId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          likes: blogs.find(blog => blog.id === blogId).likes + 1\n        })\n      });\n      const data = await response.json();\n      setBlogs(prevBlogs => prevBlogs.map(blog => blog.id === blogId ? {\n        ...blog,\n        likes: data.likes\n      } : blog));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"likes\", blog.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), blog.author_id, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"liked by \", blog.liked_by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLike,\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogList, \"LkwAo+6sAJJL+dkjE8JX7mH83u4=\");\n_c = BlogList;\nexport default BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","BlogList","_s","blogs","setBlogs","likes","setLikes","blogId","setBlogId","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","ok","Error","data","json","console","log","forEach","blog","id","error","handleLike","method","body","JSON","stringify","find","prevBlogs","map","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","author_id","liked_by","onClick","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction BlogList() {\n  const [blogs, setBlogs] = useState([]);\n  const [likes, setLikes] = useState(0);\n  const [blogId, setBlogId] = useState();\n\n\n  const fetchBlogs = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        },\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      console.log(data); // log the data to the console\n      setBlogs(data); // update the state with the fetched data\n      data.forEach(blog => {\n        setBlogId(blog.id);\n      });\n      setLikes(data.likes);\n    } catch (error) {\n      console.error(\"Error fetching blogs:\", error);\n    }\n  };\n  \n\n  const handleLike = async (blogId) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8000/api/blog/likes/update/${blogId}/`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            likes: blogs.find((blog) => blog.id === blogId).likes + 1,\n          }),\n        }\n      );\n      const data = await response.json();\n      setBlogs((prevBlogs) =>\n        prevBlogs.map((blog) =>\n          blog.id === blogId ? { ...blog, likes: data.likes } : blog\n        )\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  \n  return (\n    <div>\n      {blogs.map((blog) => (\n        <div key={blog.id}>\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n          <p>likes{blog.likes}</p>\n          {blog.author_id}\n          <p>liked by {blog.liked_by}</p>\n          <div>\n\n  <button onClick={handleLike}>Like</button>\n</div>\n\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default BlogList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}