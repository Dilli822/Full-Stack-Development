{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/drf-blog-api-master/django/frontend/src/components/blogapp/update.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateBlog() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedBlogId, setSelectedBlogId] = useState('');\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState('');\n  const [updatedBlogContent, setUpdatedBlogContent] = useState('');\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:8000/api/blog/', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    }).then(response => response.json()).then(data => {\n      setBlogs(data);\n      setLoading(false);\n    }).catch(error => console.error(error));\n  }, []);\n\n  //   const handleUpdate = () => {\n  //     const updatedBlog = {\n  //         id: selectedBlogId,\n  //         title: updatedBlogTitle === '' ? '' : updatedBlogTitle || blogs.find(blog => blog.id === selectedBlogId).title,\n  //         content: updatedBlogContent === '' ? '' : updatedBlogContent || blogs.find(blog => blog.id === selectedBlogId).content,\n  //         authorName: updatedBlogAuthorName === '' ? '' : updatedBlogAuthorName || blogs.find(blog => blog.id === selectedBlogId).authorName\n  //       }\n\n  //     fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n  //       method: 'PUT',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n  //       },\n  //       body: JSON.stringify(updatedBlog)\n  //     })\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       const index = blogs.findIndex(blog => blog.id === data.id)\n  //       const newBlogs = [...blogs]\n  //       newBlogs[index] = data\n  //       setBlogs(newBlogs)\n  //       setSelectedBlogId('')\n  //       setUpdatedBlogTitle('')\n  //       setUpdatedBlogContent('')\n  //       setUpdatedBlogAuthorName('')\n  //     })\n  //     .catch(error => console.error(error))\n  //   }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", blog.authorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedBlogId(blog.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), selectedBlogId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), blogs.map(blog => {\n        if (blog.id === selectedBlogId) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: updatedBlogTitle || blog.title,\n                onChange: event => setUpdatedBlogTitle(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: updatedBlogContent || blog.content,\n                onChange: event => setUpdatedBlogContent(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Author Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: updatedBlogAuthorName || blog.authorName,\n                onChange: event => setUpdatedBlogAuthorName(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this)]\n          }, blog.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this);\n        } else {\n          return null;\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedBlogId(''),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateBlog, \"58Qh7sZ76TNr8hpSPm+6peWcQ1k=\");\n_c = UpdateBlog;\nvar _c;\n$RefreshReg$(_c, \"UpdateBlog\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UpdateBlog","_s","blogs","setBlogs","loading","setLoading","selectedBlogId","setSelectedBlogId","updatedBlogTitle","setUpdatedBlogTitle","updatedBlogContent","setUpdatedBlogContent","updatedBlogAuthorName","setUpdatedBlogAuthorName","fetch","headers","localStorage","getItem","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","blog","title","content","authorName","onClick","id","type","value","onChange","event","target","handleUpdate","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/drf-blog-api-master/django/frontend/src/components/blogapp/update.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function UpdateBlog() {\n  const [blogs, setBlogs] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  const [selectedBlogId, setSelectedBlogId] = useState('')\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState('')\n  const [updatedBlogContent, setUpdatedBlogContent] = useState('')\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState('')\n\n  useEffect(() => {\n    fetch('http://localhost:8000/api/blog/', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    })\n    .then(response => response.json())\n    .then(data => {\n      setBlogs(data)\n      setLoading(false)\n    })\n    .catch(error => console.error(error))\n  }, [])\n\n//   const handleUpdate = () => {\n//     const updatedBlog = {\n//         id: selectedBlogId,\n//         title: updatedBlogTitle === '' ? '' : updatedBlogTitle || blogs.find(blog => blog.id === selectedBlogId).title,\n//         content: updatedBlogContent === '' ? '' : updatedBlogContent || blogs.find(blog => blog.id === selectedBlogId).content,\n//         authorName: updatedBlogAuthorName === '' ? '' : updatedBlogAuthorName || blogs.find(blog => blog.id === selectedBlogId).authorName\n//       }\n      \n//     fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       },\n//       body: JSON.stringify(updatedBlog)\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       const index = blogs.findIndex(blog => blog.id === data.id)\n//       const newBlogs = [...blogs]\n//       newBlogs[index] = data\n//       setBlogs(newBlogs)\n//       setSelectedBlogId('')\n//       setUpdatedBlogTitle('')\n//       setUpdatedBlogContent('')\n//       setUpdatedBlogAuthorName('')\n//     })\n//     .catch(error => console.error(error))\n//   }\n\n\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  return (\n    <div>\n      <h1>Blog List</h1>\n      <ul>\n        {blogs.map(blog => (\n          <li key={blog.id}>\n            <h2>{blog.title}</h2>\n            <p>{blog.content}</p>\n            <p>Author: {blog.authorName}</p>\n            <button onClick={() => setSelectedBlogId(blog.id)}>Edit</button>\n          </li>\n        ))}\n      </ul>\n      {selectedBlogId && (\n  <div>\n    <h2>Edit Blog</h2>\n    {blogs.map(blog => {\n      if (blog.id === selectedBlogId) {\n        return (\n          <div key={blog.id}>\n            <label>\n              Title:\n              <input\n                type=\"text\"\n                value={updatedBlogTitle || blog.title}\n                onChange={(event) => setUpdatedBlogTitle(event.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Content:\n              <textarea\n                value={updatedBlogContent || blog.content}\n                onChange={(event) => setUpdatedBlogContent(event.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Author Name:\n              <input\n                type=\"text\"\n                value={updatedBlogAuthorName || blog.authorName}\n                onChange={(event) => setUpdatedBlogAuthorName(event.target.value)}\n              />\n            </label>\n            <br />\n          </div>\n        );\n      } else {\n        return null;\n      }\n    })}\n    <button onClick={handleUpdate}>Save Changes</button>\n    <button onClick={() => setSelectedBlogId('')}>Cancel</button>\n  </div>\n)}\n\n</div>\n)}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}