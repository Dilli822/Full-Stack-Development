{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Update() {\n  _s();\n  useEffect(() => {});\n  const handleUpdate = () => {\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n      content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n      authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n    };\n    const formData = new FormData();\n    formData.append('title', updatedBlog.title);\n    formData.append('content', updatedBlog.content);\n    formData.append('authorName', updatedBlog.authorName);\n    formData.append('image', updatedBlogImage);\n    fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: formData\n    }).then(response => response.json()).then(data => {\n      const index = blogs.findIndex(blog => blog.id === data.id);\n      const newBlogs = [...blogs];\n      newBlogs[index] = data;\n      setBlogs(newBlogs);\n      setSelectedBlogId('');\n      setUpdatedBlogTitle(undefined);\n      setUpdatedBlogContent(undefined);\n      setUpdatedBlogAuthorName(undefined);\n      setUpdatedBlogImage(null);\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Update, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["Update","_s","useEffect","handleUpdate","updatedBlog","id","selectedBlogId","title","updatedBlogTitle","undefined","blogs","find","blog","content","updatedBlogContent","authorName","updatedBlogAuthorName","formData","FormData","append","updatedBlogImage","fetch","method","headers","localStorage","getItem","body","then","response","json","data","index","findIndex","newBlogs","setBlogs","setSelectedBlogId","setUpdatedBlogTitle","setUpdatedBlogContent","setUpdatedBlogAuthorName","setUpdatedBlogImage","catch","error","console","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js"],"sourcesContent":["function Update() {\n  useEffect(() => {\n    \n  })\nconst handleUpdate = () => {\n  const updatedBlog = {\n    id: selectedBlogId,\n    title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n    content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n    authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n  }\n\n  const formData = new FormData();\n  formData.append('title', updatedBlog.title);\n  formData.append('content', updatedBlog.content);\n  formData.append('authorName', updatedBlog.authorName);\n  formData.append('image', updatedBlogImage);\n\n  fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n    },\n    body: formData\n  })\n  .then(response => response.json())\n  .then(data => {\n    const index = blogs.findIndex(blog => blog.id === data.id)\n    const newBlogs = [...blogs]\n    newBlogs[index] = data\n    setBlogs(newBlogs)\n    setSelectedBlogId('')\n    setUpdatedBlogTitle(undefined)\n    setUpdatedBlogContent(undefined)\n    setUpdatedBlogAuthorName(undefined)\n    setUpdatedBlogImage(null)\n  })\n  .catch(error => console.error(error))\n}\n\n\n  return(\n    <div>\n\n    </div>\n  )\n}\n\nexport default Update;\n"],"mappings":";;;AAAA,SAASA,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChBC,SAAS,CAAC,MAAM,CAEhB,CAAC,CAAC;EACJ,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAG;MAClBC,EAAE,EAAEC,cAAc;MAClBC,KAAK,EAAEC,gBAAgB,KAAKC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKC,cAAc,CAAC,CAACC,KAAK,GAAGC,gBAAgB;MAC/GK,OAAO,EAAEC,kBAAkB,KAAKL,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKC,cAAc,CAAC,CAACO,OAAO,GAAGC,kBAAkB;MACvHC,UAAU,EAAEC,qBAAqB,KAAKP,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKC,cAAc,CAAC,CAACS,UAAU,GAAGC;IAChH,CAAC;IAED,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEf,WAAW,CAACG,KAAK,CAAC;IAC3CU,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEf,WAAW,CAACS,OAAO,CAAC;IAC/CI,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEf,WAAW,CAACW,UAAU,CAAC;IACrDE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEC,gBAAgB,CAAC;IAE1CC,KAAK,CAAE,yCAAwCjB,WAAW,CAACC,EAAG,GAAE,EAAE;MAChEiB,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;MACjE,CAAC;MACDC,IAAI,EAAET;IACR,CAAC,CAAC,CACDU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,KAAK,GAAGrB,KAAK,CAACsB,SAAS,CAACpB,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKyB,IAAI,CAACzB,EAAE,CAAC;MAC1D,MAAM4B,QAAQ,GAAG,CAAC,GAAGvB,KAAK,CAAC;MAC3BuB,QAAQ,CAACF,KAAK,CAAC,GAAGD,IAAI;MACtBI,QAAQ,CAACD,QAAQ,CAAC;MAClBE,iBAAiB,CAAC,EAAE,CAAC;MACrBC,mBAAmB,CAAC3B,SAAS,CAAC;MAC9B4B,qBAAqB,CAAC5B,SAAS,CAAC;MAChC6B,wBAAwB,CAAC7B,SAAS,CAAC;MACnC8B,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACvC,CAAC;EAGC,oBACEE,OAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEM;AAEV;AAAC9C,EAAA,CA9CQD,MAAM;AAAAgD,EAAA,GAANhD,MAAM;AAgDf,eAAeA,MAAM;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}