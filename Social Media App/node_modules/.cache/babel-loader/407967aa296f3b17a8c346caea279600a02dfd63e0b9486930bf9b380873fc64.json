{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes(_ref) {\n  _s();\n  let {\n    blogId,\n    likes,\n    likedBy\n  } = _ref;\n  const [isLiked, setIsLiked] = useState(likedBy.liked);\n  const [numLikes, setNumLikes] = useState(likedBy.likes);\n  const [likedByList, setLikedByList] = useState(likedBy.liked_by);\n  const [error, setError] = useState(\"\");\n  const [authorId, setAuthorId] = useState(likedBy.author_id);\n  useEffect(() => {\n    const fetchBlogLikes = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            author_id: authorId,\n            likes: numLikes,\n            liked: isLiked,\n            liked_by: likedByList\n          })\n        });\n        const data = await response.json();\n        setIsLiked(data.liked);\n        setNumLikes(data.likes);\n        setLikedByList(data.liked_by);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch like state.\");\n      }\n    };\n    fetchBlogLikes();\n  }, []);\n  const handleLikeClick = async () => {\n    try {\n      let newLikedState = !isLiked;\n      let newLikes = numLikes;\n      let newLikedByState = likedByList;\n      if (newLikedState) {\n        newLikes += 1;\n        newLikedByState = [...likedByList, authorId];\n      } else {\n        newLikes -= 1;\n        newLikedByState = likedByList.filter(id => id !== authorId);\n      }\n      setIsLiked(newLikedState);\n      setNumLikes(newLikes);\n      setLikedByList(newLikedByState);\n\n      // Call API to update like state\n      await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          author_id: authorId,\n          likes: newLikes,\n          liked: newLikedState,\n          liked_by: newLikedByState\n        })\n      });\n    } catch (error) {\n      console.error(error);\n      setError(\"Failed to update like state.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLikeClick,\n      children: isLiked ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: numLikes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"xkiOJsMhUvav4oNlcxR7AxHNhX8=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","ShareIcon","jsxDEV","_jsxDEV","Likes","_ref","_s","blogId","likes","likedBy","isLiked","setIsLiked","liked","numLikes","setNumLikes","likedByList","setLikedByList","liked_by","error","setError","authorId","setAuthorId","author_id","fetchBlogLikes","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","data","json","console","handleLikeClick","newLikedState","newLikes","newLikedByState","filter","id","children","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\nexport default function Likes({ blogId, likes, likedBy }) {\n  const [isLiked, setIsLiked] = useState(likedBy.liked);\n  const [numLikes, setNumLikes] = useState(likedBy.likes);\n  const [likedByList, setLikedByList] = useState(likedBy.liked_by);\n  const [error, setError] = useState(\"\");\n  const [authorId, setAuthorId] = useState(likedBy.author_id);\n\n  useEffect(() => {\n    const fetchBlogLikes = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            author_id: authorId,\n            likes: numLikes,\n            liked: isLiked,\n            liked_by: likedByList,\n          }),\n        });\n\n        const data = await response.json();\n        setIsLiked(data.liked);\n        setNumLikes(data.likes);\n        setLikedByList(data.liked_by);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch like state.\");\n      }\n    };\n\n    fetchBlogLikes();\n  }, []);\n\n  const handleLikeClick = async () => {\n    try {\n      let newLikedState = !isLiked;\n      let newLikes = numLikes;\n      let newLikedByState = likedByList;\n\n      if (newLikedState) {\n        newLikes += 1;\n        newLikedByState = [...likedByList, authorId];\n      } else {\n        newLikes -= 1;\n        newLikedByState = likedByList.filter((id) => id !== authorId);\n      }\n\n      setIsLiked(newLikedState);\n      setNumLikes(newLikes);\n      setLikedByList(newLikedByState);\n\n      // Call API to update like state\n      await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          author_id: authorId,\n          likes: newLikes,\n          liked: newLikedState,\n          liked_by: newLikedByState,\n        }),\n      });\n    } catch (error) {\n      console.error(error);\n      setError(\"Failed to update like state.\");\n    }\n  };\n\n  return (\n    <div>\n      <IconButton onClick={handleLikeClick}>\n        {isLiked ? <FavoriteIcon color=\"primary\" /> : <FavoriteIcon />}\n      </IconButton>\n      <span>{numLikes}</span>\n      <IconButton>\n        <ShareIcon />\n      </IconButton>\n      {error && <p>{error}</p>}\n    </div>\n  );\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}