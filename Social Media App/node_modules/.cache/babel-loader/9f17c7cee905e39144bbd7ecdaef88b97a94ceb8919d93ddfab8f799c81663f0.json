{"ast":null,"code":"// import React, { useState } from 'react';\n// import Blog from './blog';\n// import { Link, Navigate } from 'react-router-dom';\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loggedIn, setLoggedIn] = useState(false); // added state for redirecting\n\n//   const [errorMsg, setErrorMsg] = useState('');\n//   const [authMsg, setAuthMsg] = useState('');\n//   const [apiErrorMsg,setApiErrorMsg] = useState('');\n\n//   const handleUsernameChange =(event) => {\n//     if (username.length < 3) {\n//       setUsrErrorMessage('Username should have at least 5 characters');\n//     } else if(username.length > 3){\n//       setUsrErrorMessage('');\n//     }\n//     setUsername(event.target.value)\n//   };\n\n//   const handlePasswordChange = (event) => {\n//     if(password.length < 8){\n//       setPwdErrorMessage('password should have at least 8 characters');\n//     } else if(password.length > 8){\n//       setPwdErrorMessage('');\n//     }\n//     setPassword(event.target.value);\n//   };\n\n//   const [pwdErrorMessage, setPwdErrorMessage] = useState('');\n//   const [usrErrorMessage,setUsrErrorMessage] = useState('');\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     (!username || !password) ? setErrorMsg(\"Please Enter the Fields!\"): setErrorMsg(\"\"); \n\n//       fetch('http://localhost:8000/api/login/', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ username, password })\n//       })\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         else if (response.status == 400) {\n//           // Bad request error\n//           setApiErrorMsg(\"Please check your Inputs and try again.\")\n//           throw new Error('Please check your inputs and try again.');\n//         }\n//         else if (response.status == 401) {\n//           // Authentication error\n//           setApiErrorMsg('Invalid credentials. Please try again with valid username and password.');\n//           throw new Error('Invalid Credentials. Please Try again with correct username and password.');\n//         }\n//         else if (response.status == 403) {\n//           // Authorization error\n//           setApiErrorMsg('You do not have permission to access this resource.');\n//           throw new Error('You do not have permission to access this resource.');\n//         }\n//         else if (response.status == 404) {\n//           // Resource not found error\n//           setApiErrorMsg('The requested resource was not found on the server.Please try again later!');\n//           throw new Error('The requested resource was not found on the server.');\n//         }  \n\n//         else if (response.status == 500) {\n//           setApiErrorMsg('Internal server error. Please try again later.');\n//           // Internal server error\n//           throw new Error('Internal server error. Please try again later.');\n//         } else if(response.status == 503){\n//           setApiErrorMsg('!Server may be down!Please Try again later');\n//         }\n//         else {\n//           setApiErrorMsg('server maybe down');\n//           // Other error\n//           throw new Error('Login failed. Please try again later.');\n//         }\n//       })\n//       .then(data => {\n//         // Save the refresh and access tokens in local storage or cookies\n//         localStorage.setItem('refreshToken', data.refresh)\n//         localStorage.setItem('accessToken', data.access)\n//         setLoggedIn(true);\n//         // Redirect to dashboard or homepage\n//       })\n//       .catch(error => {\n//         console.error(error);\n\n//       if(username && password){\n//         setErrorMsg(\"\");\n//         setApiErrorMsg(error.message);\n//         return;\n//       }\n//       // else if(response.status == 503){\n//       //   setApiErrorMsg('!Server may be down!Please Try again later');\n//       // }\n//         setApiErrorMsg(error.message);\n//       })\n//     }\n\n//   if (loggedIn) { \n//     // redirect to Dashboard if loggedIn is true\n//     return <Navigate to=\"/blog\"/>\n//   }\n\n//   return (\n\n//     <form onSubmit={handleSubmit} style={{maxWidth: \"200px\"}}>\n//      <h2>Login</h2>\n//       <div>\n//         <div className=\"validationError\">{usrErrorMessage} \n//         {errorMsg} </div> \n//         <input\n//           type=\"text\"\n//           id=\"username\"\n//           value={username}\n//           onChange={handleUsernameChange}\n//           placeholder=\"Enter Your Username\"\n//         />\n//       </div>\n//       <div>\n\n//         <div className=\"validationError\"> {pwdErrorMessage}\n//         {errorMsg}</div> \n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           value={password}\n//           onChange={handlePasswordChange}\n//           placeholder=\"Enter Your Password\"\n//         />\n//       </div>\n//       <div className=\"validationError\">{apiErrorMsg && <span>{apiErrorMsg}</span>}</div>\n\n//       <div>\n//       <button type=\"submit\">Log in</button>\n\n//       <h4>Don't have an account?</h4>\n//       <Link to=\"/signup\"> <button>Signup </button></Link>\n//       </div>\n\n//     </form>\n//   );\n// }\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/login.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Blog from './blog';\n// import { Link, Navigate } from 'react-router-dom';\n\n// function Login() {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loggedIn, setLoggedIn] = useState(false); // added state for redirecting\n\n//   const [errorMsg, setErrorMsg] = useState('');\n//   const [authMsg, setAuthMsg] = useState('');\n//   const [apiErrorMsg,setApiErrorMsg] = useState('');\n\n//   const handleUsernameChange =(event) => {\n//     if (username.length < 3) {\n//       setUsrErrorMessage('Username should have at least 5 characters');\n//     } else if(username.length > 3){\n//       setUsrErrorMessage('');\n//     }\n//     setUsername(event.target.value)\n//   };\n\n//   const handlePasswordChange = (event) => {\n//     if(password.length < 8){\n//       setPwdErrorMessage('password should have at least 8 characters');\n//     } else if(password.length > 8){\n//       setPwdErrorMessage('');\n//     }\n//     setPassword(event.target.value);\n//   };\n\n//   const [pwdErrorMessage, setPwdErrorMessage] = useState('');\n//   const [usrErrorMessage,setUsrErrorMessage] = useState('');\n  \n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     (!username || !password) ? setErrorMsg(\"Please Enter the Fields!\"): setErrorMsg(\"\"); \n\n//       fetch('http://localhost:8000/api/login/', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ username, password })\n//       })\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         else if (response.status == 400) {\n//           // Bad request error\n//           setApiErrorMsg(\"Please check your Inputs and try again.\")\n//           throw new Error('Please check your inputs and try again.');\n//         }\n//         else if (response.status == 401) {\n//           // Authentication error\n//           setApiErrorMsg('Invalid credentials. Please try again with valid username and password.');\n//           throw new Error('Invalid Credentials. Please Try again with correct username and password.');\n//         }\n//         else if (response.status == 403) {\n//           // Authorization error\n//           setApiErrorMsg('You do not have permission to access this resource.');\n//           throw new Error('You do not have permission to access this resource.');\n//         }\n//         else if (response.status == 404) {\n//           // Resource not found error\n//           setApiErrorMsg('The requested resource was not found on the server.Please try again later!');\n//           throw new Error('The requested resource was not found on the server.');\n//         }  \n      \n//         else if (response.status == 500) {\n//           setApiErrorMsg('Internal server error. Please try again later.');\n//           // Internal server error\n//           throw new Error('Internal server error. Please try again later.');\n//         } else if(response.status == 503){\n//           setApiErrorMsg('!Server may be down!Please Try again later');\n//         }\n//         else {\n//           setApiErrorMsg('server maybe down');\n//           // Other error\n//           throw new Error('Login failed. Please try again later.');\n//         }\n//       })\n//       .then(data => {\n//         // Save the refresh and access tokens in local storage or cookies\n//         localStorage.setItem('refreshToken', data.refresh)\n//         localStorage.setItem('accessToken', data.access)\n//         setLoggedIn(true);\n//         // Redirect to dashboard or homepage\n//       })\n//       .catch(error => {\n//         console.error(error);\n        \n        \n//       if(username && password){\n//         setErrorMsg(\"\");\n//         setApiErrorMsg(error.message);\n//         return;\n//       }\n//       // else if(response.status == 503){\n//       //   setApiErrorMsg('!Server may be down!Please Try again later');\n//       // }\n//         setApiErrorMsg(error.message);\n//       })\n//     }\n    \n//   if (loggedIn) { \n//     // redirect to Dashboard if loggedIn is true\n//     return <Navigate to=\"/blog\"/>\n//   }\n\n\n//   return (\n\n//     <form onSubmit={handleSubmit} style={{maxWidth: \"200px\"}}>\n//      <h2>Login</h2>\n//       <div>\n//         <div className=\"validationError\">{usrErrorMessage} \n//         {errorMsg} </div> \n//         <input\n//           type=\"text\"\n//           id=\"username\"\n//           value={username}\n//           onChange={handleUsernameChange}\n//           placeholder=\"Enter Your Username\"\n//         />\n//       </div>\n//       <div>\n       \n//         <div className=\"validationError\"> {pwdErrorMessage}\n//         {errorMsg}</div> \n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           value={password}\n//           onChange={handlePasswordChange}\n//           placeholder=\"Enter Your Password\"\n//         />\n//       </div>\n//       <div className=\"validationError\">{apiErrorMsg && <span>{apiErrorMsg}</span>}</div>\n\n//       <div>\n//       <button type=\"submit\">Log in</button>\n\n//       <h4>Don't have an account?</h4>\n//       <Link to=\"/signup\"> <button>Signup </button></Link>\n//       </div>\n\n//     </form>\n//   );\n// }\n\n// export default Login;\n\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}