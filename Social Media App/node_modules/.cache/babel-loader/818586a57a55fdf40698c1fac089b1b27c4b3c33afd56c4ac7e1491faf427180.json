{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [selectedBlogId, setSelectedBlogId] = useState(null);\n//   const [liked, setLiked] = useState(false);\n//   const [likeCount, setLikeCount] = useState(0);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n//         setBlogs(data);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   const handleBlogClick = (id) => {\n//     const blog = blogs.find((blog) => blog.id === id);\n//     setSelectedBlogId(id);\n//     setLiked(blog.liked);\n//     setLikeCount(blog.likes);\n//   };\n\n//   const handleLikeClick = async (blog) => {\n//     const { id, liked } = blog;\n//     const newLiked = !liked;\n//     const newLikes = liked ? blog.likes - 1 : blog.likes + 1;\n\n//     try {\n//       const response = await fetch(`http://localhost:8000/api/blog/likes/update/${id}/`, {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//         },\n//         body: JSON.stringify({ liked: newLiked, likes: newLikes }),\n//       });\n\n//       const data = await response.json();\n//       const newBlogs = blogs.map((blog) => (blog.id === data.id ? data : blog));\n\n//       setBlogs(newBlogs);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Blogs</h2>\n//       <div className=\"blogs\">\n//   {blogs.map((blog) => (\n//     <div key={blog.id}>\n//       <h3>{blog.title}</h3>\n//       <p>{blog.content}</p>\n//       <p>\n//         Author: {blog.author.first_name} {blog.author.last_name}\n//       </p>\n//       <p>Likes: {blog.likes}</p>\n//       <IconButton onClick={() => handleLikeClick(blog)}>\n//         <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n//       </IconButton>\n//     </div>\n//   ))}\n// </div>\n\n//       {selectedBlogId && (\n//         <div className=\"likes\">\n//           <h3>\n//             {blogs.find((blog) => blog.id === selectedBlogId).title} - Likes:{\" \"}\n//             {likeCount}\n//           </h3>\n//           <IconButton\n//             onClick={() => {\n//               setLikeCount(likeCount + (liked ? -1 : 1));\n//               setLiked(!liked);\n//             }}\n//           >\n//             <FavoriteIcon color={liked ? \"error\" : \"primary\"} />\n//           </IconButton>\n//           <IconButton onClick={handleLikeClick}>\n//             <ShareIcon />\n//           </IconButton>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Likes;\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n\n//         // Initialize liked state for each blog post\n//         const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n//         setBlogs(blogsWithLiked);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   return (\n//     <div className=\"blogs\">\n//       {blogs.map((blog) => (\n//         <div key={blog.id}>\n//           <h3>{blog.title}</h3>\n//           <p>{blog.content}</p>\n//           <p>\n//             Author: {blog.author.first_name} {blog.author.last_name}\n//           </p>\n//           <p>Likes: {blog.likes}</p>\n//           <IconButton onClick={() => handleLikeClick(blog.id)}>\n//             <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n//           </IconButton>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Likes;","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","ShareIcon"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [selectedBlogId, setSelectedBlogId] = useState(null);\n//   const [liked, setLiked] = useState(false);\n//   const [likeCount, setLikeCount] = useState(0);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n//         setBlogs(data);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   const handleBlogClick = (id) => {\n//     const blog = blogs.find((blog) => blog.id === id);\n//     setSelectedBlogId(id);\n//     setLiked(blog.liked);\n//     setLikeCount(blog.likes);\n//   };\n\n//   const handleLikeClick = async (blog) => {\n//     const { id, liked } = blog;\n//     const newLiked = !liked;\n//     const newLikes = liked ? blog.likes - 1 : blog.likes + 1;\n  \n//     try {\n//       const response = await fetch(`http://localhost:8000/api/blog/likes/update/${id}/`, {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//         },\n//         body: JSON.stringify({ liked: newLiked, likes: newLikes }),\n//       });\n  \n//       const data = await response.json();\n//       const newBlogs = blogs.map((blog) => (blog.id === data.id ? data : blog));\n  \n//       setBlogs(newBlogs);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n  \n\n//   return (\n//     <div>\n//       <h2>Blogs</h2>\n//       <div className=\"blogs\">\n//   {blogs.map((blog) => (\n//     <div key={blog.id}>\n//       <h3>{blog.title}</h3>\n//       <p>{blog.content}</p>\n//       <p>\n//         Author: {blog.author.first_name} {blog.author.last_name}\n//       </p>\n//       <p>Likes: {blog.likes}</p>\n//       <IconButton onClick={() => handleLikeClick(blog)}>\n//         <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n//       </IconButton>\n//     </div>\n//   ))}\n// </div>\n\n//       {selectedBlogId && (\n//         <div className=\"likes\">\n//           <h3>\n//             {blogs.find((blog) => blog.id === selectedBlogId).title} - Likes:{\" \"}\n//             {likeCount}\n//           </h3>\n//           <IconButton\n//             onClick={() => {\n//               setLikeCount(likeCount + (liked ? -1 : 1));\n//               setLiked(!liked);\n//             }}\n//           >\n//             <FavoriteIcon color={liked ? \"error\" : \"primary\"} />\n//           </IconButton>\n//           <IconButton onClick={handleLikeClick}>\n//             <ShareIcon />\n//           </IconButton>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Likes;\n\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n\n//         // Initialize liked state for each blog post\n//         const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n//         setBlogs(blogsWithLiked);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   return (\n//     <div className=\"blogs\">\n//       {blogs.map((blog) => (\n//         <div key={blog.id}>\n//           <h3>{blog.title}</h3>\n//           <p>{blog.content}</p>\n//           <p>\n//             Author: {blog.author.first_name} {blog.author.last_name}\n//           </p>\n//           <p>Likes: {blog.likes}</p>\n//           <IconButton onClick={() => handleLikeClick(blog.id)}>\n//             <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n//           </IconButton>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Likes;\n"],"mappings":"AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,2BAA2B;;AAGjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}