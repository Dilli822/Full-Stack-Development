{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/signup.js\",\n  _s = $RefreshSig$();\n// // import { useState } from \"react\";\n// // import { Link, useNavigate } from \"react-router-dom\";\n\n// // function Signup() {\n// //     const [username, setUsername] = useState(\"\");\n// //     const [email, setEmail] = useState(\"\");\n// //     const [password, setPassword] = useState(\"\");\n// //     const [confirmPassword, setConfirmPassword] = useState(\"\");\n// //     const [passwordValidation, setPasswordValidation] = useState(\"\");\n// //     const [emailValidation, setEmailValidation] = useState(\"\");\n// //     const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n// //     const [register, setRegister] = useState(false);\n// //     const [message, setMessage] = useState(\"\");\n// //     const [apiError, setApiError] = useState(\"\");\n// //     const [userErrorMessage,setUserErrorMessage] = useState(\"\");\n// //     const [usernameExistsError, setUsernameExistsError] = useState(null);\n// //     const [errorMsg, setErrorMsg] = useState(\"\");\n// //     const [errorMessage, setErrorMessage] = useState('');\n// //     const [emailExist,setEmailExist] = useState('');\n// //     const navigate = useNavigate();\n\n// //     const handleSubmit = (event) => {\n// //         event.preventDefault();\n// //         // added check for empty input fields\n// //         if(!username || !password || !email || !confirmPassword) {setErrorMsg(\"Please Fill the Input!\")}\n\n// //         const fetchdata = fetch(\"http://localhost:8000/api/register/\", {\n// //             method: \"POST\",\n// //             headers: { \"Content-Type\": \"application/json\" },\n// //             body: JSON.stringify({ username, email, password }),\n// //             }).then((response) => {\n// //                 response.json().then((data) => {\n// //                     console.log(data);\n// //                     if (data.username) {\n// //                       console.log(data.username);\n// //                       setErrorMessage(data.username);\n// //                     } else if (data.email) {\n// //                       console.log(data.email);\n// //                       setEmailExist(data.email);\n// //                     }\n// //                   }).catch(error => {\n// //                     console.error(error);\n// //             });\n\n// //                 if (response.status == 201 || response.ok) {\n// //                     setRegister(true);\n// //                     setMessage(\"Successfully signed up! Please wait while you are redirected to the login page...\");\n// //                     setTimeout(() => {\n// //                         navigate(\"/login\");\n// //                     }, 1500);\n// //                 } else if (response.status === 409) {\n// //                   // setUserErrorMessage(response.message);\n// //                   setErrorMessage(\"USERNAME EXISTS\");\n// //                   throw new Error('Username is already taken');\n// //                 } else if(response.status == 400){\n// //                     // setApiError(\"Bad request! An error occurred while signing up. Please try again.\");\n// //                 }\n// //                 else {\n// //                   // console.log(response.JSON()); \n// //                   setApiError(\"Something went wrong!\");\n// //                 }\n// //             })\n\n// //             .catch((error) => {\n// //                 console.error(error);\n// //                 console.log(error.message);\n\n// //             });\n// //     };\n\n// //     const handleUsernameChange = (event) => {\n\n// //         setUsername(event.target.value);\n// //     };\n\n// //     const handleEmailChange = (event) => {\n// //       const { value } = event.target;\n// //       setEmail(value);\n\n// //       // Email validation using regular expression\n// //       const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n// //       (!emailRegex.test(value)) ? setEmailValidation('Please enter a valid email address.') :  setEmailValidation('');\n// //       setEmail(event.target.value);\n// //     };\n\n// //     const handlePasswordChange = (event) => {\n// //         setPassword(event.target.value);\n// //         const passwordRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n// //         event.target.value.length <= 8 && !passwordRegex.test(password) ? setPasswordValidation(\"Password must contain at least 8 characters including 1 uppercase, 1 lowercase, 1 digit and 1 special character\") : setPasswordValidation(\"\");\n// //     };\n\n// //     const handleConfirmPasswordChange = (event) => {\n// //         setConfirmPassword(event.target.value);\n// //         event.target.value !== password ? setConfirmPwdMsg(\"Passwords do not match\") : setConfirmPwdMsg(\"\");\n// //     };\n\n// //     return (\n// //         <div>\n// //             {register ? (\n// //                 <div>\n// //                     <h4>{message}</h4>\n// //                 </div>\n// //             ) : (\n// //                 <form onSubmit={handleSubmit} style={{ }}>\n// //                     <div>                   \n// //                         {/* <label htmlFor=\"username\">Username:</label> */}\n// //                         <div className=\"validationError\">\n// //                         {/* {userErrorMessage} {usernameExistsError && <p>{usernameExistsError}</p>}  */}\n// //                         {/* {errorMessage && <div className=\"validationError\">{errorMessage}</div>}  */}\n// //                         {errorMsg}</div>\n// //                         <input type=\"text\" id=\"username\" value={username} onChange={handleUsernameChange} placeholder=\"Enter Username\"/>\n// //                     </div>\n// //                     <div>\n\n// //                         {/* <label htmlFor=\"email\">Email:</label> */}\n// //                         <div className=\"validationError\">{emailValidation} {errorMsg} {emailExist}  </div>\n// //                         <input type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Enter Email\"/>\n// //                     </div>\n// //                     <div>\n// //                         {/* <label htmlFor=\"password\">Password:</label> */}\n// //                         <div className=\"validationError\">{passwordValidation && <span>{passwordValidation}</span>} {errorMsg} </div>\n// //                         <input type=\"password\" id=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Enter Password\"/>\n// //                     </div>\n// //                     <div>\n// //                         {/* <label htmlFor=\"password\">Confirm Password:</label> */}\n// //                         <div className=\"validationError\">{confirmPwdMsg && <span>{confirmPwdMsg}</span>} {errorMsg} </div>\n// //                         <input type=\"password\" id=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} placeholder=\"Enter Confirm Password\"/>\n// //                     </div>\n// //                     <br></br>\n\n// //                     <div className=\"validationError\">{apiError && <h4>{apiError}</h4>}</div>\n\n// //                     <div>\n// //                         <button type=\"submit\">Signup</button>\n// //                         <Link to=\"/login\"> <a>Already Have an Account? Login </a></Link>\n// //                     </div>\n// //                 </form>\n// //             )}\n\n// //         </div>\n// //     );\n// // }\n\n// // export default Signup;\n\n// import * as React from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// // import Link from '@mui/material/Link';\n// import Grid from '@mui/material/Grid';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import Login from './login';\n// import { Link, Navigate } from 'react-router-dom';\n\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Copyright Â© '}\n//       <Link color=\"inherit\" href=\"https://mui.com/\">\n//         Your Website\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\n// const theme = createTheme();\n\n// export default function SignUp() {\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const data = new FormData(event.currentTarget);\n//     console.log({\n//       email: data.get('email'),\n//       password: data.get('password'),\n//     });\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 8,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign up\n//           </Typography>\n//           <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12} sm={12}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"firstName\"\n//                   required\n//                   fullWidth\n//                   id=\"firstName\"\n//                   label=\"Username\"\n//                   autoFocus\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   id=\"email\"\n//                   label=\"Email Address\"\n//                   name=\"email\"\n//                   autoComplete=\"email\"\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"password\"\n//                   label=\"Password\"\n//                   type=\"password\"\n//                   id=\"password\"\n//                   autoComplete=\"new-password\"\n//                 />\n//               </Grid>\n\n//             </Grid>\n//             <Button\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2 }}\n//             >\n//               Sign Up\n//             </Button>\n//             <Grid container justifyContent=\"flex-end\">\n//               <Grid item>\n//                 <Link to=\"/login\" variant=\"body2\">\n//                   Already have an account? Sign in\n//                 </Link>\n//               </Grid>\n//             </Grid>\n//           </Box>\n//         </Box>\n//         <Copyright sx={{ mt: 5 }} />\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Form validation\n    if (username.length < 5) {\n      setErrorMessage(\"Username must be at least 5 characters long.\");\n      return;\n    }\n    if (!password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)) {\n      setErrorMessage(\"Password must contain at least 8 characters, including 1 uppercase, 1 lowercase, 1 special character, and 1 number.\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Passwords do not match.\");\n      return;\n    }\n    // Send API request\n    fetch(\"http://localhost:8000/api/register/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      // Handle successful registration\n    }).catch(error => {\n      console.error(error);\n      // Handle API error\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirm-password\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirm-password\",\n        value: confirmPassword,\n        onChange: event => setConfirmPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"T0qbFLSJpd+H/7SzuyUa/QejElM=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","length","match","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","statusText","json","data","console","log","catch","error","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/signup.js"],"sourcesContent":["// // import { useState } from \"react\";\n// // import { Link, useNavigate } from \"react-router-dom\";\n\n// // function Signup() {\n// //     const [username, setUsername] = useState(\"\");\n// //     const [email, setEmail] = useState(\"\");\n// //     const [password, setPassword] = useState(\"\");\n// //     const [confirmPassword, setConfirmPassword] = useState(\"\");\n// //     const [passwordValidation, setPasswordValidation] = useState(\"\");\n// //     const [emailValidation, setEmailValidation] = useState(\"\");\n// //     const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n// //     const [register, setRegister] = useState(false);\n// //     const [message, setMessage] = useState(\"\");\n// //     const [apiError, setApiError] = useState(\"\");\n// //     const [userErrorMessage,setUserErrorMessage] = useState(\"\");\n// //     const [usernameExistsError, setUsernameExistsError] = useState(null);\n// //     const [errorMsg, setErrorMsg] = useState(\"\");\n// //     const [errorMessage, setErrorMessage] = useState('');\n// //     const [emailExist,setEmailExist] = useState('');\n// //     const navigate = useNavigate();\n\n// //     const handleSubmit = (event) => {\n// //         event.preventDefault();\n// //         // added check for empty input fields\n// //         if(!username || !password || !email || !confirmPassword) {setErrorMsg(\"Please Fill the Input!\")}\n          \n\n// //         const fetchdata = fetch(\"http://localhost:8000/api/register/\", {\n// //             method: \"POST\",\n// //             headers: { \"Content-Type\": \"application/json\" },\n// //             body: JSON.stringify({ username, email, password }),\n// //             }).then((response) => {\n// //                 response.json().then((data) => {\n// //                     console.log(data);\n// //                     if (data.username) {\n// //                       console.log(data.username);\n// //                       setErrorMessage(data.username);\n// //                     } else if (data.email) {\n// //                       console.log(data.email);\n// //                       setEmailExist(data.email);\n// //                     }\n// //                   }).catch(error => {\n// //                     console.error(error);\n// //             });\n\n// //                 if (response.status == 201 || response.ok) {\n// //                     setRegister(true);\n// //                     setMessage(\"Successfully signed up! Please wait while you are redirected to the login page...\");\n// //                     setTimeout(() => {\n// //                         navigate(\"/login\");\n// //                     }, 1500);\n// //                 } else if (response.status === 409) {\n// //                   // setUserErrorMessage(response.message);\n// //                   setErrorMessage(\"USERNAME EXISTS\");\n// //                   throw new Error('Username is already taken');\n// //                 } else if(response.status == 400){\n// //                     // setApiError(\"Bad request! An error occurred while signing up. Please try again.\");\n// //                 }\n// //                 else {\n// //                   // console.log(response.JSON()); \n// //                   setApiError(\"Something went wrong!\");\n// //                 }\n// //             })\n     \n// //             .catch((error) => {\n// //                 console.error(error);\n// //                 console.log(error.message);\n          \n                \n// //             });\n// //     };\n\n// //     const handleUsernameChange = (event) => {\n\n// //         setUsername(event.target.value);\n// //     };\n\n// //     const handleEmailChange = (event) => {\n// //       const { value } = event.target;\n// //       setEmail(value);\n\n// //       // Email validation using regular expression\n// //       const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n// //       (!emailRegex.test(value)) ? setEmailValidation('Please enter a valid email address.') :  setEmailValidation('');\n// //       setEmail(event.target.value);\n// //     };\n\n// //     const handlePasswordChange = (event) => {\n// //         setPassword(event.target.value);\n// //         const passwordRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n// //         event.target.value.length <= 8 && !passwordRegex.test(password) ? setPasswordValidation(\"Password must contain at least 8 characters including 1 uppercase, 1 lowercase, 1 digit and 1 special character\") : setPasswordValidation(\"\");\n// //     };\n\n// //     const handleConfirmPasswordChange = (event) => {\n// //         setConfirmPassword(event.target.value);\n// //         event.target.value !== password ? setConfirmPwdMsg(\"Passwords do not match\") : setConfirmPwdMsg(\"\");\n// //     };\n\n// //     return (\n// //         <div>\n// //             {register ? (\n// //                 <div>\n// //                     <h4>{message}</h4>\n// //                 </div>\n// //             ) : (\n// //                 <form onSubmit={handleSubmit} style={{ }}>\n// //                     <div>                   \n// //                         {/* <label htmlFor=\"username\">Username:</label> */}\n// //                         <div className=\"validationError\">\n// //                         {/* {userErrorMessage} {usernameExistsError && <p>{usernameExistsError}</p>}  */}\n// //                         {/* {errorMessage && <div className=\"validationError\">{errorMessage}</div>}  */}\n// //                         {errorMsg}</div>\n// //                         <input type=\"text\" id=\"username\" value={username} onChange={handleUsernameChange} placeholder=\"Enter Username\"/>\n// //                     </div>\n// //                     <div>\n                    \n// //                         {/* <label htmlFor=\"email\">Email:</label> */}\n// //                         <div className=\"validationError\">{emailValidation} {errorMsg} {emailExist}  </div>\n// //                         <input type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Enter Email\"/>\n// //                     </div>\n// //                     <div>\n// //                         {/* <label htmlFor=\"password\">Password:</label> */}\n// //                         <div className=\"validationError\">{passwordValidation && <span>{passwordValidation}</span>} {errorMsg} </div>\n// //                         <input type=\"password\" id=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Enter Password\"/>\n// //                     </div>\n// //                     <div>\n// //                         {/* <label htmlFor=\"password\">Confirm Password:</label> */}\n// //                         <div className=\"validationError\">{confirmPwdMsg && <span>{confirmPwdMsg}</span>} {errorMsg} </div>\n// //                         <input type=\"password\" id=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} placeholder=\"Enter Confirm Password\"/>\n// //                     </div>\n// //                     <br></br>\n\n// //                     <div className=\"validationError\">{apiError && <h4>{apiError}</h4>}</div>\n                   \n// //                     <div>\n// //                         <button type=\"submit\">Signup</button>\n// //                         <Link to=\"/login\"> <a>Already Have an Account? Login </a></Link>\n// //                     </div>\n// //                 </form>\n// //             )}\n            \n// //         </div>\n// //     );\n// // }\n\n// // export default Signup;\n\n// import * as React from 'react';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// // import Link from '@mui/material/Link';\n// import Grid from '@mui/material/Grid';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import Login from './login';\n// import { Link, Navigate } from 'react-router-dom';\n\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Copyright Â© '}\n//       <Link color=\"inherit\" href=\"https://mui.com/\">\n//         Your Website\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\n// const theme = createTheme();\n\n// export default function SignUp() {\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const data = new FormData(event.currentTarget);\n//     console.log({\n//       email: data.get('email'),\n//       password: data.get('password'),\n//     });\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 8,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign up\n//           </Typography>\n//           <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12} sm={12}>\n//                 <TextField\n//                   autoComplete=\"given-name\"\n//                   name=\"firstName\"\n//                   required\n//                   fullWidth\n//                   id=\"firstName\"\n//                   label=\"Username\"\n//                   autoFocus\n//                 />\n//               </Grid>\n\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   id=\"email\"\n//                   label=\"Email Address\"\n//                   name=\"email\"\n//                   autoComplete=\"email\"\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"password\"\n//                   label=\"Password\"\n//                   type=\"password\"\n//                   id=\"password\"\n//                   autoComplete=\"new-password\"\n//                 />\n//               </Grid>\n\n//             </Grid>\n//             <Button\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2 }}\n//             >\n//               Sign Up\n//             </Button>\n//             <Grid container justifyContent=\"flex-end\">\n//               <Grid item>\n//                 <Link to=\"/login\" variant=\"body2\">\n//                   Already have an account? Sign in\n//                 </Link>\n//               </Grid>\n//             </Grid>\n//           </Box>\n//         </Box>\n//         <Copyright sx={{ mt: 5 }} />\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }\n\nimport React, { useState } from \"react\";\n\nfunction Signup() {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Form validation\n    if (username.length < 5) {\n      setErrorMessage(\"Username must be at least 5 characters long.\");\n      return;\n    }\n    if (!password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)) {\n      setErrorMessage(\"Password must contain at least 8 characters, including 1 uppercase, 1 lowercase, 1 special character, and 1 number.\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage(\"Passwords do not match.\");\n      return;\n    }\n    // Send API request\n    fetch(\"http://localhost:8000/api/register/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, email, password }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        // Handle successful registration\n      })\n      .catch((error) => {\n        console.error(error);\n        // Handle API error\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"username\">Username:</label>\n        <input type=\"text\" id=\"username\" value={username} onChange={(event) => setUsername(event.target.value)} />\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n      </div>\n      <div>\n        <label htmlFor=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n      </div>\n      <div>\n        <label htmlFor=\"confirm-password\">Confirm Password:</label>\n        <input type=\"password\" id=\"confirm-password\" value={confirmPassword} onChange={(event) => setConfirmPassword(event.target.value)} />\n      </div>\n      <div>\n        <button type=\"submit\">Register</button>\n      </div>\n      {errorMessage && <div>{errorMessage}</div>}\n    </form>\n  );\n}\n\nexport default Signup;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}