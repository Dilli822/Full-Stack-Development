{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/blog-comment.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\n\n// export default function Comments({ authToken, blogId, commentId }) {\n//   const [commentData, setCommentData] = useState(null);\n//   const [newComment, setNewComment] = useState('');\n\n//   useEffect(() => {\n//     fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n//       method: 'GET',\n//       headers: {\n//         Authorization: `Token ${authToken}`,\n//       },\n//     })\n//       .then((response) => response.json())\n//       .then((data) => setCommentData(data))\n//       .catch((error) => console.error(error));\n//   }, [authToken, blogId, commentId]);\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n//       method: 'PUT',\n//       headers: {\n//         Authorization: `Token ${authToken}`,\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ comment: newComment }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => setCommentData(data))\n//       .catch((error) => console.error(error));\n//   };\n\n//   if (!commentData) {\n//     return <p>Loading...</p>;\n//   }\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <textarea\n//         value={newComment}\n//         onChange={(event) => setNewComment(event.target.value)}\n//       />\n//       <button type=\"submit\">Save</button>\n//     </form>\n//   );\n// }\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentDetail(_ref) {\n  _s();\n  let {\n    authToken,\n    blogId,\n    commentId\n  } = _ref;\n  const [commentData, setCommentData] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/blog/1/comments/1/`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Token ${authToken}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => setCommentData(data)).catch(error => console.error(error));\n  }, [authToken, blogId, commentId]);\n  if (!commentData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentData.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [comment.author, \": \", comment.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentDetail, \"lo4hnXQ1F5aT8tkRRW0yZ8Hxqr4=\");\n_c = CommentDetail;\nvar _c;\n$RefreshReg$(_c, \"CommentDetail\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","CommentDetail","_ref","_s","authToken","blogId","commentId","commentData","setCommentData","fetch","method","headers","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","author","id","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/blog-comment.js"],"sourcesContent":["// import { useState, useEffect } from 'react';\n\n// export default function Comments({ authToken, blogId, commentId }) {\n//   const [commentData, setCommentData] = useState(null);\n//   const [newComment, setNewComment] = useState('');\n\n//   useEffect(() => {\n//     fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n//       method: 'GET',\n//       headers: {\n//         Authorization: `Token ${authToken}`,\n//       },\n//     })\n//       .then((response) => response.json())\n//       .then((data) => setCommentData(data))\n//       .catch((error) => console.error(error));\n//   }, [authToken, blogId, commentId]);\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n//       method: 'PUT',\n//       headers: {\n//         Authorization: `Token ${authToken}`,\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ comment: newComment }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => setCommentData(data))\n//       .catch((error) => console.error(error));\n//   };\n\n//   if (!commentData) {\n//     return <p>Loading...</p>;\n//   }\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <textarea\n//         value={newComment}\n//         onChange={(event) => setNewComment(event.target.value)}\n//       />\n//       <button type=\"submit\">Save</button>\n//     </form>\n//   );\n// }\n\n\nimport { useState, useEffect } from 'react';\n\nexport default function CommentDetail({ authToken, blogId, commentId }) {\n  const [commentData, setCommentData] = useState(null);\n\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/blog/1/comments/1/`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Token ${authToken}`,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => setCommentData(data))\n      .catch(error => console.error(error));\n  }, [authToken, blogId, commentId]);\n\n  if (!commentData) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      {commentData.map(comment => (\n        <div key={comment.id}>\n          <p>{comment.author}: {comment.comment}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,SAAS;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EACpE,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAE,8CAA6C,EAAE;MACpDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAG,SAAQP,SAAU,EAAC;QACrC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,cAAc,CAACO,IAAI,CAAC,CAAC,CAClCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACb,SAAS,EAAEC,MAAM,EAAEC,SAAS,CAAC,CAAC;EAElC,IAAI,CAACC,WAAW,EAAE;IAChB,oBAAOP,OAAA;MAAAmB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAC1B;EAEA,oBACEvB,OAAA;IAAAmB,QAAA,EACGZ,WAAW,CAACiB,GAAG,CAACC,OAAO,iBACtBzB,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,GAAIM,OAAO,CAACC,MAAM,EAAC,IAAE,EAACD,OAAO,CAACA,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK,GADlCE,OAAO,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACpB,EAAA,CA7BuBF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}