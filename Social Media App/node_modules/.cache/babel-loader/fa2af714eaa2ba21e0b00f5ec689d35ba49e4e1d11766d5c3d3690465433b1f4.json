{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/drf-blog-api-master/django/frontend/src/dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react'\n\n// function BlogList() {\n//   const [blogs, setBlogs] = useState([])\n//   const [loading, setLoading] = useState(true)\n\n//   useEffect(() => {\n//     fetch('http://localhost:8000/api/blog/', {\n//       headers: {\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       }\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       setBlogs(data)\n//       setLoading(false)\n//     })\n//     .catch(error => console.error(error))\n//   }, [])\n\n//   const handleCreate = (newBlog) => {\n//     fetch('http://localhost:8000/api/blog/', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       },\n//       body: JSON.stringify(newBlog)\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       setBlogs([...blogs, data])\n//     })\n//     .catch(error => console.error(error))\n//   }\n\n//   const handleUpdate = (updatedBlog) => {\n//     fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       },\n//       body: JSON.stringify(updatedBlog)\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       const index = blogs.findIndex(blog => blog.id === data.id)\n//       const newBlogs = [...blogs]\n//       newBlogs[index] = data\n//       setBlogs(newBlogs)\n//     })\n//     .catch(error => console.error(error))\n//   }\n\n//   const handleDelete = (id) => {\n//     if (window.confirm('Are you sure you want to delete this post?')) {\n//       fetch(`http://localhost:8000/api/blog/${id}/`, {\n//         method: 'DELETE',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//         }\n//       })\n//       .then(response => {\n//         if (response.ok) {\n//           setBlogs(blogs.filter(blog => blog.id !== id))\n//         } else {\n//           throw new Error('Delete failed')\n//         }\n//       })\n//       .catch(error => {\n//         console.error(error)\n//       })\n//     }\n//   }\n\n//   if (loading) {\n//     return <p>Loading...</p>\n//   }\n\n//   return (\n//     <div>\n//       <h1>Blog List</h1>\n//       <ul>\n//         {blogs.map(blog => (\n//           <li key={blog.id}>\n//             <h2>{blog.title}</h2>\n//             <p>{blog.content}</p>\n//             <p>Author: {blog.authorName}</p>\n//             <button onClick={() => handleDelete(blog.id)}>Delete</button>\n//             <button onClick={() => handleUpdate({ id: blog.id, title: 'New Title', content: 'New Content', authorName: blog.authorName })}>Update</button>\n//           </li>\n//         ))}\n//       </ul>\n//       <button onClick={() => handleCreate({ title: 'New Blog', content: 'New Content', authorName: 'Anonymous' })}>Create</button>\n//     </div>\n//   )\n// }\n\n// export default BlogList\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newBlogTitle, setNewBlogTitle] = useState('');\n  const [newBlogContent, setNewBlogContent] = useState('');\n  const [newBlogAuthorName, setNewBlogAuthorName] = useState('');\n  const [selectedBlogId, setSelectedBlogId] = useState('');\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState('');\n  const [updatedBlogContent, setUpdatedBlogContent] = useState('');\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:8000/api/blog/', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    }).then(response => response.json()).then(data => {\n      setBlogs(data);\n      setLoading(false);\n    }).catch(error => console.error(error));\n  }, []);\n  const handleCreate = () => {\n    const newBlog = {\n      title: newBlogTitle,\n      content: newBlogContent,\n      authorName: newBlogAuthorName\n    };\n    fetch('http://localhost:8000/api/blog/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: JSON.stringify(newBlog)\n    }).then(response => response.json()).then(data => {\n      setBlogs([...blogs, data]);\n      setNewBlogTitle('');\n      setNewBlogContent('');\n      setNewBlogAuthorName('');\n    }).catch(error => console.error(error));\n  };\n  const handleUpdate = () => {\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle,\n      content: updatedBlogContent,\n      authorName: updatedBlogAuthorName\n    };\n    fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: JSON.stringify(updatedBlog)\n    }).then(response => response.json()).then(data => {\n      const index = blogs.findIndex(blog => blog.id === data.id);\n      const newBlogs = [...blogs];\n      newBlogs[index] = data;\n      setBlogs(newBlogs);\n      setSelectedBlogId('');\n      setUpdatedBlogTitle('');\n      setUpdatedBlogContent('');\n      setUpdatedBlogAuthorName('');\n    }).catch(error => console.error(error));\n  };\n  const handleDelete = id => {\n    if (window.confirm('Are you sure you want to delete this post?')) {\n      fetch(`http://localhost:8000/api/blog/${id}/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      }).then(response => {\n        if (response.ok) {\n          setBlogs(blogs.filter(blog => blog.id !== id));\n        } else {\n          throw new Error('Delete failed');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", blog.authorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedBlogId(blog.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(blog.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 5\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }, this), selectedBlogId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: updatedBlogTitle,\n          onChange: event => setUpdatedBlogTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: updatedBlogContent,\n          onChange: event => setUpdatedBlogContent(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Author Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: updatedBlogAuthorName,\n          onChange: event => setUpdatedBlogAuthorName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedBlogId(''),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newBlogTitle,\n          onChange: event => setNewBlogTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newBlogContent,\n          onChange: event => setNewBlogContent(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Author Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newBlogAuthorName,\n          onChange: event => setNewBlogAuthorName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        children: \"Create Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"rd/ydH3OWARFXSvchNR9HtDt02U=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","blogs","setBlogs","loading","setLoading","newBlogTitle","setNewBlogTitle","newBlogContent","setNewBlogContent","newBlogAuthorName","setNewBlogAuthorName","selectedBlogId","setSelectedBlogId","updatedBlogTitle","setUpdatedBlogTitle","updatedBlogContent","setUpdatedBlogContent","updatedBlogAuthorName","setUpdatedBlogAuthorName","fetch","headers","localStorage","getItem","then","response","json","data","catch","error","console","handleCreate","newBlog","title","content","authorName","method","body","JSON","stringify","handleUpdate","updatedBlog","id","index","findIndex","blog","newBlogs","handleDelete","window","confirm","ok","filter","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","value","onChange","event","target","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/drf-blog-api-master/django/frontend/src/dashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react'\n\n// function BlogList() {\n//   const [blogs, setBlogs] = useState([])\n//   const [loading, setLoading] = useState(true)\n\n//   useEffect(() => {\n//     fetch('http://localhost:8000/api/blog/', {\n//       headers: {\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       }\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       setBlogs(data)\n//       setLoading(false)\n//     })\n//     .catch(error => console.error(error))\n//   }, [])\n\n//   const handleCreate = (newBlog) => {\n//     fetch('http://localhost:8000/api/blog/', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       },\n//       body: JSON.stringify(newBlog)\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       setBlogs([...blogs, data])\n//     })\n//     .catch(error => console.error(error))\n//   }\n\n//   const handleUpdate = (updatedBlog) => {\n//     fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       },\n//       body: JSON.stringify(updatedBlog)\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       const index = blogs.findIndex(blog => blog.id === data.id)\n//       const newBlogs = [...blogs]\n//       newBlogs[index] = data\n//       setBlogs(newBlogs)\n//     })\n//     .catch(error => console.error(error))\n//   }\n\n//   const handleDelete = (id) => {\n//     if (window.confirm('Are you sure you want to delete this post?')) {\n//       fetch(`http://localhost:8000/api/blog/${id}/`, {\n//         method: 'DELETE',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//         }\n//       })\n//       .then(response => {\n//         if (response.ok) {\n//           setBlogs(blogs.filter(blog => blog.id !== id))\n//         } else {\n//           throw new Error('Delete failed')\n//         }\n//       })\n//       .catch(error => {\n//         console.error(error)\n//       })\n//     }\n//   }\n\n//   if (loading) {\n//     return <p>Loading...</p>\n//   }\n\n//   return (\n//     <div>\n//       <h1>Blog List</h1>\n//       <ul>\n//         {blogs.map(blog => (\n//           <li key={blog.id}>\n//             <h2>{blog.title}</h2>\n//             <p>{blog.content}</p>\n//             <p>Author: {blog.authorName}</p>\n//             <button onClick={() => handleDelete(blog.id)}>Delete</button>\n//             <button onClick={() => handleUpdate({ id: blog.id, title: 'New Title', content: 'New Content', authorName: blog.authorName })}>Update</button>\n//           </li>\n//         ))}\n//       </ul>\n//       <button onClick={() => handleCreate({ title: 'New Blog', content: 'New Content', authorName: 'Anonymous' })}>Create</button>\n//     </div>\n//   )\n// }\n\n// export default BlogList\nimport React, { useState, useEffect } from 'react'\n\nfunction Dashboard() {\n  const [blogs, setBlogs] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [newBlogTitle, setNewBlogTitle] = useState('')\n  const [newBlogContent, setNewBlogContent] = useState('')\n  const [newBlogAuthorName, setNewBlogAuthorName] = useState('')\n  const [selectedBlogId, setSelectedBlogId] = useState('')\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState('')\n  const [updatedBlogContent, setUpdatedBlogContent] = useState('')\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState('')\n\n  useEffect(() => {\n    fetch('http://localhost:8000/api/blog/', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    })\n    .then(response => response.json())\n    .then(data => {\n      setBlogs(data)\n      setLoading(false)\n    })\n    .catch(error => console.error(error))\n  }, [])\n\n  const handleCreate = () => {\n    const newBlog = {\n      title: newBlogTitle,\n      content: newBlogContent,\n      authorName: newBlogAuthorName\n    }\n\n    fetch('http://localhost:8000/api/blog/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: JSON.stringify(newBlog)\n    })\n    .then(response => response.json())\n    .then(data => {\n      setBlogs([...blogs, data])\n      setNewBlogTitle('')\n      setNewBlogContent('')\n      setNewBlogAuthorName('')\n    })\n    .catch(error => console.error(error))\n  }\n\n  const handleUpdate = () => {\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle,\n      content: updatedBlogContent,\n      authorName: updatedBlogAuthorName\n    }\n\n    fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: JSON.stringify(updatedBlog)\n    })\n    .then(response => response.json())\n    .then(data => {\n      const index = blogs.findIndex(blog => blog.id === data.id)\n      const newBlogs = [...blogs]\n      newBlogs[index] = data\n      setBlogs(newBlogs)\n      setSelectedBlogId('')\n      setUpdatedBlogTitle('')\n      setUpdatedBlogContent('')\n      setUpdatedBlogAuthorName('')\n    })\n    .catch(error => console.error(error))\n  }\n\n  const handleDelete = (id) => {\n    if (window.confirm('Are you sure you want to delete this post?')) {\n      fetch(`http://localhost:8000/api/blog/${id}/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      })\n      .then(response => {\n        if (response.ok) {\n          setBlogs(blogs.filter(blog => blog.id !== id))\n        } else {\n          throw new Error('Delete failed')\n        }\n      })\n      .catch(error => {\n        console.error(error)\n      })\n    }\n  }\n\n  if (loading) {\n    return <p>Loading...</p>\n  }\n  return (\n    <div>\n    <h1>Blog List</h1>\n    <ul>\n    {blogs.map(blog => (\n    <li key={blog.id}>\n    <h2>{blog.title}</h2>\n    <p>{blog.content}</p>\n    <p>Author: {blog.authorName}</p>\n    <button onClick={() => setSelectedBlogId(blog.id)}>Edit</button>\n    <button onClick={() => handleDelete(blog.id)}>Delete</button>\n    </li>\n    ))}\n    </ul>\n    {selectedBlogId && (\n    <div>\n    <h2>Edit Blog</h2>\n    <label>\n    Title:\n    <input\n    type=\"text\"\n    value={updatedBlogTitle}\n    onChange={(event) => setUpdatedBlogTitle(event.target.value)}\n    />\n    </label>\n    <br />\n    <label>\n    Content:\n    <textarea\n    value={updatedBlogContent}\n    onChange={(event) => setUpdatedBlogContent(event.target.value)}\n    />\n    </label>\n    <br />\n    <label>\n    Author Name:\n    <input\n    type=\"text\"\n    value={updatedBlogAuthorName}\n    onChange={(event) => setUpdatedBlogAuthorName(event.target.value)}\n    />\n    </label>\n    <br />\n    <button onClick={handleUpdate}>Save Changes</button>\n    <button onClick={() => setSelectedBlogId('')}>Cancel</button>\n    </div>\n    )}\n    <div>\n    <h2>Create New Blog</h2>\n    <label>\n    Title:\n    <input\n    type=\"text\"\n    value={newBlogTitle}\n    onChange={(event) => setNewBlogTitle(event.target.value)}\n    />\n    </label>\n    <br />\n    <label>\n    Content:\n    <textarea\n    value={newBlogContent}\n    onChange={(event) => setNewBlogContent(event.target.value)}\n    />\n    </label>\n    <br />\n    <label>\n    Author Name:\n    <input\n    type=\"text\"\n    value={newBlogAuthorName}\n    onChange={(event) => setNewBlogAuthorName(event.target.value)}\n    />\n    </label>\n    <br />\n    <button onClick={handleCreate}>Create Blog</button>\n    </div>\n    </div>\n    )\n    }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}