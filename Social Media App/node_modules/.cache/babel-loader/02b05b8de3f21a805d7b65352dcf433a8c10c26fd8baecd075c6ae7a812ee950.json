{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/resetPassword/reset_password.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TextField, Button, Container, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Send POST request to Django server to initiate password reset\n    fetch(\"/api/password_reset/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email\n      })\n    }).then(response => {\n      if (response.ok) {\n        setSuccessMessage(\"An email with instructions for resetting your password has been sent to your email address.\");\n        setErrorMessage(\"\");\n        setEmail(\"\");\n      } else {\n        setErrorMessage(\"Invalid email address.\");\n        setSuccessMessage(\"\");\n      }\n    }).catch(error => {\n      console.error(error);\n      setErrorMessage(\"An error occurred. Please try again later.\");\n      setSuccessMessage(\"\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        variant: \"outlined\",\n        fullWidth: true,\n        required: true,\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"Q3MV56XTHTuWXgXZAtwVw93JIwU=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","TextField","Button","Container","Typography","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","catch","error","console","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","variant","fullWidth","required","type","value","onChange","target","color","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/resetPassword/reset_password.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, Container, Typography } from \"@material-ui/core\";\n\nconst ResetPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Send POST request to Django server to initiate password reset\n    fetch(\"/api/password_reset/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: email }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          setSuccessMessage(\n            \"An email with instructions for resetting your password has been sent to your email address.\"\n          );\n          setErrorMessage(\"\");\n          setEmail(\"\");\n        } else {\n          setErrorMessage(\"Invalid email address.\");\n          setSuccessMessage(\"\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setErrorMessage(\"An error occurred. Please try again later.\");\n        setSuccessMessage(\"\");\n      });\n  };\n\n  return (\n    <Container maxWidth=\"sm\" >\n      <br></br>\n    <form onSubmit={handleSubmit}>\n      <Typography>Reset Password</Typography>\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        fullWidth\n        required\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Reset Password\n      </Button>\n      {successMessage && <p>{successMessage}</p>}\n      {errorMessage && <p>{errorMessage}</p>}\n    </form>\n    </Container>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}