{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [authorId, setAuthorId] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  const [likedBy, setLikedBy] = useState(0);\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map(blog => ({\n          ...blog,\n          liked: false\n        }));\n        setBlogs(blogsWithLiked);\n\n        // Extract likes and author IDs into new arrays\n        const likes = blogsWithLiked.map(blog => blog.likes);\n        const authors = blogsWithLiked.map(blog => blog.author.id);\n        const likedby = blogsWithLiked.map(blog => blog.liked_by);\n        setCountLikes(likes);\n        setAuthorId(authors);\n        setLikedBy(likedby);\n        console.log(\"Likedby\", likedBy);\n\n        // Set likedBy to an empty array for now\n        setLikedBy([]);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n  console.log(\"llikedby \", likedBy);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLikeClick,\n      children: [/*#__PURE__*/_jsxDEV(FavoriteIcon, {\n        color: liked ? \"error\" : \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"Zo+ax6X3PIdgH64rTnizLSnE5yU=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","jsxDEV","_jsxDEV","Likes","_s","liked","setLiked","likes","setLikes","authorId","setAuthorId","countLikes","setCountLikes","likedBy","setLikedBy","blogs","setBlogs","error","setError","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","blogsWithLiked","map","blog","authors","author","id","likedby","liked_by","console","log","children","onClick","handleLikeClick","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\nexport default function Likes() {\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  \n  const [authorId,setAuthorId] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  const [likedBy,setLikedBy] = useState(0);\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n\n \n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n  \n        const data = await response.json();\n  \n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n  \n        setBlogs(blogsWithLiked);\n  \n        // Extract likes and author IDs into new arrays\n        const likes = blogsWithLiked.map((blog) => blog.likes);\n        const authors = blogsWithLiked.map((blog) => blog.author.id);\n        const likedby = blogsWithLiked.map((blog) => blog.liked_by);\n  \n        setCountLikes(likes);\n        setAuthorId(authors);\n        setLikedBy(likedby);\n        console.log(\"Likedby\", likedBy);\n  \n        // Set likedBy to an empty array for now\n        setLikedBy([]);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n  \n    fetchBlogs();\n  }, []);\n  \n\n  console.log(\"llikedby \", likedBy);\n\n\n  return (\n    <div>\n      <IconButton onClick={handleLikeClick}>\n        <FavoriteIcon color={liked ? \"error\" : \"inherit\"} />\n        <span>{likes}</span>\n      </IconButton>\n    </div>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}