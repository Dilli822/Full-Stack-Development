{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes(_ref) {\n  _s();\n  let {\n    blogId,\n    likes,\n    likedBy,\n    authorId\n  } = _ref;\n  const [isLiked, setIsLiked] = useState(likedBy.includes(authorId));\n  const [numLikes, setNumLikes] = useState(likes);\n  const [likedByList, setLikedByList] = useState(likedBy);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    setIsLiked(likedBy.includes(authorId));\n  }, [likedBy, authorId]);\n  const handleLikeClick = async () => {\n    try {\n      setNumLikes(prevNumLikes => {\n        let newLikes = prevNumLikes;\n        let newLikedByState = likedByList;\n        let newLikedState = !isLiked;\n        if (newLikedState) {\n          newLikes += 1;\n          newLikedByState = [...likedByList, authorId];\n        } else {\n          newLikes -= 1;\n          newLikedByState = likedByList.filter(id => id !== authorId);\n        }\n\n        // Check if unliking a post that was already liked by the user\n        if (!newLikedState && likedByList.includes(authorId)) {\n          newLikes -= 1;\n        }\n        setIsLiked(newLikedState);\n        setLikedByList(newLikedByState);\n\n        // Call API to update like state\n        fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            liked: newLikedState,\n            likes: newLikes,\n            liked_by: newLikedByState\n          })\n        });\n        return newLikes;\n      });\n    } catch (error) {\n      console.error(error);\n      setError(\"Failed to update like state.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"Azi/aAtXD1KSebx4tVNJX72m9DE=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","ShareIcon","jsxDEV","_jsxDEV","Likes","_ref","_s","blogId","likes","likedBy","authorId","isLiked","setIsLiked","includes","numLikes","setNumLikes","likedByList","setLikedByList","error","setError","handleLikeClick","prevNumLikes","newLikes","newLikedByState","newLikedState","filter","id","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","liked","liked_by","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\nexport default function Likes({ blogId, likes, likedBy, authorId }) {\n  const [isLiked, setIsLiked] = useState(likedBy.includes(authorId));\n  const [numLikes, setNumLikes] = useState(likes);\n  const [likedByList, setLikedByList] = useState(likedBy);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    setIsLiked(likedBy.includes(authorId));\n  }, [likedBy, authorId]);\n\n  const handleLikeClick = async () => {\n    try {\n      setNumLikes((prevNumLikes) => {\n        let newLikes = prevNumLikes;\n        let newLikedByState = likedByList;\n        let newLikedState = !isLiked;\n\n        if (newLikedState) {\n          newLikes += 1;\n          newLikedByState = [...likedByList, authorId];\n        } else {\n          newLikes -= 1;\n          newLikedByState = likedByList.filter((id) => id !== authorId);\n        }\n\n        // Check if unliking a post that was already liked by the user\n        if (!newLikedState && likedByList.includes(authorId)) {\n          newLikes -= 1;\n        }\n\n        setIsLiked(newLikedState);\n        setLikedByList(newLikedByState);\n\n        // Call API to update like state\n        fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            liked: newLikedState,\n            likes: newLikes,\n            liked_by: newLikedByState,\n          }),\n        });\n\n        return newLikes;\n      });\n    } catch (error) {\n      console.error(error);\n      setError(\"Failed to update like state.\");\n    }\n  };\n\n  return (\n    <div>\n      {/* <IconButton onClick={handleLikeClick}>\n        {isLiked ? <FavoriteIcon color=\"error\" /> : <FavoriteIcon />}\n      </IconButton>\n      <span>{numLikes}</span>\n      {error && <p>{error}</p>}\n\n        \n      <h2>Blogs</h2>\n   \n         */}\n      \n    </div>\n    )}\n\n\n"],"mappings":";;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAuC;EAAAC,EAAA;EAAA,IAAtC;IAAEC,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAAL,IAAA;EAChE,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAACY,OAAO,CAACI,QAAQ,CAACH,QAAQ,CAAC,CAAC;EAClE,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAACW,KAAK,CAAC;EAC/C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAACY,OAAO,CAAC;EACvD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdc,UAAU,CAACH,OAAO,CAACI,QAAQ,CAACH,QAAQ,CAAC,CAAC;EACxC,CAAC,EAAE,CAACD,OAAO,EAAEC,QAAQ,CAAC,CAAC;EAEvB,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACFL,WAAW,CAAEM,YAAY,IAAK;QAC5B,IAAIC,QAAQ,GAAGD,YAAY;QAC3B,IAAIE,eAAe,GAAGP,WAAW;QACjC,IAAIQ,aAAa,GAAG,CAACb,OAAO;QAE5B,IAAIa,aAAa,EAAE;UACjBF,QAAQ,IAAI,CAAC;UACbC,eAAe,GAAG,CAAC,GAAGP,WAAW,EAAEN,QAAQ,CAAC;QAC9C,CAAC,MAAM;UACLY,QAAQ,IAAI,CAAC;UACbC,eAAe,GAAGP,WAAW,CAACS,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKhB,QAAQ,CAAC;QAC/D;;QAEA;QACA,IAAI,CAACc,aAAa,IAAIR,WAAW,CAACH,QAAQ,CAACH,QAAQ,CAAC,EAAE;UACpDY,QAAQ,IAAI,CAAC;QACf;QAEAV,UAAU,CAACY,aAAa,CAAC;QACzBP,cAAc,CAACM,eAAe,CAAC;;QAE/B;QACAI,KAAK,CAAE,+CAA8CpB,MAAO,GAAE,EAAE;UAC9DqB,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE,EAAC;YAC9D,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,KAAK,EAAEZ,aAAa;YACpBhB,KAAK,EAAEc,QAAQ;YACfe,QAAQ,EAAEd;UACZ,CAAC;QACH,CAAC,CAAC;QAEF,OAAOD,QAAQ;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdoB,OAAO,CAACpB,KAAK,CAACA,KAAK,CAAC;MACpBC,QAAQ,CAAC,8BAA8B,CAAC;IAC1C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAYM;AACL;AAACpC,EAAA,CArEkBF,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}