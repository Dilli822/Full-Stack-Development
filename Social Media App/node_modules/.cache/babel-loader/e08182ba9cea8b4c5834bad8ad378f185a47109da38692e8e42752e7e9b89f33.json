{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [selectedBlogId, setSelectedBlogId] = useState(null);\n//   const [liked, setLiked] = useState(false);\n//   const [likeCount, setLikeCount] = useState(0);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n//         setBlogs(data);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   const handleBlogClick = (id) => {\n//     const blog = blogs.find((blog) => blog.id === id);\n//     setSelectedBlogId(id);\n//     setLiked(blog.liked);\n//     setLikeCount(blog.likes);\n//   };\n\n//   const handleLikeClick = async (blog) => {\n//     const { id, liked } = blog;\n//     const newLiked = !liked;\n//     const newLikes = liked ? blog.likes - 1 : blog.likes + 1;\n\n//     try {\n//       const response = await fetch(`http://localhost:8000/api/blog/likes/update/${id}/`, {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//         },\n//         body: JSON.stringify({ liked: newLiked, likes: newLikes }),\n//       });\n\n//       const data = await response.json();\n//       const newBlogs = blogs.map((blog) => (blog.id === data.id ? data : blog));\n\n//       setBlogs(newBlogs);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Blogs</h2>\n//       <div className=\"blogs\">\n//   {blogs.map((blog) => (\n//     <div key={blog.id}>\n//       <h3>{blog.title}</h3>\n//       <p>{blog.content}</p>\n//       <p>\n//         Author: {blog.author.first_name} {blog.author.last_name}\n//       </p>\n//       <p>Likes: {blog.likes}</p>\n//       <IconButton onClick={() => handleLikeClick(blog)}>\n//         <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n//       </IconButton>\n//     </div>\n//   ))}\n// </div>\n\n//       {selectedBlogId && (\n//         <div className=\"likes\">\n//           <h3>\n//             {blogs.find((blog) => blog.id === selectedBlogId).title} - Likes:{\" \"}\n//             {likeCount}\n//           </h3>\n//           <IconButton\n//             onClick={() => {\n//               setLikeCount(likeCount + (liked ? -1 : 1));\n//               setLiked(!liked);\n//             }}\n//           >\n//             <FavoriteIcon color={liked ? \"error\" : \"primary\"} />\n//           </IconButton>\n//           <IconButton onClick={handleLikeClick}>\n//             <ShareIcon />\n//           </IconButton>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Likes;\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n\n//         // Initialize liked state for each blog post\n//         const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n//         setBlogs(blogsWithLiked);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   return (\n//     <div className=\"blogs\">\n//       {blogs.map((blog) => (\n//         <div key={blog.id}>\n//           <h3>{blog.title}</h3>\n//           <p>{blog.content}</p>\n//           <p>\n//             Author: {blog.author.first_name} {blog.author.last_name}\n//           </p>\n//           <p>Likes: {blog.likes}</p>\n//           <IconButton onClick={() => handleLikeClick(blog.id)}>\n//             <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n//           </IconButton>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Likes;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  const [countLikes, setCountLikes] = useState(0);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const handleLikeClick = blogId => {\n    // Update the API with the new liked state and like count\n    fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        liked: blogToUpdate.liked,\n        likes: blogToUpdate.likes\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => {\n      console.error(error);\n      setError(\"Failed to update like state.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n        color: blog.liked ? \"error\" : \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"NQ4ilqbeM9JYepazybH3BHCmUGs=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","ShareIcon","jsxDEV","_jsxDEV","Likes","_s","blogs","setBlogs","error","setError","countLikes","setCountLikes","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","console","handleLikeClick","blogId","method","body","JSON","stringify","liked","blogToUpdate","likes","then","log","catch","children","color","blog","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [selectedBlogId, setSelectedBlogId] = useState(null);\n//   const [liked, setLiked] = useState(false);\n//   const [likeCount, setLikeCount] = useState(0);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n//         setBlogs(data);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   const handleBlogClick = (id) => {\n//     const blog = blogs.find((blog) => blog.id === id);\n//     setSelectedBlogId(id);\n//     setLiked(blog.liked);\n//     setLikeCount(blog.likes);\n//   };\n\n//   const handleLikeClick = async (blog) => {\n//     const { id, liked } = blog;\n//     const newLiked = !liked;\n//     const newLikes = liked ? blog.likes - 1 : blog.likes + 1;\n  \n//     try {\n//       const response = await fetch(`http://localhost:8000/api/blog/likes/update/${id}/`, {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//         },\n//         body: JSON.stringify({ liked: newLiked, likes: newLikes }),\n//       });\n  \n//       const data = await response.json();\n//       const newBlogs = blogs.map((blog) => (blog.id === data.id ? data : blog));\n  \n//       setBlogs(newBlogs);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n  \n\n//   return (\n//     <div>\n//       <h2>Blogs</h2>\n//       <div className=\"blogs\">\n//   {blogs.map((blog) => (\n//     <div key={blog.id}>\n//       <h3>{blog.title}</h3>\n//       <p>{blog.content}</p>\n//       <p>\n//         Author: {blog.author.first_name} {blog.author.last_name}\n//       </p>\n//       <p>Likes: {blog.likes}</p>\n//       <IconButton onClick={() => handleLikeClick(blog)}>\n//         <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n//       </IconButton>\n//     </div>\n//   ))}\n// </div>\n\n//       {selectedBlogId && (\n//         <div className=\"likes\">\n//           <h3>\n//             {blogs.find((blog) => blog.id === selectedBlogId).title} - Likes:{\" \"}\n//             {likeCount}\n//           </h3>\n//           <IconButton\n//             onClick={() => {\n//               setLikeCount(likeCount + (liked ? -1 : 1));\n//               setLiked(!liked);\n//             }}\n//           >\n//             <FavoriteIcon color={liked ? \"error\" : \"primary\"} />\n//           </IconButton>\n//           <IconButton onClick={handleLikeClick}>\n//             <ShareIcon />\n//           </IconButton>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Likes;\n\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n\n//         // Initialize liked state for each blog post\n//         const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n//         setBlogs(blogsWithLiked);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   return (\n//     <div className=\"blogs\">\n//       {blogs.map((blog) => (\n//         <div key={blog.id}>\n//           <h3>{blog.title}</h3>\n//           <p>{blog.content}</p>\n//           <p>\n//             Author: {blog.author.first_name} {blog.author.last_name}\n//           </p>\n//           <p>Likes: {blog.likes}</p>\n//           <IconButton onClick={() => handleLikeClick(blog.id)}>\n//             <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n//           </IconButton>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Likes;\nexport default function Likes() {\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  const [countLikes, setCountLikes] = useState(0);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        const data = await response.json();\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n  \n  const handleLikeClick = (blogId) => {\n    \n    // Update the API with the new liked state and like count\n    fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        liked: blogToUpdate.liked,\n        likes: blogToUpdate.likes,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data))\n      .catch((error) => {\n        console.error(error);\n        setError(\"Failed to update like state.\");\n      });\n  };\n  \n \n  \n  return (\n    <div>\n  \n  <IconButton >\n              <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n            </IconButton>\n    </div>\n  );\n}\n"],"mappings":";;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,2BAA2B;;AAGjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;UAC/D;QACF,CAAC,CAAC;QAEF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;MACpC,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAACA,KAAK,CAAC;QACpBC,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC;IAEDG,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,eAAe,GAAIC,MAAM,IAAK;IAElC;IACAT,KAAK,CAAE,+CAA8CS,MAAO,GAAE,EAAE;MAC9DC,MAAM,EAAE,KAAK;MACbT,OAAO,EAAE;QACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE,EAAC;QAC9D,cAAc,EAAE;MAClB,CAAC;MACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAEC,YAAY,CAACD,KAAK;QACzBE,KAAK,EAAED,YAAY,CAACC;MACtB,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAAElB,QAAQ,IAAKA,QAAQ,CAACO,IAAI,EAAE,CAAC,CACnCW,IAAI,CAAEZ,IAAI,IAAKE,OAAO,CAACW,GAAG,CAACb,IAAI,CAAC,CAAC,CACjCc,KAAK,CAAEzB,KAAK,IAAK;MAChBa,OAAO,CAACb,KAAK,CAACA,KAAK,CAAC;MACpBC,QAAQ,CAAC,8BAA8B,CAAC;IAC1C,CAAC,CAAC;EACN,CAAC;EAID,oBACEN,OAAA;IAAA+B,QAAA,eAEF/B,OAAA,CAACJ,UAAU;MAAAmC,QAAA,eACC/B,OAAA,CAACH,YAAY;QAACmC,KAAK,EAAEC,IAAI,CAACR,KAAK,GAAG,OAAO,GAAG;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC9C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf;AAEV;AAACnC,EAAA,CAxDuBD,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}