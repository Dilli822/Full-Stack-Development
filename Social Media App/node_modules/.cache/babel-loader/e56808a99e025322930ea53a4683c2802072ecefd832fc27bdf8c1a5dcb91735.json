{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/blog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Update from \"./update\";\nimport Create from \"./create\";\nimport Logout from \"./logout\";\nimport ImageUploader from \"./storeImagetemporarily\";\nimport Login from \"./login\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blog() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [newBlogTitle, setNewBlogTitle] = useState(\"\");\n  const [newBlogContent, setNewBlogContent] = useState(\"\");\n  const [newBlogAuthorName, setNewBlogAuthorName] = useState(\"\");\n  const [blogs, setBlogs] = useState([]);\n  const [selectedBlogId, setSelectedBlogId] = useState(\"\");\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n  const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n  const [newBlogImage, setNewBlogImage] = useState(null);\n  const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [created_at, setCreatedAt] = useState(\"\");\n  const accessToken = localStorage.getItem(\"accessToken\");\n  const tokenParts = accessToken.split(\".\");\n\n  // Decode the access token payload\n  const payload = JSON.parse(atob(tokenParts[1]));\n\n  // Get the expiration time from the payload\n  const expirationTime = payload.exp;\n\n  // Calculate the remaining time in seconds until the token expires\n  const currentTime = Math.floor(Date.now() / 1000);\n  const remainingTime = expirationTime - currentTime;\n  console.log(`The access token will expire in ${remainingTime} seconds.`);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        if (response.status === 401) {\n          console.log(\"token expired and expired time is\", remainingTime);\n\n          // Access token has expired, use refresh token to get a new access token\n          const refreshResponse = await fetch(\"http://localhost:8000/api/refresh/\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              refresh: localStorage.getItem(\"refreshToken\")\n            })\n          });\n          if (refreshResponse.ok) {\n            const tokens = await refreshResponse.json();\n            localStorage.setItem(\"accessToken\", tokens.access);\n            // Try fetching blogs again with the new access token\n            const newResponse = await fetch(\"http://localhost:8000/api/blog/list/\", {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n              }\n            });\n            const data = await newResponse.json();\n            setBlogs(data);\n            setLoading(false);\n          } else {\n            throw new Error(\"Refresh token is invalid\");\n          }\n        } else {\n          const data = await response.json();\n          setBlogs(data);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const handleCreate = () => {\n    const newBlog = {\n      title: newBlogTitle,\n      content: newBlogContent,\n      authorName: newBlogAuthorName,\n      image: newBlogImage // Add the image file to the new blog object\n    };\n\n    const formData = new FormData();\n    formData.append(\"title\", newBlog.title);\n    formData.append(\"content\", newBlog.content);\n    formData.append(\"authorName\", newBlog.authorName);\n    if (newBlogImage != null) {\n      formData.append('image', newBlogImage);\n    }\n    fetch(\"http://localhost:8000/api/blog/create/\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      },\n      body: formData // Use the form data instead of JSON.stringify\n    }).then(response => response.json()).then(data => {\n      setBlogs([...blogs, data]);\n      setNewBlogTitle(\"\");\n      setNewBlogContent(\"\");\n      setNewBlogAuthorName(\"\");\n      setNewBlogImage(null); // Reset the image state after submitting the form\n    });\n  };\n\n  const handleDelete = id => {\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\n      fetch(`http://localhost:8000/api/blog/delete/${id}/`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      }).then(response => {\n        if (response.ok) {\n          setBlogs(blogs.filter(blog => blog.id !== id));\n        } else {\n          throw new Error(\"Delete failed\");\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n  const handleUpdate = () => {\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n      content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n      authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n    };\n    const formData = new FormData();\n    formData.append(\"title\", updatedBlog.title);\n    formData.append(\"content\", updatedBlog.content);\n    formData.append(\"authorName\", updatedBlog.authorName);\n    if (updatedBlogImage != null) {\n      formData.append('image', updatedBlogImage);\n    }\n    fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      },\n      body: formData\n    }).then(response => response.json()).then(data => {\n      const index = blogs.findIndex(blog => blog.id === data.id);\n      const newBlogs = [...blogs];\n      newBlogs[index] = data;\n      setBlogs(newBlogs);\n      setSelectedBlogId(\"\");\n      setUpdatedBlogTitle(undefined);\n      setUpdatedBlogContent(undefined);\n      setUpdatedBlogAuthorName(undefined);\n      setUpdatedBlogImage(null);\n    }).catch(error => console.error(error));\n  };\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    // Remove access token and refresh token from local storage\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n\n    // Navigate to the login page\n\n    navigate('/login');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"0px 25px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: \"right\",\n          margin: \"0px 10px\"\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Blog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newBlogTitle,\n            onChange: event => setNewBlogTitle(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Content: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newBlogContent,\n            onChange: event => setNewBlogContent(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Author Name:    \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 21\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newBlogAuthorName,\n            onChange: event => setNewBlogAuthorName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newBlogImage\",\n              children: \"Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"newBlogImage\",\n              name: \"newBlogImage\",\n              onChange: event => setNewBlogImage(event.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create\",\n            onClick: handleCreate,\n            children: \"Create Blog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this), selectedBlogId !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Update Blog \\\"\", blogs.find(blog => blog.id === selectedBlogId).title, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"blog-title\",\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"blog-title\",\n              value: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n              onChange: e => setUpdatedBlogTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"blog-content\",\n              children: \"Content:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 76\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"blog-content\",\n              value: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n              onChange: e => setUpdatedBlogContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"blog-author-name\",\n              children: \"Author Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 84\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"blog-author-name\",\n              value: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName,\n              onChange: e => setUpdatedBlogAuthorName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"updatedBlogImage\",\n              children: \"Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:8000${blogs.find(blog => blog.id === selectedBlogId).image}`,\n              style: {\n                width: \"auto\",\n                maxWidth: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"updatedBlogImage\",\n              name: \"updatedBlogImage\",\n              onChange: event => setUpdatedBlogImage(event.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update\",\n            onClick: handleUpdate,\n            children: \"Update Blog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel\",\n            onClick: () => setSelectedBlogId(\"\"),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Blog List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this), blogs.sort((a, b) => b.id - a.id).map(blog => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000${blog.image}`,\n            style: {\n              width: \"450px\",\n              maxWidth: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: blog.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Author: \", blog.authorName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Published Date: \", blog.created_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Updated Date: \", blog.updated_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this), created_at && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Blog Created at Standard: \", created_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update\",\n            onClick: () => setSelectedBlogId(blog.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => handleDelete(blog.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 29\n          }, this)]\n        }, blog.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n_s(Blog, \"lA9N6oxj1BDwcBfCdtictKcYadc=\", false, function () {\n  return [useNavigate];\n});\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","Link","Update","Create","Logout","ImageUploader","Login","useNavigate","jsxDEV","_jsxDEV","Blog","_s","loading","setLoading","newBlogTitle","setNewBlogTitle","newBlogContent","setNewBlogContent","newBlogAuthorName","setNewBlogAuthorName","blogs","setBlogs","selectedBlogId","setSelectedBlogId","updatedBlogTitle","setUpdatedBlogTitle","undefined","updatedBlogContent","setUpdatedBlogContent","updatedBlogAuthorName","setUpdatedBlogAuthorName","newBlogImage","setNewBlogImage","updatedBlogImage","setUpdatedBlogImage","imageUrl","setImageUrl","created_at","setCreatedAt","accessToken","localStorage","getItem","tokenParts","split","payload","JSON","parse","atob","expirationTime","exp","currentTime","Math","floor","Date","now","remainingTime","console","log","fetchBlogs","response","fetch","headers","Authorization","status","refreshResponse","method","body","stringify","refresh","ok","tokens","json","setItem","access","newResponse","data","Error","error","handleCreate","newBlog","title","content","authorName","image","formData","FormData","append","then","handleDelete","id","window","confirm","filter","blog","catch","handleUpdate","updatedBlog","find","index","findIndex","newBlogs","navigate","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","margin","float","onClick","marginTop","type","value","onChange","event","target","htmlFor","name","files","className","e","src","width","maxWidth","sort","a","b","map","updated_at","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/blog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Update from \"./update\";\nimport Create from \"./create\";\nimport Logout from \"./logout\";\nimport ImageUploader from \"./storeImagetemporarily\";\nimport Login from \"./login\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction Blog() {\n    const [loading, setLoading] = useState(true);\n    const [newBlogTitle, setNewBlogTitle] = useState(\"\");\n    const [newBlogContent, setNewBlogContent] = useState(\"\");\n    const [newBlogAuthorName, setNewBlogAuthorName] = useState(\"\");\n\n    const [blogs, setBlogs] = useState([]);\n    const [selectedBlogId, setSelectedBlogId] = useState(\"\");\n    const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n    const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n    const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n\n    const [newBlogImage, setNewBlogImage] = useState(null);\n    const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n\n    const [imageUrl, setImageUrl] = useState(null);\n\n    const [created_at, setCreatedAt] = useState(\"\");\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const tokenParts = accessToken.split(\".\");\n\n    // Decode the access token payload\n    const payload = JSON.parse(atob(tokenParts[1]));\n\n    // Get the expiration time from the payload\n    const expirationTime = payload.exp;\n\n    // Calculate the remaining time in seconds until the token expires\n    const currentTime = Math.floor(Date.now() / 1000);\n    const remainingTime = expirationTime - currentTime;\n\n    console.log(`The access token will expire in ${remainingTime} seconds.`);\n    useEffect(() => {\n        const fetchBlogs = async () => {\n            try {\n                const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                    },\n                });\n\n                if (response.status === 401) {\n                    console.log(\"token expired and expired time is\", remainingTime);\n\n                    // Access token has expired, use refresh token to get a new access token\n                    const refreshResponse = await fetch(\"http://localhost:8000/api/refresh/\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                            refresh: localStorage.getItem(\"refreshToken\"),\n                        }),\n                    });\n\n                    if (refreshResponse.ok) {\n                        const tokens = await refreshResponse.json();\n                        localStorage.setItem(\"accessToken\", tokens.access);\n                        // Try fetching blogs again with the new access token\n                        const newResponse = await fetch(\"http://localhost:8000/api/blog/list/\", {\n                            headers: {\n                                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                            },\n                        });\n                        const data = await newResponse.json();\n                        setBlogs(data);\n                        setLoading(false);\n                    } else {\n                        throw new Error(\"Refresh token is invalid\");\n                    }\n                } else {\n                    const data = await response.json();\n                    setBlogs(data);\n                    setLoading(false);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchBlogs();\n    }, []);\n\n    const handleCreate = () => {\n        const newBlog = {\n            title: newBlogTitle,\n            content: newBlogContent,\n            authorName: newBlogAuthorName,\n            image: newBlogImage, // Add the image file to the new blog object\n        };\n\n        const formData = new FormData();\n        formData.append(\"title\", newBlog.title);\n        formData.append(\"content\", newBlog.content);\n        formData.append(\"authorName\", newBlog.authorName);\n        if(newBlogImage != null){\n            formData.append('image', newBlogImage);\n        }\n\n        fetch(\"http://localhost:8000/api/blog/create/\", {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            },\n            body: formData, // Use the form data instead of JSON.stringify\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                setBlogs([...blogs, data]);\n                setNewBlogTitle(\"\");\n                setNewBlogContent(\"\");\n                setNewBlogAuthorName(\"\");\n                setNewBlogImage(null); // Reset the image state after submitting the form\n            });\n    };\n\n    const handleDelete = (id) => {\n        if (window.confirm(\"Are you sure you want to delete this post?\")) {\n            fetch(`http://localhost:8000/api/blog/delete/${id}/`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n                },\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setBlogs(blogs.filter((blog) => blog.id !== id));\n                    } else {\n                        throw new Error(\"Delete failed\");\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    };\n\n    const handleUpdate = () => {\n        const updatedBlog = {\n            id: selectedBlogId,\n            title: updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle,\n            content: updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent,\n            authorName: updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName,\n        };\n\n        const formData = new FormData();\n        formData.append(\"title\", updatedBlog.title);\n        formData.append(\"content\", updatedBlog.content);\n        formData.append(\"authorName\", updatedBlog.authorName);\n        if(updatedBlogImage != null){\n            formData.append('image', updatedBlogImage);\n        }\n\n        fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n            method: \"PUT\",\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            },\n            body: formData,\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                const index = blogs.findIndex((blog) => blog.id === data.id);\n                const newBlogs = [...blogs];\n                newBlogs[index] = data;\n                setBlogs(newBlogs);\n                setSelectedBlogId(\"\");\n                setUpdatedBlogTitle(undefined);\n                setUpdatedBlogContent(undefined);\n                setUpdatedBlogAuthorName(undefined);\n                setUpdatedBlogImage(null);\n            })\n            .catch((error) => console.error(error));\n    };\n    \n  const navigate = useNavigate();\n\n  const  handleLogout = () => {\n    // Remove access token and refresh token from local storage\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n\n    // Navigate to the login page\n  \n    navigate('/login');\n  }\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"space-between\"   }}>\n        <div style={{ margin: \"0px 25px\"}}>\n            {/* <div>You are not Authorized to view the blog site. Please Signup or Login</div>\n            <button><Link to=\"/login\">Login</Link></button> */}\n              <div style={{float: \"right\", margin: \"0px 10px\"}}> <button onClick={handleLogout}>Logout</button></div>\n            <div>\n              \n                <div style={{marginTop: \"0px\"}}>\n                    {/* <Link to=\"/update\">update</Link>\n                    <Link to=\"/create\">create</Link>\n                 <button></button>\n                    <button>\n                        {\" \"}\n                        <Link to=\"/uploadImg\">Upload Image</Link>\n                    </button> */}\n\n                    <h2>Create New Blog</h2>\n                    <label>\n                        Title: </label><br></br>\n                        <input type=\"text\" value={newBlogTitle} onChange={(event) => setNewBlogTitle(event.target.value)} />\n                   \n                    <br />\n                    <label>\n                        Content: </label> <br></br>\n                        <textarea value={newBlogContent} onChange={(event) => setNewBlogContent(event.target.value)} />\n                   \n                    <br />\n                    <label>\n                        Author Name:    </label>  <br></br>\n                        <input type=\"text\" value={newBlogAuthorName} onChange={(event) => setNewBlogAuthorName(event.target.value)} />\n                 \n\n                    <div>\n                        <label htmlFor=\"newBlogImage\">Image:</label> \n                        <input type=\"file\" id=\"newBlogImage\" name=\"newBlogImage\" onChange={(event) => setNewBlogImage(event.target.files[0])} />\n                    </div>\n\n                    <br />\n                    <button  className=\"create\" onClick={handleCreate}>Create Blog</button>\n                </div>\n\n                {/* <UpdateBlog/> */}\n                {selectedBlogId !== \"\" && (\n                    <div>\n                        <h2>Update Blog \"{blogs.find((blog) => blog.id === selectedBlogId).title}\"</h2>\n\n                        <div>\n                            <label htmlFor=\"blog-title\">Title:</label> <br></br>\n                            <input type=\"text\" id=\"blog-title\" value={updatedBlogTitle === undefined ? blogs.find((blog) => blog.id === selectedBlogId).title : updatedBlogTitle} onChange={(e) => setUpdatedBlogTitle(e.target.value)} />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"blog-content\">Content:</label> <br></br>\n                            <textarea id=\"blog-content\" value={updatedBlogContent === undefined ? blogs.find((blog) => blog.id === selectedBlogId).content : updatedBlogContent} onChange={(e) => setUpdatedBlogContent(e.target.value)} />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"blog-author-name\">Author Name:</label> <br></br>\n                            <input\n                                type=\"text\"\n                                id=\"blog-author-name\"\n                                value={updatedBlogAuthorName === undefined ? blogs.find((blog) => blog.id === selectedBlogId).authorName : updatedBlogAuthorName}\n                                onChange={(e) => setUpdatedBlogAuthorName(e.target.value)}\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"updatedBlogImage\">Image:</label>\n                            <img src={`http://localhost:8000${blogs.find((blog) => blog.id === selectedBlogId).image}`} style={{ width: \"auto\", maxWidth: \"100%\" }} />\n                            <input type=\"file\" id=\"updatedBlogImage\" name=\"updatedBlogImage\" onChange={(event) => setUpdatedBlogImage(event.target.files[0])} />\n                        </div>\n\n                        <button className=\"update\"  onClick={handleUpdate}>Update Blog</button>\n                        <button className=\"cancel\" onClick={() => setSelectedBlogId(\"\")}>Cancel</button>\n                    </div>\n                )}\n\n                <h1>Blog List</h1>\n\n                {blogs\n                    .sort((a, b) => b.id - a.id)\n                    .map((blog) => (\n                        <li key={blog.id}>\n                            <h2>{blog.title}</h2>\n                            <img src={`http://localhost:8000${blog.image}`} style={{ width: \"450px\", maxWidth: \"100%\" }} />\n\n                            <p>{blog.content}</p>\n                            <p>Author: {blog.authorName}</p>\n                            <p>Published Date: {blog.created_at}</p>\n                            <p>Updated Date: {blog.updated_at}</p>\n                            {created_at && <p>Blog Created at Standard: {created_at}</p>}\n                            <button className=\"update\" onClick={() => setSelectedBlogId(blog.id)}>Edit</button>\n                            <button className=\"delete\" onClick={() => handleDelete(blog.id)}>Delete</button>\n                        </li>\n                    ))}\n            </div>\n        </div>\n        </div>\n    );\n}\nexport default Blog;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACyB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1B,QAAQ,CAAC2B,SAAS,CAAC;EACnE,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG7B,QAAQ,CAAC2B,SAAS,CAAC;EACvE,MAAM,CAACG,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG/B,QAAQ,CAAC2B,SAAS,CAAC;EAE7E,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAM,CAACoC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM,CAACsC,UAAU,EAAEC,YAAY,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAMwC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACvD,MAAMC,UAAU,GAAGH,WAAW,CAACI,KAAK,CAAC,GAAG,CAAC;;EAEzC;EACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACL,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMM,cAAc,GAAGJ,OAAO,CAACK,GAAG;;EAElC;EACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC;EACjD,MAAMC,aAAa,GAAGP,cAAc,GAAGE,WAAW;EAElDM,OAAO,CAACC,GAAG,CAAE,mCAAkCF,aAAc,WAAU,CAAC;EACxEvD,SAAS,CAAC,MAAM;IACZ,MAAM0D,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACjEC,OAAO,EAAE;YACLC,aAAa,EAAG,UAAStB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;UACjE;QACJ,CAAC,CAAC;QAEF,IAAIkB,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;UACzBP,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,aAAa,CAAC;;UAE/D;UACA,MAAMS,eAAe,GAAG,MAAMJ,KAAK,CAAC,oCAAoC,EAAE;YACtEK,MAAM,EAAE,MAAM;YACdJ,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDK,IAAI,EAAErB,IAAI,CAACsB,SAAS,CAAC;cACjBC,OAAO,EAAE5B,YAAY,CAACC,OAAO,CAAC,cAAc;YAChD,CAAC;UACL,CAAC,CAAC;UAEF,IAAIuB,eAAe,CAACK,EAAE,EAAE;YACpB,MAAMC,MAAM,GAAG,MAAMN,eAAe,CAACO,IAAI,EAAE;YAC3C/B,YAAY,CAACgC,OAAO,CAAC,aAAa,EAAEF,MAAM,CAACG,MAAM,CAAC;YAClD;YACA,MAAMC,WAAW,GAAG,MAAMd,KAAK,CAAC,sCAAsC,EAAE;cACpEC,OAAO,EAAE;gBACLC,aAAa,EAAG,UAAStB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;cACjE;YACJ,CAAC,CAAC;YACF,MAAMkC,IAAI,GAAG,MAAMD,WAAW,CAACH,IAAI,EAAE;YACrClD,QAAQ,CAACsD,IAAI,CAAC;YACd9D,UAAU,CAAC,KAAK,CAAC;UACrB,CAAC,MAAM;YACH,MAAM,IAAI+D,KAAK,CAAC,0BAA0B,CAAC;UAC/C;QACJ,CAAC,MAAM;UACH,MAAMD,IAAI,GAAG,MAAMhB,QAAQ,CAACY,IAAI,EAAE;UAClClD,QAAQ,CAACsD,IAAI,CAAC;UACd9D,UAAU,CAAC,KAAK,CAAC;QACrB;MACJ,CAAC,CAAC,OAAOgE,KAAK,EAAE;QACZrB,OAAO,CAACqB,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IAEDnB,UAAU,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoB,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,OAAO,GAAG;MACZC,KAAK,EAAElE,YAAY;MACnBmE,OAAO,EAAEjE,cAAc;MACvBkE,UAAU,EAAEhE,iBAAiB;MAC7BiE,KAAK,EAAEpD,YAAY,CAAE;IACzB,CAAC;;IAED,MAAMqD,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,OAAO,CAACC,KAAK,CAAC;IACvCI,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEP,OAAO,CAACE,OAAO,CAAC;IAC3CG,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEP,OAAO,CAACG,UAAU,CAAC;IACjD,IAAGnD,YAAY,IAAI,IAAI,EAAC;MACpBqD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEvD,YAAY,CAAC;IAC1C;IAEA6B,KAAK,CAAC,wCAAwC,EAAE;MAC5CK,MAAM,EAAE,MAAM;MACdJ,OAAO,EAAE;QACLC,aAAa,EAAG,UAAStB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;MACjE,CAAC;MACDyB,IAAI,EAAEkB,QAAQ,CAAE;IACpB,CAAC,CAAC,CACGG,IAAI,CAAE5B,QAAQ,IAAKA,QAAQ,CAACY,IAAI,EAAE,CAAC,CACnCgB,IAAI,CAAEZ,IAAI,IAAK;MACZtD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEuD,IAAI,CAAC,CAAC;MAC1B5D,eAAe,CAAC,EAAE,CAAC;MACnBE,iBAAiB,CAAC,EAAE,CAAC;MACrBE,oBAAoB,CAAC,EAAE,CAAC;MACxBa,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;EACV,CAAC;;EAED,MAAMwD,YAAY,GAAIC,EAAE,IAAK;IACzB,IAAIC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MAC9D/B,KAAK,CAAE,yCAAwC6B,EAAG,GAAE,EAAE;QAClDxB,MAAM,EAAE,QAAQ;QAChBJ,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAAStB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;QACjE;MACJ,CAAC,CAAC,CACG8C,IAAI,CAAE5B,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACU,EAAE,EAAE;UACbhD,QAAQ,CAACD,KAAK,CAACwE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;QACpD,CAAC,MAAM;UACH,MAAM,IAAIb,KAAK,CAAC,eAAe,CAAC;QACpC;MACJ,CAAC,CAAC,CACDkB,KAAK,CAAEjB,KAAK,IAAK;QACdrB,OAAO,CAACqB,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV;EACJ,CAAC;EAED,MAAMkB,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,WAAW,GAAG;MAChBP,EAAE,EAAEnE,cAAc;MAClB0D,KAAK,EAAExD,gBAAgB,KAAKE,SAAS,GAAGN,KAAK,CAAC6E,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKnE,cAAc,CAAC,CAAC0D,KAAK,GAAGxD,gBAAgB;MACjHyD,OAAO,EAAEtD,kBAAkB,KAAKD,SAAS,GAAGN,KAAK,CAAC6E,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKnE,cAAc,CAAC,CAAC2D,OAAO,GAAGtD,kBAAkB;MACzHuD,UAAU,EAAErD,qBAAqB,KAAKH,SAAS,GAAGN,KAAK,CAAC6E,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKnE,cAAc,CAAC,CAAC4D,UAAU,GAAGrD;IACpH,CAAC;IAED,MAAMuD,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEU,WAAW,CAAChB,KAAK,CAAC;IAC3CI,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEU,WAAW,CAACf,OAAO,CAAC;IAC/CG,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEU,WAAW,CAACd,UAAU,CAAC;IACrD,IAAGjD,gBAAgB,IAAI,IAAI,EAAC;MACxBmD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAErD,gBAAgB,CAAC;IAC9C;IAEA2B,KAAK,CAAE,yCAAwCoC,WAAW,CAACP,EAAG,GAAE,EAAE;MAC9DxB,MAAM,EAAE,KAAK;MACbJ,OAAO,EAAE;QACLC,aAAa,EAAG,UAAStB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;MACjE,CAAC;MACDyB,IAAI,EAAEkB;IACV,CAAC,CAAC,CACGG,IAAI,CAAE5B,QAAQ,IAAKA,QAAQ,CAACY,IAAI,EAAE,CAAC,CACnCgB,IAAI,CAAEZ,IAAI,IAAK;MACZ,MAAMuB,KAAK,GAAG9E,KAAK,CAAC+E,SAAS,CAAEN,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKd,IAAI,CAACc,EAAE,CAAC;MAC5D,MAAMW,QAAQ,GAAG,CAAC,GAAGhF,KAAK,CAAC;MAC3BgF,QAAQ,CAACF,KAAK,CAAC,GAAGvB,IAAI;MACtBtD,QAAQ,CAAC+E,QAAQ,CAAC;MAClB7E,iBAAiB,CAAC,EAAE,CAAC;MACrBE,mBAAmB,CAACC,SAAS,CAAC;MAC9BE,qBAAqB,CAACF,SAAS,CAAC;MAChCI,wBAAwB,CAACJ,SAAS,CAAC;MACnCQ,mBAAmB,CAAC,IAAI,CAAC;IAC7B,CAAC,CAAC,CACD4D,KAAK,CAAEjB,KAAK,IAAKrB,OAAO,CAACqB,KAAK,CAACA,KAAK,CAAC,CAAC;EAC/C,CAAC;EAEH,MAAMwB,QAAQ,GAAG9F,WAAW,EAAE;EAE9B,MAAO+F,YAAY,GAAGA,CAAA,KAAM;IAC1B;IACA9D,YAAY,CAAC+D,UAAU,CAAC,aAAa,CAAC;IACtC/D,YAAY,CAAC+D,UAAU,CAAC,cAAc,CAAC;;IAEvC;;IAEAF,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAEC,IAAIzF,OAAO,EAAE;IACT,oBAAOH,OAAA;MAAA+F,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAC5B;EAEA,oBACInG,OAAA;IAAKoG,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE;IAAkB,CAAE;IAAAP,QAAA,eACnE/F,OAAA;MAAKoG,KAAK,EAAE;QAAEG,MAAM,EAAE;MAAU,CAAE;MAAAR,QAAA,gBAG5B/F,OAAA;QAAKoG,KAAK,EAAE;UAACI,KAAK,EAAE,OAAO;UAAED,MAAM,EAAE;QAAU,CAAE;QAAAR,QAAA,GAAC,GAAC,eAAA/F,OAAA;UAAQyG,OAAO,EAAEZ,YAAa;UAAAE,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzGnG,OAAA;QAAA+F,QAAA,gBAEI/F,OAAA;UAAKoG,KAAK,EAAE;YAACM,SAAS,EAAE;UAAK,CAAE;UAAAX,QAAA,gBAS3B/F,OAAA;YAAA+F,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACxBnG,OAAA;YAAA+F,QAAA,EAAO;UACI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eAAAnG,OAAA;YAAAgG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACxBnG,OAAA;YAAO2G,IAAI,EAAC,MAAM;YAACC,KAAK,EAAEvG,YAAa;YAACwG,QAAQ,EAAGC,KAAK,IAAKxG,eAAe,CAACwG,KAAK,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAExGnG,OAAA;YAAAgG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACNnG,OAAA;YAAA+F,QAAA,EAAO;UACM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,KAAC,eAAAnG,OAAA;YAAAgG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eAC3BnG,OAAA;YAAU4G,KAAK,EAAErG,cAAe;YAACsG,QAAQ,EAAGC,KAAK,IAAKtG,iBAAiB,CAACsG,KAAK,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAEnGnG,OAAA;YAAAgG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACNnG,OAAA;YAAA+F,QAAA,EAAO;UACa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,MAAE,eAAAnG,OAAA;YAAAgG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACnCnG,OAAA;YAAO2G,IAAI,EAAC,MAAM;YAACC,KAAK,EAAEnG,iBAAkB;YAACoG,QAAQ,EAAGC,KAAK,IAAKpG,oBAAoB,CAACoG,KAAK,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAGlHnG,OAAA;YAAA+F,QAAA,gBACI/F,OAAA;cAAOgH,OAAO,EAAC,cAAc;cAAAjB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,eAC5CnG,OAAA;cAAO2G,IAAI,EAAC,MAAM;cAAC3B,EAAE,EAAC,cAAc;cAACiC,IAAI,EAAC,cAAc;cAACJ,QAAQ,EAAGC,KAAK,IAAKvF,eAAe,CAACuF,KAAK,CAACC,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;YAAE;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACtH,eAENnG,OAAA;YAAAgG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACNnG,OAAA;YAASmH,SAAS,EAAC,QAAQ;YAACV,OAAO,EAAEpC,YAAa;YAAA0B,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrE,EAGLtF,cAAc,KAAK,EAAE,iBAClBb,OAAA;UAAA+F,QAAA,gBACI/F,OAAA;YAAA+F,QAAA,GAAI,gBAAa,EAACpF,KAAK,CAAC6E,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKnE,cAAc,CAAC,CAAC0D,KAAK,EAAC,IAAC;UAAA;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAE/EnG,OAAA;YAAA+F,QAAA,gBACI/F,OAAA;cAAOgH,OAAO,EAAC,YAAY;cAAAjB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,KAAC,eAAAnG,OAAA;cAAAgG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS,eACpDnG,OAAA;cAAO2G,IAAI,EAAC,MAAM;cAAC3B,EAAE,EAAC,YAAY;cAAC4B,KAAK,EAAE7F,gBAAgB,KAAKE,SAAS,GAAGN,KAAK,CAAC6E,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKnE,cAAc,CAAC,CAAC0D,KAAK,GAAGxD,gBAAiB;cAAC8F,QAAQ,EAAGO,CAAC,IAAKpG,mBAAmB,CAACoG,CAAC,CAACL,MAAM,CAACH,KAAK;YAAE;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC5M,eAENnG,OAAA;YAAA+F,QAAA,gBACI/F,OAAA;cAAOgH,OAAO,EAAC,cAAc;cAAAjB,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,KAAC,eAAAnG,OAAA;cAAAgG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS,eACxDnG,OAAA;cAAUgF,EAAE,EAAC,cAAc;cAAC4B,KAAK,EAAE1F,kBAAkB,KAAKD,SAAS,GAAGN,KAAK,CAAC6E,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKnE,cAAc,CAAC,CAAC2D,OAAO,GAAGtD,kBAAmB;cAAC2F,QAAQ,EAAGO,CAAC,IAAKjG,qBAAqB,CAACiG,CAAC,CAACL,MAAM,CAACH,KAAK;YAAE;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC7M,eAENnG,OAAA;YAAA+F,QAAA,gBACI/F,OAAA;cAAOgH,OAAO,EAAC,kBAAkB;cAAAjB,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,KAAC,eAAAnG,OAAA;cAAAgG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS,eAChEnG,OAAA;cACI2G,IAAI,EAAC,MAAM;cACX3B,EAAE,EAAC,kBAAkB;cACrB4B,KAAK,EAAExF,qBAAqB,KAAKH,SAAS,GAAGN,KAAK,CAAC6E,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKnE,cAAc,CAAC,CAAC4D,UAAU,GAAGrD,qBAAsB;cACjIyF,QAAQ,EAAGO,CAAC,IAAK/F,wBAAwB,CAAC+F,CAAC,CAACL,MAAM,CAACH,KAAK;YAAE;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAC5D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACA,eAENnG,OAAA;YAAA+F,QAAA,gBACI/F,OAAA;cAAOgH,OAAO,EAAC,kBAAkB;cAAAjB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,eAChDnG,OAAA;cAAKqH,GAAG,EAAG,wBAAuB1G,KAAK,CAAC6E,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKnE,cAAc,CAAC,CAAC6D,KAAM,EAAE;cAAC0B,KAAK,EAAE;gBAAEkB,KAAK,EAAE,MAAM;gBAAEC,QAAQ,EAAE;cAAO;YAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,eAC1InG,OAAA;cAAO2G,IAAI,EAAC,MAAM;cAAC3B,EAAE,EAAC,kBAAkB;cAACiC,IAAI,EAAC,kBAAkB;cAACJ,QAAQ,EAAGC,KAAK,IAAKrF,mBAAmB,CAACqF,KAAK,CAACC,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;YAAE;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAClI,eAENnG,OAAA;YAAQmH,SAAS,EAAC,QAAQ;YAAEV,OAAO,EAAEnB,YAAa;YAAAS,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACvEnG,OAAA;YAAQmH,SAAS,EAAC,QAAQ;YAACV,OAAO,EAAEA,CAAA,KAAM3F,iBAAiB,CAAC,EAAE,CAAE;YAAAiF,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEvF,eAEDnG,OAAA;UAAA+F,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,EAEjBxF,KAAK,CACD6G,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC1C,EAAE,GAAGyC,CAAC,CAACzC,EAAE,CAAC,CAC3B2C,GAAG,CAAEvC,IAAI,iBACNpF,OAAA;UAAA+F,QAAA,gBACI/F,OAAA;YAAA+F,QAAA,EAAKX,IAAI,CAACb;UAAK;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACrBnG,OAAA;YAAKqH,GAAG,EAAG,wBAAuBjC,IAAI,CAACV,KAAM,EAAE;YAAC0B,KAAK,EAAE;cAAEkB,KAAK,EAAE,OAAO;cAAEC,QAAQ,EAAE;YAAO;UAAE;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAE/FnG,OAAA;YAAA+F,QAAA,EAAIX,IAAI,CAACZ;UAAO;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACrBnG,OAAA;YAAA+F,QAAA,GAAG,UAAQ,EAACX,IAAI,CAACX,UAAU;UAAA;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAChCnG,OAAA;YAAA+F,QAAA,GAAG,kBAAgB,EAACX,IAAI,CAACxD,UAAU;UAAA;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACxCnG,OAAA;YAAA+F,QAAA,GAAG,gBAAc,EAACX,IAAI,CAACwC,UAAU;UAAA;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,EACrCvE,UAAU,iBAAI5B,OAAA;YAAA+F,QAAA,GAAG,4BAA0B,EAACnE,UAAU;UAAA;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC5DnG,OAAA;YAAQmH,SAAS,EAAC,QAAQ;YAACV,OAAO,EAAEA,CAAA,KAAM3F,iBAAiB,CAACsE,IAAI,CAACJ,EAAE,CAAE;YAAAe,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACnFnG,OAAA;YAAQmH,SAAS,EAAC,QAAQ;YAACV,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAACK,IAAI,CAACJ,EAAE,CAAE;YAAAe,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA,GAV3Ef,IAAI,CAACJ,EAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAYnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd;AAACjG,EAAA,CApSQD,IAAI;EAAA,QAgLMH,WAAW;AAAA;AAAA+H,EAAA,GAhLrB5H,IAAI;AAqSb,eAAeA,IAAI;AAAC,IAAA4H,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}