{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Update() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [selectedBlogId, setSelectedBlogId] = useState('');\n  const [created_at, setCreatedAt] = useState(\"\");\n  const [newBlogImage, setNewBlogImage] = useState(null);\n  const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n  const handleUpdate = () => {\n    const blogToUpdate = blogs.find(blog => blog.id === selectedBlogId);\n    const updatedBlog = {\n      id: selectedBlogId,\n      image: updatedBlogImage || blogToUpdate.image // use updated image if provided, otherwise use the previous image\n    };\n\n    const formData = new FormData();\n    formData.append('image', updatedBlog.image);\n    fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: formData\n    }).then(response => response.json()).then(data => {\n      const updatedBlogIndex = blogs.findIndex(blog => blog.id === data.id);\n      const updatedBlogs = [...blogs];\n      updatedBlogs[updatedBlogIndex] = data;\n      setBlogs(updatedBlogs);\n      setUpdatedBlogImage(null);\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [selectedBlogId !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blog-image\",\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"updatedBlogImage\",\n          name: \"updatedBlogImage\",\n          onChange: event => setUpdatedBlogImage(event.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedBlogId(''),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedBlogId(blogs.id),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Update, \"lIlL+ZFIzhZFEEBer7niKnrK838=\");\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Update","_s","blogs","setBlogs","selectedBlogId","setSelectedBlogId","created_at","setCreatedAt","newBlogImage","setNewBlogImage","updatedBlogImage","setUpdatedBlogImage","handleUpdate","blogToUpdate","find","blog","id","updatedBlog","image","formData","FormData","append","fetch","method","headers","localStorage","getItem","body","then","response","json","data","updatedBlogIndex","findIndex","updatedBlogs","catch","error","console","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","event","target","files","onClick","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport {Link} from \"react-router-dom\";\n\nfunction Update() {\n  const [blogs, setBlogs] = useState([]);\n  const [selectedBlogId, setSelectedBlogId] = useState('');\n  const [created_at, setCreatedAt] = useState(\"\");\n  const [newBlogImage, setNewBlogImage] = useState(null);\n  const [updatedBlogImage, setUpdatedBlogImage] = useState(null)\n \n  const handleUpdate = () => {\n    const blogToUpdate = blogs.find(blog => blog.id === selectedBlogId);\n  \n    const updatedBlog = {\n      id: selectedBlogId,\n      image: updatedBlogImage || blogToUpdate.image, // use updated image if provided, otherwise use the previous image\n    }\n  \n    const formData = new FormData();\n    formData.append('image', updatedBlog.image);\n  \n    fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: formData\n    })\n      .then(response => response.json())\n      .then(data => {\n        const updatedBlogIndex = blogs.findIndex(blog => blog.id === data.id);\n        const updatedBlogs = [...blogs];\n        updatedBlogs[updatedBlogIndex] = data;\n        setBlogs(updatedBlogs);\n        setUpdatedBlogImage(null);\n  \n      })\n      .catch(error => console.error(error))\n  }\n  return (\n    <div>\n\n      {selectedBlogId !== '' && (\n        <div>\n     \n     <div>\n  <label htmlFor=\"blog-image\">Image:</label>\n  <input type=\"file\" id=\"updatedBlogImage\" name=\"updatedBlogImage\" onChange={event => setUpdatedBlogImage(event.target.files[0])} />\n\n  </div>\n  \n\n     <button onClick={handleUpdate}>Update</button>\n     <button onClick={() => setSelectedBlogId('')}>Cancel</button>\n     \n</div>\n      )}\n\n<button onClick={() => setSelectedBlogId(blogs.id)}>Edit</button>\n\n</div>\n  )\n}\n\nexport default Update;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}