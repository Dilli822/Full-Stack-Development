{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/App.js\";\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// import Login from './components/login/login';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false,\n//     title: \"\",\n//     content: \"\",\n//     category: \"\",\n//     editingId: null\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     if (window.confirm('Are you sure you want to update this item?')) {\n//     axios.patch(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//         this.setState({ editingId: null, title: '', content: '', category: '' });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//     }\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to permanently delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n\n//   handleInputChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   handleFormSubmit = (event) => {\n//     event.preventDefault();\n//     if (this.state.editingId) {\n//       this.updateData(this.state.editingId, { title: this.state.title, content: this.state.content, category: this.state.category });\n//     } else {\n//       this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n//     }\n//   };\n\n//   handleEditClick = (id, title, content, category) => {\n//     this.setState({ editingId: id, title, content, category });\n//   };\n\n//   render() {\n//   const { data, loading, title, content, category, editingId } = this.state;\n//   return (\n//     <div>\n//       {!editingId ? (\n//         <form onSubmit={this.handleFormSubmit}>\n//           <label\n// htmlFor=\"title\">Title:</label>\n// <input\n//          type=\"text\"\n//          name=\"title\"\n//          value={title}\n//          onChange={this.handleInputChange}\n//        />\n// <label htmlFor=\"content\">Content:</label>\n// <input\n//          type=\"text\"\n//          name=\"content\"\n//          value={content}\n//          onChange={this.handleInputChange}\n//        />\n// <label htmlFor=\"category\">Category:</label>\n// <input\n//          type=\"text\"\n//          name=\"category\"\n//          value={category}\n//          onChange={this.handleInputChange}\n//        />\n// <button type=\"submit\" style={{ boxShadow: \"none\", backgroundColor: \"#05FF13\"}}>{editingId ? 'Update' : 'Create'} Note</button>\n// </form>\n// ) : (\n// <div>\n// <h2>Edit Note</h2>\n// <form onSubmit={this.handleFormSubmit}>\n// <label htmlFor=\"title\">Title:</label>\n// <input\n//              type=\"text\"\n//              name=\"title\"\n//              value={title}\n//              onChange={this.handleInputChange}\n//            />\n// <label htmlFor=\"content\">Content:</label>\n// <input\n//              type=\"text\"\n//              name=\"content\"\n//              value={content}\n//              onChange={this.handleInputChange}\n//            />\n// <label htmlFor=\"category\">Category:</label>\n// <input\n//              type=\"text\"\n//              name=\"category\"\n//              value={category}\n//              onChange={this.handleInputChange}\n//            />\n// <button type=\"submit\">Update Note</button>\n// <button onClick={() => this.setState({ editingId: null, title: '', content: '', category: '' })}>Cancel</button>\n// </form>\n// </div>\n// )}\n// {loading ? (\n// <p>Loading...</p>\n// ) : (\n// <table style={{ width: \"100%\", textAlign: \"left\" , border: \"1px solid #000\"}}>\n// <thead>\n// <tr>\n// <th>Title</th>\n// <th>Content</th>\n// <th>Category</th>\n// <th>Actions</th>\n// </tr>\n// </thead>\n// <tbody >\n// {data.map(item => (\n// <tr style={{ border: \"1px solid #000\" }} key={item.id}>\n// <td>{item.title}</td>\n// <td>{item.content}</td>\n// <td>{item.category}</td>\n// <td>\n// <button onClick={() => this.handleEditClick(item.id, item.title, item.content, item.category)}>Edit</button>\n// <button onClick={() => this.deleteData(item.id)}>Delete</button>\n// </td>\n// </tr>\n// ))}\n// </tbody>\n// </table>\n// )}\n\n// <Login/>\n// </div>\n// );\n// }\n// }\n\n// export default App;\n\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Route, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Route","App","render"],"sources":["/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/App.js"],"sourcesContent":["\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// import Login from './components/login/login';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false,\n//     title: \"\",\n//     content: \"\",\n//     category: \"\",\n//     editingId: null\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     if (window.confirm('Are you sure you want to update this item?')) {\n//     axios.patch(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//         this.setState({ editingId: null, title: '', content: '', category: '' });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//     }\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to permanently delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n  \n//   handleInputChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   handleFormSubmit = (event) => {\n//     event.preventDefault();\n//     if (this.state.editingId) {\n//       this.updateData(this.state.editingId, { title: this.state.title, content: this.state.content, category: this.state.category });\n//     } else {\n//       this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n//     }\n//   };\n  \n//   handleEditClick = (id, title, content, category) => {\n//     this.setState({ editingId: id, title, content, category });\n//   };\n\n//   render() {\n//   const { data, loading, title, content, category, editingId } = this.state;\n//   return (\n//     <div>\n//       {!editingId ? (\n//         <form onSubmit={this.handleFormSubmit}>\n//           <label\n// htmlFor=\"title\">Title:</label>\n// <input\n//          type=\"text\"\n//          name=\"title\"\n//          value={title}\n//          onChange={this.handleInputChange}\n//        />\n// <label htmlFor=\"content\">Content:</label>\n// <input\n//          type=\"text\"\n//          name=\"content\"\n//          value={content}\n//          onChange={this.handleInputChange}\n//        />\n// <label htmlFor=\"category\">Category:</label>\n// <input\n//          type=\"text\"\n//          name=\"category\"\n//          value={category}\n//          onChange={this.handleInputChange}\n//        />\n// <button type=\"submit\" style={{ boxShadow: \"none\", backgroundColor: \"#05FF13\"}}>{editingId ? 'Update' : 'Create'} Note</button>\n// </form>\n// ) : (\n// <div>\n// <h2>Edit Note</h2>\n// <form onSubmit={this.handleFormSubmit}>\n// <label htmlFor=\"title\">Title:</label>\n// <input\n//              type=\"text\"\n//              name=\"title\"\n//              value={title}\n//              onChange={this.handleInputChange}\n//            />\n// <label htmlFor=\"content\">Content:</label>\n// <input\n//              type=\"text\"\n//              name=\"content\"\n//              value={content}\n//              onChange={this.handleInputChange}\n//            />\n// <label htmlFor=\"category\">Category:</label>\n// <input\n//              type=\"text\"\n//              name=\"category\"\n//              value={category}\n//              onChange={this.handleInputChange}\n//            />\n// <button type=\"submit\">Update Note</button>\n// <button onClick={() => this.setState({ editingId: null, title: '', content: '', category: '' })}>Cancel</button>\n// </form>\n// </div>\n// )}\n// {loading ? (\n// <p>Loading...</p>\n// ) : (\n// <table style={{ width: \"100%\", textAlign: \"left\" , border: \"1px solid #000\"}}>\n// <thead>\n// <tr>\n// <th>Title</th>\n// <th>Content</th>\n// <th>Category</th>\n// <th>Actions</th>\n// </tr>\n// </thead>\n// <tbody >\n// {data.map(item => (\n// <tr style={{ border: \"1px solid #000\" }} key={item.id}>\n// <td>{item.title}</td>\n// <td>{item.content}</td>\n// <td>{item.category}</td>\n// <td>\n// <button onClick={() => this.handleEditClick(item.id, item.title, item.content, item.category)}>Edit</button>\n// <button onClick={() => this.deleteData(item.id)}>Delete</button>\n// </td>\n// </tr>\n// ))}\n// </tbody>\n// </table>\n// )}\n\n// <Login/>\n// </div>\n// );\n// }\n// }\n\n// export default App;\n\nimport React,{Component} from \"react\";\nimport { Route } from \"react-router-dom\";\nclass App extends Component{\n  render(){\n    return(\n      <div>\n        <Route></Route>\n      </div>\n    )\n  }\n}\n\nexport default App;"],"mappingsrC,SAASC,KAAK,QAAQ,kBAAkB;AAAC;AACzC,MAAMC,GAAG,SAASF,SAAS;EACzBG,MAAM,GAAE;IACN,oBACE;MAAA,uBACE,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACX;EAEV;AACF;AAEA,eAAeD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}