{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n\n// // const App = () => {\n// //   const [notes, setNotes] = useState([]);\n// //   const [loading, setLoading] = useState(false);\n// //   const [error, setError] = useState(false);\n// //   const [newNote, setNewNote] = useState({ content: '', category: '' });\n// //   const [updateNote, setUpdateNote] = useState({ id: '', content: '', category: '' });\n// //   const [editing, setEditing] = useState(false);\n\n// //   useEffect(() => {\n// //     const fetchNotes = async () => {\n// //       setLoading(true);\n// //       setError(false);\n// //       try {\n// //         const res = await axios.get('http://127.0.0.1:8000/api/notes/');\n// //         setNotes(res.data.notes);\n// //         setLoading(false);\n// //       } catch (err) {\n// //         setError(true);\n// //         setLoading(false);\n// //       }\n// //     };\n// //     fetchNotes();\n// //   }, []);\n\n// //   const handleCreateNote = async () => {\n// //     try {\n// //       const res = await axios.post('http://127.0.0.1:8000/api/notes/', {\n// //         content: newNote.content,\n// //         category: newNote.category,\n// //       });\n// //       setNotes([...notes, res.data]);\n// //       setNewNote({ content: '', category: '' });\n// //     } catch (err) {\n// //       console.error(err);\n// //     }\n// //   };\n\n// //   const handleUpdateNote = async () => {\n// //     try {\n// //       const res = await axios.put(`http://127.0.0.1:8000/api/notes/${updateNote.id}/`, {\n// //         content: updateNote.content,\n// //         category: updateNote.category,\n// //       });\n// //       const updatedNotes = notes.map((note) => (note.id === updateNote.id ? res.data : note));\n// //       setNotes(updatedNotes);\n// //       setUpdateNote({ id: '', content: '', category: '' });\n// //       setEditing(false);\n// //     } catch (err) {\n// //       console.error(err);\n// //     }\n// //   };\n\n// //   const handleDeleteNote = async (id) => {\n// //     try {\n// //       await axios.delete(`http://127.0.0.1:8000/api/notes/${id}/`);\n// //       setNotes(notes.filter((note) => note.id !== id));\n// //     } catch (err) {\n// //       console.error(err);\n// //     }\n// //   };\n\n// //   const handleEditClick = (note) => {\n// //     setUpdateNote({ id: note.id, content: note.content, category: note.category });\n// //     setEditing(true);\n// //   };\n\n// //   const renderUpdateForm = () => {\n// //     return (\n// //       <form>\n// //         <input type=\"text\" placeholder=\"ID\" value={updateNote.id} disabled />\n// //         <input\n// //           type=\"text\"\n// //           placeholder=\"Content\"\n// //           value={updateNote.content}\n// //           onChange={(e) => setUpdateNote({ ...updateNote, content: e.target.value })}/>\n// // <input\n// // type=\"text\"\n// // placeholder=\"Category\"\n// // value={updateNote.category}\n// // onChange={(e) => setUpdateNote({ ...updateNote, category: e.target.value })}\n// // />\n// // <button onClick={handleUpdateNote}>Save</button>\n// // </form>\n// // );\n// // };\n\n// // return (\n// // <div>\n// // {loading && <div>Loading...</div>}\n// // {error && <div>An error occurred while fetching the notes.</div>}\n// // {editing ? (\n// // renderUpdateForm()\n// // ) : (\n// // <form>\n// // <input\n// // type=\"text\"\n// // placeholder=\"Content\"\n// // value={newNote.content}\n// // onChange={(e) => setNewNote({ ...newNote, content: e.target.value })}\n// // />\n// // <input\n// // type=\"text\"\n// // placeholder=\"Category\"\n// // value={newNote.category}\n// // onChange={(e) => setNewNote({ ...newNote, category: e.target.value })}\n// // />\n// // <button onClick={handleCreateNote}>Create Note</button>\n// // </form>\n// // )}\n// // {notes.map((note) => (\n// // <div key={note.id}>\n// // <h3>{note.content}</h3>\n// // <p>{note.category}</p>\n// // <button onClick={() => handleEditClick(note)}>Edit</button>\n// // <button onClick={() => handleDeleteNote(note.id)}>Delete</button>\n// // </div>\n// // ))}\n// // </div>\n// // );\n// // };\n\n// // export default App;\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n\n//   render() {\n//     const { data, loading } = this.state;\n\n//     return (\n//       <div>\n//         {loading && <p>Loading...</p>}\n//         <ul>\n//           {data.map(item => (\n//             <li key={item}>\n//               {item.content}\n//               <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n//               <button onClick={() => this.deleteData(item.id)}>Delete</button>\n\n//             </li>\n//           ))}\n//         </ul>\n//         <button onClick={() => this.createData({ name: 'New Name' })}>Create</button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      loading: false,\n      title: '',\n      content: '',\n      category: ''\n    };\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.createData({\n        title: this.state.title,\n        content: this.state.content,\n        category: this.state.category\n      });\n    };\n  }\n  // ... other code\n\n  render() {\n    const {\n      data,\n      loading,\n      title,\n      content,\n      category\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: title,\n          onChange: this.handleInputChange,\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"content\",\n          value: content,\n          onChange: this.handleInputChange,\n          placeholder: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          value: category,\n          onChange: this.handleInputChange,\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \"// ... other code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["App","Component","state","data","loading","title","content","category","handleInputChange","event","name","value","target","setState","handleFormSubmit","preventDefault","createData","render"],"sources":["/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/App.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\n// // import axios from 'axios';\n\n// // const App = () => {\n// //   const [notes, setNotes] = useState([]);\n// //   const [loading, setLoading] = useState(false);\n// //   const [error, setError] = useState(false);\n// //   const [newNote, setNewNote] = useState({ content: '', category: '' });\n// //   const [updateNote, setUpdateNote] = useState({ id: '', content: '', category: '' });\n// //   const [editing, setEditing] = useState(false);\n\n// //   useEffect(() => {\n// //     const fetchNotes = async () => {\n// //       setLoading(true);\n// //       setError(false);\n// //       try {\n// //         const res = await axios.get('http://127.0.0.1:8000/api/notes/');\n// //         setNotes(res.data.notes);\n// //         setLoading(false);\n// //       } catch (err) {\n// //         setError(true);\n// //         setLoading(false);\n// //       }\n// //     };\n// //     fetchNotes();\n// //   }, []);\n\n// //   const handleCreateNote = async () => {\n// //     try {\n// //       const res = await axios.post('http://127.0.0.1:8000/api/notes/', {\n// //         content: newNote.content,\n// //         category: newNote.category,\n// //       });\n// //       setNotes([...notes, res.data]);\n// //       setNewNote({ content: '', category: '' });\n// //     } catch (err) {\n// //       console.error(err);\n// //     }\n// //   };\n\n// //   const handleUpdateNote = async () => {\n// //     try {\n// //       const res = await axios.put(`http://127.0.0.1:8000/api/notes/${updateNote.id}/`, {\n// //         content: updateNote.content,\n// //         category: updateNote.category,\n// //       });\n// //       const updatedNotes = notes.map((note) => (note.id === updateNote.id ? res.data : note));\n// //       setNotes(updatedNotes);\n// //       setUpdateNote({ id: '', content: '', category: '' });\n// //       setEditing(false);\n// //     } catch (err) {\n// //       console.error(err);\n// //     }\n// //   };\n\n// //   const handleDeleteNote = async (id) => {\n// //     try {\n// //       await axios.delete(`http://127.0.0.1:8000/api/notes/${id}/`);\n// //       setNotes(notes.filter((note) => note.id !== id));\n// //     } catch (err) {\n// //       console.error(err);\n// //     }\n// //   };\n\n// //   const handleEditClick = (note) => {\n// //     setUpdateNote({ id: note.id, content: note.content, category: note.category });\n// //     setEditing(true);\n// //   };\n\n// //   const renderUpdateForm = () => {\n// //     return (\n// //       <form>\n// //         <input type=\"text\" placeholder=\"ID\" value={updateNote.id} disabled />\n// //         <input\n// //           type=\"text\"\n// //           placeholder=\"Content\"\n// //           value={updateNote.content}\n// //           onChange={(e) => setUpdateNote({ ...updateNote, content: e.target.value })}/>\n// // <input\n// // type=\"text\"\n// // placeholder=\"Category\"\n// // value={updateNote.category}\n// // onChange={(e) => setUpdateNote({ ...updateNote, category: e.target.value })}\n// // />\n// // <button onClick={handleUpdateNote}>Save</button>\n// // </form>\n// // );\n// // };\n\n// // return (\n// // <div>\n// // {loading && <div>Loading...</div>}\n// // {error && <div>An error occurred while fetching the notes.</div>}\n// // {editing ? (\n// // renderUpdateForm()\n// // ) : (\n// // <form>\n// // <input\n// // type=\"text\"\n// // placeholder=\"Content\"\n// // value={newNote.content}\n// // onChange={(e) => setNewNote({ ...newNote, content: e.target.value })}\n// // />\n// // <input\n// // type=\"text\"\n// // placeholder=\"Category\"\n// // value={newNote.category}\n// // onChange={(e) => setNewNote({ ...newNote, category: e.target.value })}\n// // />\n// // <button onClick={handleCreateNote}>Create Note</button>\n// // </form>\n// // )}\n// // {notes.map((note) => (\n// // <div key={note.id}>\n// // <h3>{note.content}</h3>\n// // <p>{note.category}</p>\n// // <button onClick={() => handleEditClick(note)}>Edit</button>\n// // <button onClick={() => handleDeleteNote(note.id)}>Delete</button>\n// // </div>\n// // ))}\n// // </div>\n// // );\n// // };\n\n// // export default App;\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n    \n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n  \n//   render() {\n//     const { data, loading } = this.state;\n\n//     return (\n//       <div>\n//         {loading && <p>Loading...</p>}\n//         <ul>\n//           {data.map(item => (\n//             <li key={item}>\n//               {item.content}\n//               <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n//               <button onClick={() => this.deleteData(item.id)}>Delete</button>\n\n//             </li>\n//           ))}\n//         </ul>\n//         <button onClick={() => this.createData({ name: 'New Name' })}>Create</button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\nclass App extends Component {\n  state = {\n    data: [],\n    loading: false,\n    title: '',\n    content: '',\n    category: '',\n  };\n\n  // ... other code\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n  };\n\n  // ... other code\n\n  render() {\n    const { data, loading, title, content, category } = this.state;\n\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <input type=\"text\" name=\"title\" value={title} onChange={this.handleInputChange} placeholder=\"Title\" />\n          <input type=\"text\" name=\"content\" value={content} onChange={this.handleInputChange} placeholder=\"Content\" />\n          <input type=\"text\" name=\"category\" value={category} onChange={this.handleInputChange} placeholder=\"Category\" />\n          <button type=\"submit\">Create</button>\n        </form>\n        {loading && <p>Loading...</p>}\n        <ul>\n          // ... other code\n        </ul>\n      </div>\n    );\n  }\n}\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,MAAMA,GAAG,SAASC,SAAS,CAAC;EAAA;IAAA;IAAA,KAC1BC,KAAK,GAAG;MACNC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACZ,CAAC;IAAA,KAIDC,iBAAiB,GAAIC,KAAK,IAAK;MAC7B,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;MACpC,IAAI,CAACC,QAAQ,CAAC;QAAE,CAACH,IAAI,GAAGC;MAAM,CAAC,CAAC;IAClC,CAAC;IAAA,KAEDG,gBAAgB,GAAIL,KAAK,IAAK;MAC5BA,KAAK,CAACM,cAAc,EAAE;MACtB,IAAI,CAACC,UAAU,CAAC;QAAEX,KAAK,EAAE,IAAI,CAACH,KAAK,CAACG,KAAK;QAAEC,OAAO,EAAE,IAAI,CAACJ,KAAK,CAACI,OAAO;QAAEC,QAAQ,EAAE,IAAI,CAACL,KAAK,CAACK;MAAS,CAAC,CAAC;IAC1G,CAAC;EAAA;EAED;;EAEAU,MAAM,GAAG;IACP,MAAM;MAAEd,IAAI;MAAEC,OAAO;MAAEC,KAAK;MAAEC,OAAO;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACL,KAAK;IAE9D,oBACE;MAAA,wBACE;QAAM,QAAQ,EAAE,IAAI,CAACY,gBAAiB;QAAA,wBACpC;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,OAAO;UAAC,KAAK,EAAET,KAAM;UAAC,QAAQ,EAAE,IAAI,CAACG,iBAAkB;UAAC,WAAW,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACtG;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,SAAS;UAAC,KAAK,EAAEF,OAAQ;UAAC,QAAQ,EAAE,IAAI,CAACE,iBAAkB;UAAC,WAAW,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAG,eAC5G;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,UAAU;UAAC,KAAK,EAAED,QAAS;UAAC,QAAQ,EAAE,IAAI,CAACC,iBAAkB;UAAC,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAC/G;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAChC,EACNJ,OAAO,iBAAI;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI,eAC7B;QAAA,UAAI;MAEJ;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}