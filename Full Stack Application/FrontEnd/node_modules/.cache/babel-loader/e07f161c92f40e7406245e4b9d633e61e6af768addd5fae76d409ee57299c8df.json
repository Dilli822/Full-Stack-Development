{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/App.js\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(false);\n//   const [newNote, setNewNote] = useState({ content: '', category: '' });\n//   const [updateNote, setUpdateNote] = useState({ id: '', content: '', category: '' });\n//   const [editing, setEditing] = useState(false);\n\n//   useEffect(() => {\n//     const fetchNotes = async () => {\n//       setLoading(true);\n//       setError(false);\n//       try {\n//         const res = await axios.get('http://127.0.0.1:8000/api/notes/');\n//         setNotes(res.data.notes);\n//         setLoading(false);\n//       } catch (err) {\n//         setError(true);\n//         setLoading(false);\n//       }\n//     };\n//     fetchNotes();\n//   }, []);\n\n//   const handleCreateNote = async () => {\n//     try {\n//       const res = await axios.post('http://127.0.0.1:8000/api/notes/', {\n//         content: newNote.content,\n//         category: newNote.category,\n//       });\n//       setNotes([...notes, res.data]);\n//       setNewNote({ content: '', category: '' });\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleUpdateNote = async () => {\n//     try {\n//       const res = await axios.put(`http://127.0.0.1:8000/api/notes/${updateNote.id}/`, {\n//         content: updateNote.content,\n//         category: updateNote.category,\n//       });\n//       const updatedNotes = notes.map((note) => (note.id === updateNote.id ? res.data : note));\n//       setNotes(updatedNotes);\n//       setUpdateNote({ id: '', content: '', category: '' });\n//       setEditing(false);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleDeleteNote = async (id) => {\n//     try {\n//       await axios.delete(`http://127.0.0.1:8000/api/notes/${id}/`);\n//       setNotes(notes.filter((note) => note.id !== id));\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleEditClick = (note) => {\n//     setUpdateNote({ id: note.id, content: note.content, category: note.category });\n//     setEditing(true);\n//   };\n\n//   const renderUpdateForm = () => {\n//     return (\n//       <form>\n//         <input type=\"text\" placeholder=\"ID\" value={updateNote.id} disabled />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Content\"\n//           value={updateNote.content}\n//           onChange={(e) => setUpdateNote({ ...updateNote, content: e.target.value })}/>\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={updateNote.category}\n// onChange={(e) => setUpdateNote({ ...updateNote, category: e.target.value })}\n// />\n// <button onClick={handleUpdateNote}>Save</button>\n// </form>\n// );\n// };\n\n// return (\n// <div>\n// {loading && <div>Loading...</div>}\n// {error && <div>An error occurred while fetching the notes.</div>}\n// {editing ? (\n// renderUpdateForm()\n// ) : (\n// <form>\n// <input\n// type=\"text\"\n// placeholder=\"Content\"\n// value={newNote.content}\n// onChange={(e) => setNewNote({ ...newNote, content: e.target.value })}\n// />\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={newNote.category}\n// onChange={(e) => setNewNote({ ...newNote, category: e.target.value })}\n// />\n// <button onClick={handleCreateNote}>Create Note</button>\n// </form>\n// )}\n// {notes.map((note) => (\n// <div key={note.id}>\n// <h3>{note.content}</h3>\n// <p>{note.category}</p>\n// <button onClick={() => handleEditClick(note)}>Edit</button>\n// <button onClick={() => handleDeleteNote(note.id)}>Delete</button>\n// </div>\n// ))}\n// </div>\n// );\n// };\n\n// export default App;\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n\n//   render() {\n//     const { data, loading } = this.state;\n\n//     return (\n//       <div>\n//         {loading && <p>Loading...</p>}\n//         <ul>\n//           {data.map(item => (\n//             <li key={item}>\n//               {item.content}\n//               <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n//               <button onClick={() => this.deleteData(item.id)}>Delete</button>\n\n//             </li>\n//           ))}\n//         </ul>\n//         <button onClick={() => this.createData({ name: 'New Name' })}>Create</button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false,\n//     title: \"\",\n//     content: \"\",\n//     category: \"\"\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n\n//   handleInputChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   handleFormSubmit = (event) => {\n//     event.preventDefault();\n//     this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n//   };\n\n//   render() {\n//     const { data, loading } = this.state;\n\n//     return (\n//       <div>\n//         <form onSubmit={this.handleFormSubmit}>\n//           <label>\n//             Title:\n//             <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <label>\n//             Content:\n//             <input type=\"text\" name=\"content\" value={this.state.content} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <label>\n//             Category:\n//             <input type=\"text\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <button type=\"submit\">Save</button></form>\n\n//           <div>\n//           <ul>\n//           {data.map(item => (\n//             <li key={item}>\n//               {item.content}\n//               <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n//               <button onClick={() => this.deleteData(item.id)}>Delete</button>\n\n//             </li>\n//           ))}\n//         </ul>\n//           </div>\n//           </div>\n// );\n// }\n// }\n\n// export default App;\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      loading: false,\n      title: \"\",\n      content: \"\",\n      category: \"\",\n      editingId: null\n    };\n    this.getData = () => {\n      this.setState({\n        loading: true\n      });\n      axios.get('http://127.0.0.1:8000/api/notes/').then(res => {\n        console.log(res.data.notes);\n        this.setState({\n          data: res.data.notes,\n          loading: false\n        });\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          loading: false\n        });\n      });\n    };\n    this.createData = newData => {\n      axios.post('http://127.0.0.1:8000/api/notes/', newData).then(res => {\n        this.getData();\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n    this.updateData = (id, updatedData) => {\n      axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData).then(res => {\n        this.getData();\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n    this.deleteData = id => {\n      if (window.confirm('Are you sure you want to delete this item?')) {\n        axios.delete(`http://127.0.0.1:8000/api/notes/${id}`).then(res => {\n          this.getData();\n        }).catch(err => {\n          console.error(err);\n        });\n      }\n    };\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      if (this.state.editingId) {\n        this.updateData(this.state.editingId, {\n          title: this.state.title,\n          content: this.state.content,\n          category: this.state.category\n        });\n      } else {\n        this.createData({\n          title: this.state.title,\n          content: this.state.content,\n          category: this.state.category\n        });\n      }\n    };\n    this.handleEditClick = (id, title, content, category) => {\n      this.setState({\n        editingId: id,\n        title,\n        content,\n        category\n      });\n    };\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    const {\n      data,\n      loading,\n      title,\n      content,\n      category,\n      editingId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!editingId ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: title,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"content\",\n            value: content,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Category:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"category\",\n            value: category,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 3\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: () => this.handleUpdateData(editingId),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: title,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"content\",\n            value: content,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Category:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"category\",\n            value: category,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setState({\n            editingId: null,\n            title: '',\n            content: '',\n            category: ''\n          }),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.title, \" - \", item.content, \" - \", item.category, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.handleEditClick(item.id, item.title, item.content, item.category),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.deleteData(item.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 3\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 3\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 3\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","axios","App","state","data","loading","title","content","category","editingId","getData","setState","get","then","res","console","log","notes","catch","err","error","createData","newData","post","updateData","id","updatedData","put","deleteData","window","confirm","delete","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","handleEditClick","componentDidMount","render","handleUpdateData","map","item"],"sources":["/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(false);\n//   const [newNote, setNewNote] = useState({ content: '', category: '' });\n//   const [updateNote, setUpdateNote] = useState({ id: '', content: '', category: '' });\n//   const [editing, setEditing] = useState(false);\n\n//   useEffect(() => {\n//     const fetchNotes = async () => {\n//       setLoading(true);\n//       setError(false);\n//       try {\n//         const res = await axios.get('http://127.0.0.1:8000/api/notes/');\n//         setNotes(res.data.notes);\n//         setLoading(false);\n//       } catch (err) {\n//         setError(true);\n//         setLoading(false);\n//       }\n//     };\n//     fetchNotes();\n//   }, []);\n\n//   const handleCreateNote = async () => {\n//     try {\n//       const res = await axios.post('http://127.0.0.1:8000/api/notes/', {\n//         content: newNote.content,\n//         category: newNote.category,\n//       });\n//       setNotes([...notes, res.data]);\n//       setNewNote({ content: '', category: '' });\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleUpdateNote = async () => {\n//     try {\n//       const res = await axios.put(`http://127.0.0.1:8000/api/notes/${updateNote.id}/`, {\n//         content: updateNote.content,\n//         category: updateNote.category,\n//       });\n//       const updatedNotes = notes.map((note) => (note.id === updateNote.id ? res.data : note));\n//       setNotes(updatedNotes);\n//       setUpdateNote({ id: '', content: '', category: '' });\n//       setEditing(false);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleDeleteNote = async (id) => {\n//     try {\n//       await axios.delete(`http://127.0.0.1:8000/api/notes/${id}/`);\n//       setNotes(notes.filter((note) => note.id !== id));\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleEditClick = (note) => {\n//     setUpdateNote({ id: note.id, content: note.content, category: note.category });\n//     setEditing(true);\n//   };\n\n//   const renderUpdateForm = () => {\n//     return (\n//       <form>\n//         <input type=\"text\" placeholder=\"ID\" value={updateNote.id} disabled />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Content\"\n//           value={updateNote.content}\n//           onChange={(e) => setUpdateNote({ ...updateNote, content: e.target.value })}/>\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={updateNote.category}\n// onChange={(e) => setUpdateNote({ ...updateNote, category: e.target.value })}\n// />\n// <button onClick={handleUpdateNote}>Save</button>\n// </form>\n// );\n// };\n\n// return (\n// <div>\n// {loading && <div>Loading...</div>}\n// {error && <div>An error occurred while fetching the notes.</div>}\n// {editing ? (\n// renderUpdateForm()\n// ) : (\n// <form>\n// <input\n// type=\"text\"\n// placeholder=\"Content\"\n// value={newNote.content}\n// onChange={(e) => setNewNote({ ...newNote, content: e.target.value })}\n// />\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={newNote.category}\n// onChange={(e) => setNewNote({ ...newNote, category: e.target.value })}\n// />\n// <button onClick={handleCreateNote}>Create Note</button>\n// </form>\n// )}\n// {notes.map((note) => (\n// <div key={note.id}>\n// <h3>{note.content}</h3>\n// <p>{note.category}</p>\n// <button onClick={() => handleEditClick(note)}>Edit</button>\n// <button onClick={() => handleDeleteNote(note.id)}>Delete</button>\n// </div>\n// ))}\n// </div>\n// );\n// };\n\n// export default App;\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n    \n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n  \n//   render() {\n//     const { data, loading } = this.state;\n\n//     return (\n//       <div>\n//         {loading && <p>Loading...</p>}\n//         <ul>\n//           {data.map(item => (\n//             <li key={item}>\n//               {item.content}\n//               <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n//               <button onClick={() => this.deleteData(item.id)}>Delete</button>\n\n//             </li>\n//           ))}\n//         </ul>\n//         <button onClick={() => this.createData({ name: 'New Name' })}>Create</button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false,\n//     title: \"\",\n//     content: \"\",\n//     category: \"\"\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n    \n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n  \n//   handleInputChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   handleFormSubmit = (event) => {\n//     event.preventDefault();\n//     this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n//   };\n  \n//   render() {\n//     const { data, loading } = this.state;\n\n//     return (\n//       <div>\n//         <form onSubmit={this.handleFormSubmit}>\n//           <label>\n//             Title:\n//             <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <label>\n//             Content:\n//             <input type=\"text\" name=\"content\" value={this.state.content} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <label>\n//             Category:\n//             <input type=\"text\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <button type=\"submit\">Save</button></form>\n\n//           <div>\n//           <ul>\n//           {data.map(item => (\n//             <li key={item}>\n//               {item.content}\n//               <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n//               <button onClick={() => this.deleteData(item.id)}>Delete</button>\n\n//             </li>\n//           ))}\n//         </ul>\n//           </div>\n//           </div>\n// );\n// }\n// }\n\n// export default App;\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    data: [],\n    loading: false,\n    title: \"\",\n    content: \"\",\n    category: \"\",\n    editingId: null\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    this.setState({ loading: true });\n    axios.get('http://127.0.0.1:8000/api/notes/')\n    \n      .then(res => {\n        console.log(res.data.notes);\n        this.setState({ data: res.data.notes, loading: false });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  createData = (newData) => {\n    axios.post('http://127.0.0.1:8000/api/notes/', newData)\n      .then(res => {\n        this.getData();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  updateData = (id, updatedData) => {\n    axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n      .then(res => {\n        this.getData();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  deleteData = (id) => {\n    if (window.confirm('Are you sure you want to delete this item?')) {\n      axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n        .then(res => {\n          this.getData();\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  };\n  \n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.editingId) {\n      this.updateData(this.state.editingId, { title: this.state.title, content: this.state.content, category: this.state.category });\n    } else {\n      this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n    }\n  };\n  \n  handleEditClick = (id, title, content, category) => {\n    this.setState({ editingId: id, title, content, category });\n  };\n\n  render() {\n  const { data, loading, title, content, category, editingId } = this.state;\n  return (\n  <div>\n  {!editingId ? (\n  <form onSubmit={this.handleFormSubmit}>\n  <label>\n  Title:\n  <input type=\"text\" name=\"title\" value={title} onChange={this.handleInputChange} />\n  </label>\n  <br />\n  <label>\n  Content:\n  <input type=\"text\" name=\"content\" value={content} onChange={this.handleInputChange} />\n  </label>\n  <br />\n  <label>\n  Category:\n  <input type=\"text\" name=\"category\" value={category} onChange={this.handleInputChange} />\n  </label>\n  <br />\n  <button type=\"submit\">Save</button>\n  </form>\n  ) : (\n  <form onSubmit={() => this.handleUpdateData(editingId)}>\n  <label>\n  Title:\n  <input type=\"text\" name=\"title\" value={title} onChange={this.handleInputChange} />\n  </label>\n  <br />\n  <label>\n  Content:\n  <input type=\"text\" name=\"content\" value={content} onChange={this.handleInputChange} />\n  </label>\n  <br />\n  <label>\n  Category:\n  <input type=\"text\" name=\"category\" value={category} onChange={this.handleInputChange} />\n  </label>\n  <br />\n  <button type=\"submit\">Update</button>\n  <button onClick={() => this.setState({ editingId: null, title: '', content: '', category: '' })}>\n  Cancel\n  </button>\n  </form>\n  )}\n  <div>\n  <ul>\n  {data.map(item => (\n  <li key={item.id}>\n  {item.title} - {item.content} - {item.category}\n  <button onClick={() => this.handleEditClick(item.id, item.title, item.content, item.category)}>Edit</button>\n  <button onClick={() => this.deleteData(item.id)}>Delete</button>\n  </li>\n  ))}\n  </ul>\n  </div>\n  </div>\n  );\n  }\n}\n  \nexport default App;\n  \n  "],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}