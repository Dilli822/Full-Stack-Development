{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/components/crud/crud.js\";\n// //I have received token from server side now send same received token when calling restful apis so that restful api will allow to use crud operation in below react code.\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// const token = localStorage.getItem('token');\n// const isLoggedIn = token && !isTokenExpired(token);\n\n// class Crud extends Component {\n//   state = {\n//     data: [],\n//     loading: false,\n//     title: \"\",\n//     content: \"\",\n//     category: \"\",\n//     editingId: null,\n//   };\n\n//   componentDidMount() {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/authapp/api/notes/')\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(\"error \", err);\n//         this.setState({ loading: false });\n//       });\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/authapp/api/notes/')\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(\"error \", err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/authapp/api/notes/',newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     if (window.confirm('Are you sure you want to update this item?')) {\n//     axios.patch(`http://127.0.0.1:8000/authapp/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//         this.setState({ editingId: null, title: '', content: '', category: '' });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//     }\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to permanently delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/authapp/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n\n//   handleInputChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   handleFormSubmit = (event) => {\n//     event.preventDefault();\n//     if (this.state.editingId) {\n//       this.updateData(this.state.editingId, { title: this.state.title, content: this.state.content, category: this.state.category });\n//     } else {\n//       this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n//     }\n//   };\n\n//   handleEditClick = (id, title, content, category) => {\n//     this.setState({ editingId: id, title, content, category });\n//   };\n\n//   render() {\n//     const token = localStorage.getItem('token');\n\n//   const { data, loading, title, content, category, editingId } = this.state;\n//   return isLoggedIn ?(\n//     <div>\n//       <div style={{width: \"200px\", fontSize: \"10px\"}}>{token}</div>\n//       {!editingId ? (\n//         <form onSubmit={this.handleFormSubmit}>\n//           <label\n// htmlFor=\"title\">Title:</label>\n// <input\n//          type=\"text\"\n//          name=\"title\"\n//          value={title}\n//          onChange={this.handleInputChange}\n//        />\n// <label htmlFor=\"content\">Content:</label>\n// <input\n//          type=\"text\"\n//          name=\"content\"\n//          value={content}\n//          onChange={this.handleInputChange}\n//        />\n// <label htmlFor=\"category\">Category:</label>\n// <input\n//          type=\"text\"\n//          name=\"category\"\n//          value={category}\n//          onChange={this.handleInputChange}\n//        />\n// <button type=\"submit\" style={{ boxShadow: \"none\", backgroundColor: \"#05FF13\"}}>{editingId ? 'Update' : 'Create'} Note</button>\n// </form>\n// ) : (\n// <div>\n// <h2>Edit Note</h2>\n// <form onSubmit={this.handleFormSubmit}>\n// <label htmlFor=\"title\">Title:</label>\n// <input\n//              type=\"text\"\n//              name=\"title\"\n//              value={title}\n//              onChange={this.handleInputChange}\n//            />\n// <label htmlFor=\"content\">Content:</label>\n// <input\n//              type=\"text\"\n//              name=\"content\"\n//              value={content}\n//              onChange={this.handleInputChange}\n//            />\n// <label htmlFor=\"category\">Category:</label>\n// <input\n//              type=\"text\"\n//              name=\"category\"\n//              value={category}\n//              onChange={this.handleInputChange}\n//            />\n// <button type=\"submit\">Update Note</button>\n// <button onClick={() => this.setState({ editingId: null, title: '', content: '', category: '' })}>Cancel</button>\n// </form>\n// </div>\n// )}\n// {loading ? (\n// <p>Loading...</p>\n// ) : (\n// <table style={{ width: \"100%\", textAlign: \"left\" , border: \"1px solid #000\"}}>\n// <thead>\n// <tr>\n// <th>Title</th>\n// <th>Content</th>\n// <th>Category</th>\n// <th>Actions</th>\n// </tr>\n// </thead>\n// <tbody >\n// {data.map(item => (\n// <tr style={{ border: \"1px solid #000\" }} key={item.id}>\n// <td>{item.title}</td>\n// <td>{item.content}</td>\n// <td>{item.category}</td>\n// <td>\n// <button onClick={() => this.handleEditClick(item.id, item.title, item.content, item.category)}>Edit</button>\n// <button onClick={() => this.deleteData(item.id)}>Delete</button>\n// </td>\n// </tr>\n// ))}\n// </tbody>\n// </table>\n// )}\n\n// </div>\n\n// )\n// : (\n//   // render a message or redirect to a login page if user is not logged in\n//   <div>\n//     <h1>Please Log In</h1>\n//     <p>You need to be logged in to see this content.</p>\n//   </div>\n// );\n\n//   }\n// }\n\n// function isTokenExpired(token) {\n//   // implement token expiration check logic here\n//   return false; // placeholder implementation\n// }\n// export default Crud;\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem('token');\nconst isLoggedIn = token && !isTokenExpired(token);\nclass Crud extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      loading: false,\n      title: \"\",\n      content: \"\",\n      category: \"\",\n      editingId: null\n    };\n    this.getData = () => {\n      this.setState({\n        loading: true\n      });\n      axios.get('http://127.0.0.1:8000/authapp/api/notes/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        console.log(res.data.notes);\n        this.setState({\n          data: res.data.notes,\n          loading: false\n        });\n      }).catch(err => {\n        console.error(\"error \", err);\n        this.setState({\n          loading: false\n        });\n      });\n    };\n    this.createData = newData => {\n      axios.post('http://127.0.0.1:8000/authapp/api/notes/', newData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        this.getData();\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n    this.updateData = (id, updatedData) => {\n      if (window.confirm('Are you sure you want to update this item?')) {\n        axios.patch(`http://127.0.0.1:8000/authapp/api/notes/${id}`, updatedData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(res => {\n          this.getData();\n          this.setState({\n            editingId: null,\n            title: '',\n            content: '',\n            category: ''\n          });\n        }).catch(err => {\n          console.error(err);\n        });\n      }\n    };\n    this.deleteData = id => {\n      if (window.confirm('Are you sure you want to permanently delete this item?')) {\n        axios.delete(`http://127.0.0.1:8000/authapp/api/notes/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(res => {\n          this.getData();\n        }).catch(err => {\n          console.error(err);\n        });\n      }\n    };\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      if (this.state.editingId) {\n        this.updateData(this.state.editingId, {\n          title: this.state.title,\n          content: this.state.content,\n          category: this.state.category\n        });\n      } else {\n        this.createData({\n          title: this.state.title,\n          content: this.state.content,\n          category: this.state.category\n        });\n      }\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    axios.get('http://127.0.0.1:8000/authapp/api/notes/', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log(res.data.notes);\n      this.setState({\n        data: res.data.notes,\n        loading: false\n      });\n    }).catch(err => {\n      console.error(\"error \", err);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"200px\",\n            fontSize: \"10px\"\n          },\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 7\n        }, this), !editingId ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: title,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            children: \"Content:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"content\",\n            value: content,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"category\",\n            value: category,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              boxShadow: \"none\",\n              backgroundColor: \"#05FF13\"\n            },\n            children: [editingId ? 'Update' : 'Create', \" Note\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleFormSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              value: title,\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"content\",\n              children: \"Content:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"content\",\n              value: content,\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"category\",\n              value: category,\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Update Note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.setState({\n                editingId: null,\n                title: '',\n                content: '',\n                category: ''\n              }),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 1\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 1\n        }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: \"100%\",\n            textAlign: \"left\",\n            border: \"1px solid #000\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                border: \"1px solid #000\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.handleEditClick(item.id, item.title, item.content, item.category),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 1\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.deleteData(item.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 1\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 1\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 1\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), \") : ( // render a message or redirect to a login page if user is not logged in\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Please Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You need to be logged in to see this content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Crud;","map":{"version":3,"names":["React","Component","axios","token","localStorage","getItem","isLoggedIn","isTokenExpired","Crud","state","data","loading","title","content","category","editingId","getData","setState","get","headers","Authorization","then","res","console","log","notes","catch","err","error","createData","newData","post","updateData","id","updatedData","window","confirm","patch","deleteData","delete","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","componentDidMount","render","width","fontSize","boxShadow","backgroundColor","textAlign","border","map","item","handleEditClick"],"sources":["/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/components/crud/crud.js"],"sourcesContent":["// //I have received token from server side now send same received token when calling restful apis so that restful api will allow to use crud operation in below react code.\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// const token = localStorage.getItem('token');\n// const isLoggedIn = token && !isTokenExpired(token);\n\n// class Crud extends Component {\n//   state = {\n//     data: [],\n//     loading: false,\n//     title: \"\",\n//     content: \"\",\n//     category: \"\",\n//     editingId: null,\n//   };\n\n//   componentDidMount() {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/authapp/api/notes/')\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(\"error \", err);\n//         this.setState({ loading: false });\n//       });\n//   }\n  \n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/authapp/api/notes/')\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(\"error \", err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/authapp/api/notes/',newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     if (window.confirm('Are you sure you want to update this item?')) {\n//     axios.patch(`http://127.0.0.1:8000/authapp/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//         this.setState({ editingId: null, title: '', content: '', category: '' });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//     }\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to permanently delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/authapp/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n  \n//   handleInputChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   handleFormSubmit = (event) => {\n//     event.preventDefault();\n//     if (this.state.editingId) {\n//       this.updateData(this.state.editingId, { title: this.state.title, content: this.state.content, category: this.state.category });\n//     } else {\n//       this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n//     }\n//   };\n  \n//   handleEditClick = (id, title, content, category) => {\n//     this.setState({ editingId: id, title, content, category });\n//   };\n\n//   render() {\n//     const token = localStorage.getItem('token');\n\n//   const { data, loading, title, content, category, editingId } = this.state;\n//   return isLoggedIn ?(\n//     <div>\n//       <div style={{width: \"200px\", fontSize: \"10px\"}}>{token}</div>\n//       {!editingId ? (\n//         <form onSubmit={this.handleFormSubmit}>\n//           <label\n// htmlFor=\"title\">Title:</label>\n// <input\n//          type=\"text\"\n//          name=\"title\"\n//          value={title}\n//          onChange={this.handleInputChange}\n//        />\n// <label htmlFor=\"content\">Content:</label>\n// <input\n//          type=\"text\"\n//          name=\"content\"\n//          value={content}\n//          onChange={this.handleInputChange}\n//        />\n// <label htmlFor=\"category\">Category:</label>\n// <input\n//          type=\"text\"\n//          name=\"category\"\n//          value={category}\n//          onChange={this.handleInputChange}\n//        />\n// <button type=\"submit\" style={{ boxShadow: \"none\", backgroundColor: \"#05FF13\"}}>{editingId ? 'Update' : 'Create'} Note</button>\n// </form>\n// ) : (\n// <div>\n// <h2>Edit Note</h2>\n// <form onSubmit={this.handleFormSubmit}>\n// <label htmlFor=\"title\">Title:</label>\n// <input\n//              type=\"text\"\n//              name=\"title\"\n//              value={title}\n//              onChange={this.handleInputChange}\n//            />\n// <label htmlFor=\"content\">Content:</label>\n// <input\n//              type=\"text\"\n//              name=\"content\"\n//              value={content}\n//              onChange={this.handleInputChange}\n//            />\n// <label htmlFor=\"category\">Category:</label>\n// <input\n//              type=\"text\"\n//              name=\"category\"\n//              value={category}\n//              onChange={this.handleInputChange}\n//            />\n// <button type=\"submit\">Update Note</button>\n// <button onClick={() => this.setState({ editingId: null, title: '', content: '', category: '' })}>Cancel</button>\n// </form>\n// </div>\n// )}\n// {loading ? (\n// <p>Loading...</p>\n// ) : (\n// <table style={{ width: \"100%\", textAlign: \"left\" , border: \"1px solid #000\"}}>\n// <thead>\n// <tr>\n// <th>Title</th>\n// <th>Content</th>\n// <th>Category</th>\n// <th>Actions</th>\n// </tr>\n// </thead>\n// <tbody >\n// {data.map(item => (\n// <tr style={{ border: \"1px solid #000\" }} key={item.id}>\n// <td>{item.title}</td>\n// <td>{item.content}</td>\n// <td>{item.category}</td>\n// <td>\n// <button onClick={() => this.handleEditClick(item.id, item.title, item.content, item.category)}>Edit</button>\n// <button onClick={() => this.deleteData(item.id)}>Delete</button>\n// </td>\n// </tr>\n// ))}\n// </tbody>\n// </table>\n// )}\n\n// </div>\n\n// )\n// : (\n//   // render a message or redirect to a login page if user is not logged in\n//   <div>\n//     <h1>Please Log In</h1>\n//     <p>You need to be logged in to see this content.</p>\n//   </div>\n// );\n\n//   }\n// }\n\n// function isTokenExpired(token) {\n//   // implement token expiration check logic here\n//   return false; // placeholder implementation\n// }\n// export default Crud;\n\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nconst token = localStorage.getItem('token');\nconst isLoggedIn = token && !isTokenExpired(token);\n\nclass Crud extends Component {\n  state = {\n    data: [],\n    loading: false,\n    title: \"\",\n    content: \"\",\n    category: \"\",\n    editingId: null,\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    axios.get('http://127.0.0.1:8000/authapp/api/notes/', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then(res => {\n        console.log(res.data.notes);\n        this.setState({ data: res.data.notes, loading: false });\n      })\n      .catch(err => {\n        console.error(\"error \", err);\n        this.setState({ loading: false });\n      });\n  }\n\n  getData = () => {\n    this.setState({ loading: true });\n    axios.get('http://127.0.0.1:8000/authapp/api/notes/', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then(res => {\n        console.log(res.data.notes);\n        this.setState({ data: res.data.notes, loading: false });\n      })\n      .catch(err => {\n        console.error(\"error \", err);\n        this.setState({ loading: false });\n      });\n  };\n\n  createData = (newData) => {\n    axios.post('http://127.0.0.1:8000/authapp/api/notes/', newData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then(res => {\n        this.getData();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  updateData = (id, updatedData) => {\n    if (window.confirm('Are you sure you want to update this item?')) {\n      axios.patch(`http://127.0.0.1:8000/authapp/api/notes/${id}`, updatedData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(res => {\n          this.getData();\n          this.setState({ editingId: null, title: '', content: '', category: '' });\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  };\n\n  deleteData = (id) => {\n    if (window.confirm('Are you sure you want to permanently delete this item?')) {\n      axios.delete(`http://127.0.0.1:8000/authapp/api/notes/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(res => {\n          this.getData();\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  };\n  \n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.editingId) {\n      this.updateData(this.state.editingId, { title: this.state.title, content: this.state.content, category: this.state.category });\n    } else {\n      this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {/* your JSX code here */}\n        <div>\n      <div style={{width: \"200px\", fontSize: \"10px\"}}>{token}</div>\n      {!editingId ? (\n        <form onSubmit={this.handleFormSubmit}>\n          <label\nhtmlFor=\"title\">Title:</label>\n<input\n         type=\"text\"\n         name=\"title\"\n         value={title}\n         onChange={this.handleInputChange}\n       />\n<label htmlFor=\"content\">Content:</label>\n<input\n         type=\"text\"\n         name=\"content\"\n         value={content}\n         onChange={this.handleInputChange}\n       />\n<label htmlFor=\"category\">Category:</label>\n<input\n         type=\"text\"\n         name=\"category\"\n         value={category}\n         onChange={this.handleInputChange}\n       />\n<button type=\"submit\" style={{ boxShadow: \"none\", backgroundColor: \"#05FF13\"}}>{editingId ? 'Update' : 'Create'} Note</button>\n</form>\n) : (\n<div>\n<h2>Edit Note</h2>\n<form onSubmit={this.handleFormSubmit}>\n<label htmlFor=\"title\">Title:</label>\n<input\n             type=\"text\"\n             name=\"title\"\n             value={title}\n             onChange={this.handleInputChange}\n           />\n<label htmlFor=\"content\">Content:</label>\n<input\n             type=\"text\"\n             name=\"content\"\n             value={content}\n             onChange={this.handleInputChange}\n           />\n<label htmlFor=\"category\">Category:</label>\n<input\n             type=\"text\"\n             name=\"category\"\n             value={category}\n             onChange={this.handleInputChange}\n           />\n<button type=\"submit\">Update Note</button>\n<button onClick={() => this.setState({ editingId: null, title: '', content: '', category: '' })}>Cancel</button>\n</form>\n</div>\n)}\n{loading ? (\n<p>Loading...</p>\n) : (\n<table style={{ width: \"100%\", textAlign: \"left\" , border: \"1px solid #000\"}}>\n<thead>\n<tr>\n<th>Title</th>\n<th>Content</th>\n<th>Category</th>\n<th>Actions</th>\n</tr>\n</thead>\n<tbody >\n{data.map(item => (\n<tr style={{ border: \"1px solid #000\" }} key={item.id}>\n<td>{item.title}</td>\n<td>{item.content}</td>\n<td>{item.category}</td>\n<td>\n<button onClick={() => this.handleEditClick(item.id, item.title, item.content, item.category)}>Edit</button>\n<button onClick={() => this.deleteData(item.id)}>Delete</button>\n</td>\n</tr>\n))}\n</tbody>\n</table>\n)}\n\n</div>\n\n)\n: (\n  // render a message or redirect to a login page if user is not logged in\n  <div>\n    <h1>Please Log In</h1>\n    <p>You need to be logged in to see this content.</p>\n  </div>\n      </div>\n    );\n  }\n}\n\nexport default Crud;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAC3C,MAAMC,UAAU,GAAGH,KAAK,IAAI,CAACI,cAAc,CAACJ,KAAK,CAAC;AAElD,MAAMK,IAAI,SAASP,SAAS,CAAC;EAAA;IAAA;IA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}