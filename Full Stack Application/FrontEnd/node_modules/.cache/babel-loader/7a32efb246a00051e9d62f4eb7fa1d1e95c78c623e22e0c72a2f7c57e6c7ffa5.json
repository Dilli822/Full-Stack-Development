{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/App.js\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(false);\n//   const [newNote, setNewNote] = useState({ content: '', category: '' });\n//   const [updateNote, setUpdateNote] = useState({ id: '', content: '', category: '' });\n//   const [editing, setEditing] = useState(false);\n\n//   useEffect(() => {\n//     const fetchNotes = async () => {\n//       setLoading(true);\n//       setError(false);\n//       try {\n//         const res = await axios.get('http://127.0.0.1:8000/api/notes/');\n//         setNotes(res.data.notes);\n//         setLoading(false);\n//       } catch (err) {\n//         setError(true);\n//         setLoading(false);\n//       }\n//     };\n//     fetchNotes();\n//   }, []);\n\n//   const handleCreateNote = async () => {\n//     try {\n//       const res = await axios.post('http://127.0.0.1:8000/api/notes/', {\n//         content: newNote.content,\n//         category: newNote.category,\n//       });\n//       setNotes([...notes, res.data]);\n//       setNewNote({ content: '', category: '' });\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleUpdateNote = async () => {\n//     try {\n//       const res = await axios.put(`http://127.0.0.1:8000/api/notes/${updateNote.id}/`, {\n//         content: updateNote.content,\n//         category: updateNote.category,\n//       });\n//       const updatedNotes = notes.map((note) => (note.id === updateNote.id ? res.data : note));\n//       setNotes(updatedNotes);\n//       setUpdateNote({ id: '', content: '', category: '' });\n//       setEditing(false);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleDeleteNote = async (id) => {\n//     try {\n//       await axios.delete(`http://127.0.0.1:8000/api/notes/${id}/`);\n//       setNotes(notes.filter((note) => note.id !== id));\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleEditClick = (note) => {\n//     setUpdateNote({ id: note.id, content: note.content, category: note.category });\n//     setEditing(true);\n//   };\n\n//   const renderUpdateForm = () => {\n//     return (\n//       <form>\n//         <input type=\"text\" placeholder=\"ID\" value={updateNote.id} disabled />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Content\"\n//           value={updateNote.content}\n//           onChange={(e) => setUpdateNote({ ...updateNote, content: e.target.value })}/>\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={updateNote.category}\n// onChange={(e) => setUpdateNote({ ...updateNote, category: e.target.value })}\n// />\n// <button onClick={handleUpdateNote}>Save</button>\n// </form>\n// );\n// };\n\n// return (\n// <div>\n// {loading && <div>Loading...</div>}\n// {error && <div>An error occurred while fetching the notes.</div>}\n// {editing ? (\n// renderUpdateForm()\n// ) : (\n// <form>\n// <input\n// type=\"text\"\n// placeholder=\"Content\"\n// value={newNote.content}\n// onChange={(e) => setNewNote({ ...newNote, content: e.target.value })}\n// />\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={newNote.category}\n// onChange={(e) => setNewNote({ ...newNote, category: e.target.value })}\n// />\n// <button onClick={handleCreateNote}>Create Note</button>\n// </form>\n// )}\n// {notes.map((note) => (\n// <div key={note.id}>\n// <h3>{note.content}</h3>\n// <p>{note.category}</p>\n// <button onClick={() => handleEditClick(note)}>Edit</button>\n// <button onClick={() => handleDeleteNote(note.id)}>Delete</button>\n// </div>\n// ))}\n// </div>\n// );\n// };\n\n// export default App;\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      loading: false\n    };\n    this.getData = () => {\n      this.setState({\n        loading: true\n      });\n      axios.get('http://127.0.0.1:8000/api/notes/').then(res => {\n        this.setState({\n          data: res.data.notes,\n          loading: false\n        });\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          loading: false\n        });\n      });\n    };\n    this.createData = newData => {\n      axios.post('http://127.0.0.1:8000/api/notes/', newData).then(res => {\n        this.getData();\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n    this.updateData = (id, updatedData) => {\n      axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData).then(res => {\n        this.getData();\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n    this.deleteData = id => {\n      axios.delete(`http://127.0.0.1:8000/api/notes/${id}`).then(res => {\n        this.getData();\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    const {\n      data,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.content, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.updateData(item.id, {\n              name: 'Updated Name'\n            }),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.createData({\n          name: 'New Name'\n        }),\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","axios","App","state","data","loading","getData","setState","get","then","res","notes","catch","err","console","error","createData","newData","post","updateData","id","updatedData","put","deleteData","delete","componentDidMount","render","map","item","content","name"],"sources":["/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(false);\n//   const [newNote, setNewNote] = useState({ content: '', category: '' });\n//   const [updateNote, setUpdateNote] = useState({ id: '', content: '', category: '' });\n//   const [editing, setEditing] = useState(false);\n\n//   useEffect(() => {\n//     const fetchNotes = async () => {\n//       setLoading(true);\n//       setError(false);\n//       try {\n//         const res = await axios.get('http://127.0.0.1:8000/api/notes/');\n//         setNotes(res.data.notes);\n//         setLoading(false);\n//       } catch (err) {\n//         setError(true);\n//         setLoading(false);\n//       }\n//     };\n//     fetchNotes();\n//   }, []);\n\n//   const handleCreateNote = async () => {\n//     try {\n//       const res = await axios.post('http://127.0.0.1:8000/api/notes/', {\n//         content: newNote.content,\n//         category: newNote.category,\n//       });\n//       setNotes([...notes, res.data]);\n//       setNewNote({ content: '', category: '' });\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleUpdateNote = async () => {\n//     try {\n//       const res = await axios.put(`http://127.0.0.1:8000/api/notes/${updateNote.id}/`, {\n//         content: updateNote.content,\n//         category: updateNote.category,\n//       });\n//       const updatedNotes = notes.map((note) => (note.id === updateNote.id ? res.data : note));\n//       setNotes(updatedNotes);\n//       setUpdateNote({ id: '', content: '', category: '' });\n//       setEditing(false);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleDeleteNote = async (id) => {\n//     try {\n//       await axios.delete(`http://127.0.0.1:8000/api/notes/${id}/`);\n//       setNotes(notes.filter((note) => note.id !== id));\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleEditClick = (note) => {\n//     setUpdateNote({ id: note.id, content: note.content, category: note.category });\n//     setEditing(true);\n//   };\n\n//   const renderUpdateForm = () => {\n//     return (\n//       <form>\n//         <input type=\"text\" placeholder=\"ID\" value={updateNote.id} disabled />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Content\"\n//           value={updateNote.content}\n//           onChange={(e) => setUpdateNote({ ...updateNote, content: e.target.value })}/>\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={updateNote.category}\n// onChange={(e) => setUpdateNote({ ...updateNote, category: e.target.value })}\n// />\n// <button onClick={handleUpdateNote}>Save</button>\n// </form>\n// );\n// };\n\n// return (\n// <div>\n// {loading && <div>Loading...</div>}\n// {error && <div>An error occurred while fetching the notes.</div>}\n// {editing ? (\n// renderUpdateForm()\n// ) : (\n// <form>\n// <input\n// type=\"text\"\n// placeholder=\"Content\"\n// value={newNote.content}\n// onChange={(e) => setNewNote({ ...newNote, content: e.target.value })}\n// />\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={newNote.category}\n// onChange={(e) => setNewNote({ ...newNote, category: e.target.value })}\n// />\n// <button onClick={handleCreateNote}>Create Note</button>\n// </form>\n// )}\n// {notes.map((note) => (\n// <div key={note.id}>\n// <h3>{note.content}</h3>\n// <p>{note.category}</p>\n// <button onClick={() => handleEditClick(note)}>Edit</button>\n// <button onClick={() => handleDeleteNote(note.id)}>Delete</button>\n// </div>\n// ))}\n// </div>\n// );\n// };\n\n// export default App;\n\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    data: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    this.setState({ loading: true });\n    axios.get('http://127.0.0.1:8000/api/notes/')\n      .then(res => {\n        this.setState({ data: res.data.notes, loading: false });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  createData = (newData) => {\n    axios.post('http://127.0.0.1:8000/api/notes/', newData)\n      .then(res => {\n        this.getData();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  updateData = (id, updatedData) => {\n    axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n      .then(res => {\n        this.getData();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  deleteData = (id) => {\n    axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n      .then(res => {\n        this.getData();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    const { data, loading } = this.state;\n\n    return (\n      <div>\n        {loading && <p>Loading...</p>}\n        <ul>\n          {data.map(item => (\n            <li key={item}>\n              {item.content}\n              <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n              <button>\n                \n                <button>No</button>\n              </button>\n            </li>\n          ))}\n        </ul>\n        <button onClick={() => this.createData({ name: 'New Name' })}>Create</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}