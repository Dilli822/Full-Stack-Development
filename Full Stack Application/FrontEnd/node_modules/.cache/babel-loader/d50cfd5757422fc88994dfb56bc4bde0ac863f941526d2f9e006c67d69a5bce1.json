{"ast":null,"code":"import './App.css';\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.getApiData = () => {\n      let self = this;\n      axios.get('http://127.0.0.1:8000/api/notes/').then(res => {\n        console.log(\"res data is \");\n        console.log(res.data);\n        console.log(res.data.notes);\n        self.setState({\n          apiData: res.data.notes,\n          loading: false,\n          error: false\n        });\n      }).catch(err => {\n        console.log(err);\n        self.setState({\n          error: true,\n          loading: false\n        });\n      });\n    };\n    this.handleCreateNote = () => {\n      let self = this;\n      axios.post('http://127.0.0.1:8000/api/notes/', {\n        content: this.state.newNote,\n        category: this.state.newCategory\n      }).then(res => {\n        console.log(\"create note response \");\n        console.log(res.data);\n        self.setState({\n          message: \"Note created successfully\"\n        });\n        self.fetchNotes();\n      }).catch(error => {\n        console.log(error);\n        self.setState({\n          message: \"Error creating note\"\n        });\n      });\n    };\n    this.state = {\n      searchText: \"\",\n      loading: true,\n      error: false,\n      apiData: [],\n      dupApiData: [],\n      newNote: \"\",\n      newCategory: \"\",\n      updateNote: \"\",\n      updateCategory: \"\",\n      updateId: \"\",\n      message: \"\"\n    };\n  }\n  componentDidMount() {\n    this.getApiData();\n  }\n}","map":{"version":3,"names":["React","Component","axios","App","constructor","props","getApiData","self","get","then","res","console","log","data","notes","setState","apiData","loading","error","catch","err","handleCreateNote","post","content","state","newNote","category","newCategory","message","fetchNotes","searchText","dupApiData","updateNote","updateCategory","updateId","componentDidMount"],"sources":["/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/App.js"],"sourcesContent":["import './App.css';\nimport React,{Component} from \"react\";\nimport axios from \"axios\";\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      searchText: \"\",\n      loading: true,\n      error: false,\n      apiData: [],\n      dupApiData: [],\n      newNote: \"\",\n      newCategory: \"\",\n      updateNote: \"\",\n      updateCategory: \"\",\n      updateId: \"\",\n      message: \"\"\n    }\n  };\n\n  componentDidMount(){\n    this.getApiData();\n  }\n\n  getApiData = () =>{\n    let self = this;\n    axios.get('http://127.0.0.1:8000/api/notes/').then((res)=>{\n      console.log(\"res data is \");\n      console.log(res.data);\n      console.log(res.data.notes)\n      self.setState({\n        apiData: res.data.notes,\n        loading: false,\n        error: false,\n      })\n    }).catch((err)=>{\n      console.log(err);\n      self.setState({ error: true, loading: false })\n    })\n  }\n\n  handleCreateNote = () =>{\n    let self = this;\n    axios.post('http://127.0.0.1:8000/api/notes/',{\n      content: this.state.newNote,\n      category: this.state.newCategory,\n    }).then((res)=>{\n      console.log(\"create note response \");\n      console.log(res.data);\n      self.setState({ message: \"Note created successfully\" });\n      self.fetchNotes();\n      }).catch((error) =>{\n      console.log(error);\n      self.setState({ message: \"Error creating note\" });\n      });\n      };\n    }"],"mappings":"AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,SAASF,SAAS;EACzBG,WAAW,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IAAC,KAoBfC,UAAU,GAAG,MAAK;MAChB,IAAIC,IAAI,GAAG,IAAI;MACfL,KAAK,CAACM,GAAG,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAG;QACxDC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3BD,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;QACrBF,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAACC,KAAK,CAAC;QAC3BP,IAAI,CAACQ,QAAQ,CAAC;UACZC,OAAO,EAAEN,GAAG,CAACG,IAAI,CAACC,KAAK;UACvBG,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAG;QACdT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;QAChBb,IAAI,CAACQ,QAAQ,CAAC;UAAEG,KAAK,EAAE,IAAI;UAAED,OAAO,EAAE;QAAM,CAAC,CAAC;MAChD,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDI,gBAAgB,GAAG,MAAK;MACtB,IAAId,IAAI,GAAG,IAAI;MACfL,KAAK,CAACoB,IAAI,CAAC,kCAAkC,EAAC;QAC5CC,OAAO,EAAE,IAAI,CAACC,KAAK,CAACC,OAAO;QAC3BC,QAAQ,EAAE,IAAI,CAACF,KAAK,CAACG;MACvB,CAAC,CAAC,CAAClB,IAAI,CAAEC,GAAG,IAAG;QACbC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpCD,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;QACrBN,IAAI,CAACQ,QAAQ,CAAC;UAAEa,OAAO,EAAE;QAA4B,CAAC,CAAC;QACvDrB,IAAI,CAACsB,UAAU,EAAE;MACjB,CAAC,CAAC,CAACV,KAAK,CAAED,KAAK,IAAI;QACnBP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;QAClBX,IAAI,CAACQ,QAAQ,CAAC;UAAEa,OAAO,EAAE;QAAsB,CAAC,CAAC;MACjD,CAAC,CAAC;IACF,CAAC;IAlDH,IAAI,CAACJ,KAAK,GAAG;MACXM,UAAU,EAAE,EAAE;MACdb,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,KAAK;MACZF,OAAO,EAAE,EAAE;MACXe,UAAU,EAAE,EAAE;MACdN,OAAO,EAAE,EAAE;MACXE,WAAW,EAAE,EAAE;MACfK,UAAU,EAAE,EAAE;MACdC,cAAc,EAAE,EAAE;MAClBC,QAAQ,EAAE,EAAE;MACZN,OAAO,EAAE;IACX,CAAC;EACH;EAEAO,iBAAiB,GAAE;IACjB,IAAI,CAAC7B,UAAU,EAAE;EACnB;AAkCE"},"metadata":{},"sourceType":"module","externalDependencies":[]}