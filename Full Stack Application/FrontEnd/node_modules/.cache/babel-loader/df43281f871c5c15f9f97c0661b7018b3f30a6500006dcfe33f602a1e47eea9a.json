{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(false);\n//   const [newNote, setNewNote] = useState({ content: '', category: '' });\n//   const [updateNote, setUpdateNote] = useState({ id: '', content: '', category: '' });\n//   const [editing, setEditing] = useState(false);\n\n//   useEffect(() => {\n//     const fetchNotes = async () => {\n//       setLoading(true);\n//       setError(false);\n//       try {\n//         const res = await axios.get('http://127.0.0.1:8000/api/notes/');\n//         setNotes(res.data.notes);\n//         setLoading(false);\n//       } catch (err) {\n//         setError(true);\n//         setLoading(false);\n//       }\n//     };\n//     fetchNotes();\n//   }, []);\n\n//   const handleCreateNote = async () => {\n//     try {\n//       const res = await axios.post('http://127.0.0.1:8000/api/notes/', {\n//         content: newNote.content,\n//         category: newNote.category,\n//       });\n//       setNotes([...notes, res.data]);\n//       setNewNote({ content: '', category: '' });\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleUpdateNote = async () => {\n//     try {\n//       const res = await axios.put(`http://127.0.0.1:8000/api/notes/${updateNote.id}/`, {\n//         content: updateNote.content,\n//         category: updateNote.category,\n//       });\n//       const updatedNotes = notes.map((note) => (note.id === updateNote.id ? res.data : note));\n//       setNotes(updatedNotes);\n//       setUpdateNote({ id: '', content: '', category: '' });\n//       setEditing(false);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleDeleteNote = async (id) => {\n//     try {\n//       await axios.delete(`http://127.0.0.1:8000/api/notes/${id}/`);\n//       setNotes(notes.filter((note) => note.id !== id));\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleEditClick = (note) => {\n//     setUpdateNote({ id: note.id, content: note.content, category: note.category });\n//     setEditing(true);\n//   };\n\n//   const renderUpdateForm = () => {\n//     return (\n//       <form>\n//         <input type=\"text\" placeholder=\"ID\" value={updateNote.id} disabled />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Content\"\n//           value={updateNote.content}\n//           onChange={(e) => setUpdateNote({ ...updateNote, content: e.target.value })}/>\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={updateNote.category}\n// onChange={(e) => setUpdateNote({ ...updateNote, category: e.target.value })}\n// />\n// <button onClick={handleUpdateNote}>Save</button>\n// </form>\n// );\n// };\n\n// return (\n// <div>\n// {loading && <div>Loading...</div>}\n// {error && <div>An error occurred while fetching the notes.</div>}\n// {editing ? (\n// renderUpdateForm()\n// ) : (\n// <form>\n// <input\n// type=\"text\"\n// placeholder=\"Content\"\n// value={newNote.content}\n// onChange={(e) => setNewNote({ ...newNote, content: e.target.value })}\n// />\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={newNote.category}\n// onChange={(e) => setNewNote({ ...newNote, category: e.target.value })}\n// />\n// <button onClick={handleCreateNote}>Create Note</button>\n// </form>\n// )}\n// {notes.map((note) => (\n// <div key={note.id}>\n// <h3>{note.content}</h3>\n// <p>{note.category}</p>\n// <button onClick={() => handleEditClick(note)}>Edit</button>\n// <button onClick={() => handleDeleteNote(note.id)}>Delete</button>\n// </div>\n// ))}\n// </div>\n// );\n// };\n\n// export default App;\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n\n//   render() {\n//     const { data, loading } = this.state;\n\n//     return (\n//       <div>\n//         {loading && <p>Loading...</p>}\n//         <ul>\n//           {data.map(item => (\n//             <li key={item}>\n//               {item.content}\n//               <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n//               <button onClick={() => this.deleteData(item.id)}>Delete</button>\n\n//             </li>\n//           ))}\n//         </ul>\n//         <button onClick={() => this.createData({ name: 'New Name' })}>Create</button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false,\n//     title: \"\",\n//     content: \"\",\n//     category: \"\"\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n\n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n\n//   handleInputChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   handleFormSubmit = (event) => {\n//     event.preventDefault();\n//     this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n//   };\n\n//   render() {\n//     const { data, loading } = this.state;\n\n//     return (\n//       <div>\n//         <form onSubmit={this.handleFormSubmit}>\n//           <label>\n//             Title:\n//             <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <label>\n//             Content:\n//             <input type=\"text\" name=\"content\" value={this.state.content} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <label>\n//             Category:\n//             <input type=\"text\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <button type=\"submit\">Save</button></form>\n\n//           <div>\n//           <ul>\n//           {data.map(item => (\n//             <li key={item}>\n//               {item.content}\n//               <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n//               <button onClick={() => this.deleteData(item.id)}>Delete</button>\n\n//             </li>\n//           ))}\n//         </ul>\n//           </div>\n//           </div>\n// );\n// }\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/dillirai/Desktop/Full-Stack-Development/Full Stack Application/FrontEnd/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(false);\n//   const [newNote, setNewNote] = useState({ content: '', category: '' });\n//   const [updateNote, setUpdateNote] = useState({ id: '', content: '', category: '' });\n//   const [editing, setEditing] = useState(false);\n\n//   useEffect(() => {\n//     const fetchNotes = async () => {\n//       setLoading(true);\n//       setError(false);\n//       try {\n//         const res = await axios.get('http://127.0.0.1:8000/api/notes/');\n//         setNotes(res.data.notes);\n//         setLoading(false);\n//       } catch (err) {\n//         setError(true);\n//         setLoading(false);\n//       }\n//     };\n//     fetchNotes();\n//   }, []);\n\n//   const handleCreateNote = async () => {\n//     try {\n//       const res = await axios.post('http://127.0.0.1:8000/api/notes/', {\n//         content: newNote.content,\n//         category: newNote.category,\n//       });\n//       setNotes([...notes, res.data]);\n//       setNewNote({ content: '', category: '' });\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleUpdateNote = async () => {\n//     try {\n//       const res = await axios.put(`http://127.0.0.1:8000/api/notes/${updateNote.id}/`, {\n//         content: updateNote.content,\n//         category: updateNote.category,\n//       });\n//       const updatedNotes = notes.map((note) => (note.id === updateNote.id ? res.data : note));\n//       setNotes(updatedNotes);\n//       setUpdateNote({ id: '', content: '', category: '' });\n//       setEditing(false);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleDeleteNote = async (id) => {\n//     try {\n//       await axios.delete(`http://127.0.0.1:8000/api/notes/${id}/`);\n//       setNotes(notes.filter((note) => note.id !== id));\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleEditClick = (note) => {\n//     setUpdateNote({ id: note.id, content: note.content, category: note.category });\n//     setEditing(true);\n//   };\n\n//   const renderUpdateForm = () => {\n//     return (\n//       <form>\n//         <input type=\"text\" placeholder=\"ID\" value={updateNote.id} disabled />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Content\"\n//           value={updateNote.content}\n//           onChange={(e) => setUpdateNote({ ...updateNote, content: e.target.value })}/>\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={updateNote.category}\n// onChange={(e) => setUpdateNote({ ...updateNote, category: e.target.value })}\n// />\n// <button onClick={handleUpdateNote}>Save</button>\n// </form>\n// );\n// };\n\n// return (\n// <div>\n// {loading && <div>Loading...</div>}\n// {error && <div>An error occurred while fetching the notes.</div>}\n// {editing ? (\n// renderUpdateForm()\n// ) : (\n// <form>\n// <input\n// type=\"text\"\n// placeholder=\"Content\"\n// value={newNote.content}\n// onChange={(e) => setNewNote({ ...newNote, content: e.target.value })}\n// />\n// <input\n// type=\"text\"\n// placeholder=\"Category\"\n// value={newNote.category}\n// onChange={(e) => setNewNote({ ...newNote, category: e.target.value })}\n// />\n// <button onClick={handleCreateNote}>Create Note</button>\n// </form>\n// )}\n// {notes.map((note) => (\n// <div key={note.id}>\n// <h3>{note.content}</h3>\n// <p>{note.category}</p>\n// <button onClick={() => handleEditClick(note)}>Edit</button>\n// <button onClick={() => handleDeleteNote(note.id)}>Delete</button>\n// </div>\n// ))}\n// </div>\n// );\n// };\n\n// export default App;\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n    \n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n  \n//   render() {\n//     const { data, loading } = this.state;\n\n//     return (\n//       <div>\n//         {loading && <p>Loading...</p>}\n//         <ul>\n//           {data.map(item => (\n//             <li key={item}>\n//               {item.content}\n//               <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n//               <button onClick={() => this.deleteData(item.id)}>Delete</button>\n\n//             </li>\n//           ))}\n//         </ul>\n//         <button onClick={() => this.createData({ name: 'New Name' })}>Create</button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class App extends Component {\n//   state = {\n//     data: [],\n//     loading: false,\n//     title: \"\",\n//     content: \"\",\n//     category: \"\"\n//   };\n\n//   componentDidMount() {\n//     this.getData();\n//   }\n\n//   getData = () => {\n//     this.setState({ loading: true });\n//     axios.get('http://127.0.0.1:8000/api/notes/')\n    \n//       .then(res => {\n//         console.log(res.data.notes);\n//         this.setState({ data: res.data.notes, loading: false });\n//       })\n//       .catch(err => {\n//         console.error(err);\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   createData = (newData) => {\n//     axios.post('http://127.0.0.1:8000/api/notes/', newData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   updateData = (id, updatedData) => {\n//     axios.put(`http://127.0.0.1:8000/api/notes/${id}`, updatedData)\n//       .then(res => {\n//         this.getData();\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   };\n\n//   deleteData = (id) => {\n//     if (window.confirm('Are you sure you want to delete this item?')) {\n//       axios.delete(`http://127.0.0.1:8000/api/notes/${id}`)\n//         .then(res => {\n//           this.getData();\n//         })\n//         .catch(err => {\n//           console.error(err);\n//         });\n//     }\n//   };\n  \n//   handleInputChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     });\n//   };\n\n//   handleFormSubmit = (event) => {\n//     event.preventDefault();\n//     this.createData({ title: this.state.title, content: this.state.content, category: this.state.category });\n//   };\n  \n//   render() {\n//     const { data, loading } = this.state;\n\n//     return (\n//       <div>\n//         <form onSubmit={this.handleFormSubmit}>\n//           <label>\n//             Title:\n//             <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <label>\n//             Content:\n//             <input type=\"text\" name=\"content\" value={this.state.content} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <label>\n//             Category:\n//             <input type=\"text\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} />\n//           </label>\n//           <br />\n//           <button type=\"submit\">Save</button></form>\n\n//           <div>\n//           <ul>\n//           {data.map(item => (\n//             <li key={item}>\n//               {item.content}\n//               <button onClick={() => this.updateData(item.id, { name: 'Updated Name' })}>Update</button>\n//               <button onClick={() => this.deleteData(item.id)}>Delete</button>\n\n//             </li>\n//           ))}\n//         </ul>\n//           </div>\n//           </div>\n// );\n// }\n// }\n\n// export default App;"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}