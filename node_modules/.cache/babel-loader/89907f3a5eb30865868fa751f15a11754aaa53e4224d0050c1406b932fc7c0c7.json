{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments() {\n  _s();\n  const [comments, setComments] = useState([]);\n\n  // useEffect(() => {\n  //   fetchComments();\n  // }, []);\n\n  // const fetchComments = async () => {\n  //   try {\n  //     const response = await fetch('http://localhost:8000/api/blog/comments/', {\n  //       method: \"GET\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n  //       },\n\n  //     });\n  //     if (response.ok) {\n  //       const data = await response.json();\n  //       console.log(\"comments are \", data);\n  //       setComments(data);\n  //     } else {\n  //       console.error('Failed to fetch comments');\n  //     }\n  //   } catch (error) {\n  //     console.error('Error:', error);\n  //   }\n  // };\n\n  // return (\n  //   <div>\n  //     {comments.map((comment) => (\n  //       <div key={comment.id}>\n\n  //         <p>comments: {comment.comment_content}</p>\n  //         <p>commented_by: {comment.author}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [combinedData.mappedData.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", blog.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)), combinedData.commentsData.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: comment.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.comment_content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n_s(Comments, \"RHrI29Yaf4wTXaDPqg0VDGN+Yyo=\");\n_c = Comments;\n;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Comments","_s","comments","setComments","children","combinedData","mappedData","map","blog","title","fileName","_jsxFileName","lineNumber","columnNumber","likes","id","commentsData","comment","comment_content","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Comments () {\n  const [comments, setComments] = useState([]);\n\n  // useEffect(() => {\n  //   fetchComments();\n  // }, []);\n\n  // const fetchComments = async () => {\n  //   try {\n  //     const response = await fetch('http://localhost:8000/api/blog/comments/', {\n  //       method: \"GET\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n  //       },\n    \n  //     });\n  //     if (response.ok) {\n  //       const data = await response.json();\n  //       console.log(\"comments are \", data);\n  //       setComments(data);\n  //     } else {\n  //       console.error('Failed to fetch comments');\n  //     }\n  //   } catch (error) {\n  //     console.error('Error:', error);\n  //   }\n  // };\n\n  // return (\n  //   <div>\n  //     {comments.map((comment) => (\n  //       <div key={comment.id}>\n   \n  //         <p>comments: {comment.comment_content}</p>\n  //         <p>commented_by: {comment.author}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  return (\n  <div>\n  {combinedData.mappedData.map((blog) => (\n    <div key={blog.id}>\n      <h3>{blog.title}</h3>\n      <p>Likes: {blog.likes}</p>\n      {/* Render other properties of the blog as needed */}\n    </div>\n  ))}\n  {combinedData.commentsData.map((comment) => (\n    <div key={comment.id}>\n      <h3>{comment.title}</h3>\n      <p>{comment.comment_content}</p>\n      {/* Render other properties of the comment as needed */}\n    </div>\n  ))}\n</div>\n);\n\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAI;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,oBACAG,OAAA;IAAAK,QAAA,GACCC,YAAY,CAACC,UAAU,CAACC,GAAG,CAAEC,IAAI,iBAChCT,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAAK,QAAA,EAAKI,IAAI,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACrBd,OAAA;QAAAK,QAAA,GAAG,SAAO,EAACI,IAAI,CAACM,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAFlBL,IAAI,CAACO,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKlB,CAAC,EACDR,YAAY,CAACW,YAAY,CAACT,GAAG,CAAEU,OAAO,iBACrClB,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAAK,QAAA,EAAKa,OAAO,CAACR;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACxBd,OAAA;QAAAK,QAAA,EAAIa,OAAO,CAACC;MAAe;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAFxBI,OAAO,CAACF,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAGN;AAACZ,EAAA,CA3DQD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA2DhB;AAED,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}