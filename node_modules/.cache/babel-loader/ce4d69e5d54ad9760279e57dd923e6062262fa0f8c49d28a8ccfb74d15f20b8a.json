{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  const [authorId, setAuthorId] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  const [likedBy, setLikedBy] = useState(0);\n  const [newAddLikes, setNewAddLikes] = use;\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map(blog => ({\n          ...blog,\n          liked: false\n        }));\n        setBlogs(blogsWithLiked);\n        setLikedBy(blogsWithLiked.liked_by);\n        setCountLikes(blogsWithLiked.likes);\n        setAuthorId(blogsWithLiked.author);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const handleLikeClick = () => {\n    if (liked) {\n      // User has already liked the post, so remove like\n      setLiked(false);\n      const newLikes = countLikes - 1;\n      setNewAddLikes(newLikes);\n    } else {\n      // User has not liked the post, so add like\n      setLiked(true);\n      const newLikes = countLikes + 1;\n      setNewSubLikes(newLikes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogs\",\n      children: blogs && blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Likes: \", blog.likes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Liked by: \", blog.liked_by.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", blog.author.first_name, \" \", blog.author.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", blog.liked_by]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Likes: \", blog.likes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"liked by: \", blog.liked_by, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleLikeClick,\n          children: [/*#__PURE__*/_jsxDEV(FavoriteIcon, {\n            color: liked ? \"error\" : \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"4Vak7bJ0rvA5/E3CnaBsihnVG3U=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","jsxDEV","_jsxDEV","Likes","_s","liked","setLiked","likes","setLikes","blogs","setBlogs","error","setError","authorId","setAuthorId","countLikes","setCountLikes","likedBy","setLikedBy","newAddLikes","setNewAddLikes","use","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","blogsWithLiked","map","blog","liked_by","author","console","handleLikeClick","newLikes","setNewSubLikes","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","content","join","first_name","last_name","onClick","color","id","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\nexport default function Likes() {\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  const [authorId,setAuthorId] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  const [likedBy,setLikedBy] = useState(0);\n  const [newAddLikes,setNewAddLikes] = use\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n        setBlogs(blogsWithLiked);\n        setLikedBy(blogsWithLiked.liked_by);\n        setCountLikes(blogsWithLiked.likes);\n        setAuthorId(blogsWithLiked.author);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n\n  const handleLikeClick = () => {\n    if (liked) {\n      // User has already liked the post, so remove like\n      setLiked(false);\n      const newLikes = countLikes - 1;\n      setNewAddLikes(newLikes);\n    } else {\n      // User has not liked the post, so add like\n      setLiked(true);\n      const newLikes = countLikes + 1;\n      setNewSubLikes(newLikes);\n    }\n  };\n\n  return (\n    <div>\n\n<div className=\"blogs\">\n  {blogs &&\n    blogs.map((blog) => (\n      <div key={blog.id}>\n        <h3>{blog.title}</h3>\n        <p>{blog.content}</p>\n        <p>Likes: {blog.likes}</p>\n        <p>Liked by: {blog.liked_by.join(\", \")}</p>\n        <p>\n          Author: {blog.author.first_name} {blog.author.last_name}\n        </p>\n        <p> {blog.liked_by}</p>\n        <p>Likes: {blog.likes}</p>\n        <p>liked by: {blog.liked_by} </p>\n        <IconButton onClick={handleLikeClick}>\n        <FavoriteIcon color={liked ? \"error\" : \"inherit\"} />\n        <span>{likes}</span>\n      </IconButton>\n\n      </div>\n    ))}\n</div>\n\n\n\n    </div>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}