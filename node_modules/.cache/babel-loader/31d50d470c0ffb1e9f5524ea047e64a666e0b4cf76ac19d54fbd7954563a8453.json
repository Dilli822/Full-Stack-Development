{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Likes() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        console.log(data); // log the data to the console\n        setBlogs(data); // update the state with the fetched data\n        setAuthorId;\n      } catch (error) {\n        console.error(\"Error fetching blogs:\", error);\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const handleLike = async authorId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/blog/likes/update/${authorId}/`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          likes: 1\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      const updatedBlogs = blogs.map(blog => {\n        if (blog.id === authorId) {\n          return {\n            ...blog,\n            likes: data.likes,\n            liked_by: [...blog.liked_by, data.user_id]\n          };\n        }\n        return blog;\n      });\n      setBlogs(updatedBlogs);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [blog.likes, \" \", blog.likes === 1 ? \"like\" : \"likes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Liked by\", \" \", blog.liked_by.length > 0 ? blog.liked_by.join(\", \") : \"nobody yet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLike(blog.id),\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n_c = Likes;\nexport default Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Likes","_s","blogs","setBlogs","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","ok","Error","data","json","console","log","setAuthorId","error","handleLike","authorId","method","body","JSON","stringify","likes","updatedBlogs","map","blog","id","liked_by","user_id","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","length","join","onClick","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Likes() {\n  const [blogs, setBlogs] = useState([]);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        console.log(data); // log the data to the console\n        setBlogs(data); // update the state with the fetched data\n        setAuthorId\n      } catch (error) {\n        console.error(\"Error fetching blogs:\", error);\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n\n  const handleLike = async (authorId) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8000/api/blog/likes/update/${authorId}/`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            likes: 1,\n          }),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      const updatedBlogs = blogs.map((blog) => {\n        if (blog.id === authorId) {\n          return {\n            ...blog,\n            likes: data.likes,\n            liked_by: [...blog.liked_by, data.user_id],\n          };\n        }\n        return blog;\n      });\n      setBlogs(updatedBlogs);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      {blogs.map((blog) => (\n        <div key={blog.id}>\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n          <p>\n            {blog.likes} {blog.likes === 1 ? \"like\" : \"likes\"}\n          </p>\n          <p>\n            Liked by{\" \"}\n            {blog.liked_by.length > 0\n              ? blog.liked_by.join(\", \")\n              : \"nobody yet\"}\n          </p>\n          <button onClick={() => handleLike(blog.id)}>Like</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Likes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}