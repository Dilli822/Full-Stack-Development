{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes(_ref) {\n  _s();\n  let {\n    blogId,\n    initialLikes,\n    initialLiked\n  } = _ref;\n  const [likes, setLikes] = useState(initialLikes);\n  const [liked, setLiked] = useState(initialLiked);\n  const handleLikeClick = async () => {\n    // Check if the user has already liked the blog\n    if (liked) {\n      // Remove the like\n      setLikes(prevLikes => prevLikes - 1);\n    } else {\n      // Add the like\n      setLikes(prevLikes => prevLikes + 1);\n    }\n\n    // Toggle the liked state\n    setLiked(prevLiked => !prevLiked);\n\n    // Send a PUT request to update the API\n    try {\n      const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        },\n        body: JSON.stringify({\n          liked: !liked,\n          likes: likes\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update likes.\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: handleLikeClick,\n    children: [/*#__PURE__*/_jsxDEV(FavoriteIcon, {\n      color: liked ? \"error\" : \"inherit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: likes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"LkIK4oHOzwV7YGfWuEPwdd+jXnU=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","IconButton","FavoriteIcon","jsxDEV","_jsxDEV","Likes","_ref","_s","blogId","initialLikes","initialLiked","likes","setLikes","liked","setLiked","handleLikeClick","prevLikes","prevLiked","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","ok","Error","error","console","onClick","children","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\nexport default function Likes({ blogId, initialLikes, initialLiked }) {\n  const [likes, setLikes] = useState(initialLikes);\n  const [liked, setLiked] = useState(initialLiked);\n\n  const handleLikeClick = async () => {\n    // Check if the user has already liked the blog\n    if (liked) {\n      // Remove the like\n      setLikes((prevLikes) => prevLikes - 1);\n    } else {\n      // Add the like\n      setLikes((prevLikes) => prevLikes + 1);\n    }\n\n    // Toggle the liked state\n    setLiked((prevLiked) => !prevLiked);\n\n    // Send a PUT request to update the API\n    try {\n      const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        },\n        body: JSON.stringify({ liked: !liked, likes: likes }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to update likes.\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <IconButton onClick={handleLikeClick}>\n      <FavoriteIcon color={liked ? \"error\" : \"inherit\"} />\n      <span>{likes}</span>\n    </IconButton>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAyC;EAAAC,EAAA;EAAA,IAAxC;IAAEC,MAAM;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAAJ,IAAA;EAClE,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACS,YAAY,CAAC;EAChD,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACU,YAAY,CAAC;EAEhD,MAAMK,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC;IACA,IAAIF,KAAK,EAAE;MACT;MACAD,QAAQ,CAAEI,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACxC,CAAC,MAAM;MACL;MACAJ,QAAQ,CAAEI,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACxC;;IAEA;IACAF,QAAQ,CAAEG,SAAS,IAAK,CAACA,SAAS,CAAC;;IAEnC;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8CX,MAAO,GAAE,EAAE;QACrFY,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;QAC/D,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,KAAK,EAAE,CAACA,KAAK;UAAEF,KAAK,EAAEA;QAAM,CAAC;MACtD,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACU,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACE1B,OAAA,CAACH,UAAU;IAAC+B,OAAO,EAAEjB,eAAgB;IAAAkB,QAAA,gBACnC7B,OAAA,CAACF,YAAY;MAACgC,KAAK,EAAErB,KAAK,GAAG,OAAO,GAAG;IAAU;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACpDlC,OAAA;MAAA6B,QAAA,EAAOtB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT;AAEjB;AAAC/B,EAAA,CA1CuBF,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}