{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogList() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        console.log(data); // log the data to the console\n        setBlogs(data); // update the state with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching blogs:\", error);\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const handleLike = async blogId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          likes: 1\n        })\n      });\n      const data = await response.json();\n      console.log(data); // log the updated data to the console\n\n      // Update the state to reflect the updated likes count\n      setBlogs(prevBlogs => prevBlogs.map(blog => {\n        if (blog.id === blogId) {\n          return {\n            ...blog,\n            likes: data.likes\n          };\n        } else {\n          return blog;\n        }\n      }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"likes \", blog.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"liked by \", blog.liked_by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLike(blog.id),\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(BlogList, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n_c = BlogList;\nexport default Likes;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","BlogList","_s","blogs","setBlogs","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","ok","Error","data","json","console","log","error","handleLike","blogId","method","body","JSON","stringify","likes","prevBlogs","map","blog","id","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","liked_by","onClick","_c","Likes","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction BlogList() {\n  const [blogs, setBlogs] = useState([]);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        console.log(data); // log the data to the console\n        setBlogs(data); // update the state with the fetched data\n\n      } catch (error) {\n        console.error(\"Error fetching blogs:\", error);\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n\n  const handleLike = async (blogId) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8000/api/blog/likes/update/${blogId}/`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            likes: 1,\n          }),\n        }\n      );\n      const data = await response.json();\n      console.log(data); // log the updated data to the console\n\n      // Update the state to reflect the updated likes count\n      setBlogs(prevBlogs => prevBlogs.map(blog => {\n        if (blog.id === blogId) {\n          return {...blog, likes: data.likes};\n        } else {\n          return blog;\n        }\n      }));\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      {blogs.map((blog) => (\n        <div key={blog.id}>\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n          <p>likes {blog.likes}</p>\n          <p>liked by {blog.liked_by}</p>\n          <div>\n            <button onClick={() => handleLike(blog.id)}>Like</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Likes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}