{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map(blog => ({\n          ...blog,\n          liked: false\n        }));\n        setBlogs(blogsWithLiked);\n        setLikedBy(blogsWithLiked.liked_by);\n        setCountLikes(blogsWithLiked);\n        setAuthorId(blogsWithLiked.author);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const handleLikeClick = () => {\n    if (liked) {\n      // User has already liked the post, so remove like\n      setLiked(false);\n      const newLikes = countLikes - 1;\n      setCountLikes(newLikes);\n      setLikes(newLikes);\n      console.log(newLikes);\n    } else {\n      // User has not liked the post, so add like\n      setLiked(true);\n      const newLikes = countLikes + 1;\n      setCountLikes(newLikes);\n      setLikes(newLikes);\n      console.log(newLikes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLikeClick,\n      children: [/*#__PURE__*/_jsxDEV(FavoriteIcon, {\n        color: liked ? \"error\" : \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"a/7iBQF45SSKI/+nlcf771KS+vA=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","IconButton","FavoriteIcon","jsxDEV","_jsxDEV","Likes","_s","liked","setLiked","likes","setLikes","countLikes","setCountLikes","useEffect","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","blogsWithLiked","map","blog","setBlogs","setLikedBy","liked_by","setAuthorId","author","error","console","setError","handleLikeClick","newLikes","log","children","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\nexport default function Likes() {\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n\n\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n        setBlogs(blogsWithLiked);\n        setLikedBy(blogsWithLiked.liked_by);\n        setCountLikes(blogsWithLiked);\n        setAuthorId(blogsWithLiked.author);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n  \n  const handleLikeClick = () => {\n    if (liked) {\n      // User has already liked the post, so remove like\n      setLiked(false);\n      const newLikes = countLikes - 1;\n      setCountLikes(newLikes);\n      setLikes(newLikes)\n      console.log(newLikes)\n    } else {\n      // User has not liked the post, so add like\n      setLiked(true);\n      const newLikes = countLikes + 1;\n      setCountLikes(newLikes);\n      setLikes(newLikes)\n      console.log(newLikes)\n    }\n  };\n  \n  return (\n    <div>\n      <IconButton onClick={handleLikeClick}>\n        <FavoriteIcon color={liked ? \"error\" : \"inherit\"} />\n        <span>{likes}</span>\n      </IconButton>\n    </div>\n  );\n}\n\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAI/Ca,SAAS,CAAC,MAAM;IACd,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;UAC/D;QACF,CAAC,CAAC;QAEF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;;QAElC;QACA,MAAMC,cAAc,GAAGF,IAAI,CAACG,GAAG,CAAEC,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAElB,KAAK,EAAE;QAAM,CAAC,CAAC,CAAC;QAEtEmB,QAAQ,CAACH,cAAc,CAAC;QACxBI,UAAU,CAACJ,cAAc,CAACK,QAAQ,CAAC;QACnChB,aAAa,CAACW,cAAc,CAAC;QAC7BM,WAAW,CAACN,cAAc,CAACO,MAAM,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBE,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC;IAEDnB,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI3B,KAAK,EAAE;MACT;MACAC,QAAQ,CAAC,KAAK,CAAC;MACf,MAAM2B,QAAQ,GAAGxB,UAAU,GAAG,CAAC;MAC/BC,aAAa,CAACuB,QAAQ,CAAC;MACvBzB,QAAQ,CAACyB,QAAQ,CAAC;MAClBH,OAAO,CAACI,GAAG,CAACD,QAAQ,CAAC;IACvB,CAAC,MAAM;MACL;MACA3B,QAAQ,CAAC,IAAI,CAAC;MACd,MAAM2B,QAAQ,GAAGxB,UAAU,GAAG,CAAC;MAC/BC,aAAa,CAACuB,QAAQ,CAAC;MACvBzB,QAAQ,CAACyB,QAAQ,CAAC;MAClBH,OAAO,CAACI,GAAG,CAACD,QAAQ,CAAC;IACvB;EACF,CAAC;EAED,oBACE/B,OAAA;IAAAiC,QAAA,eACEjC,OAAA,CAACH,UAAU;MAACqC,OAAO,EAAEJ,eAAgB;MAAAG,QAAA,gBACnCjC,OAAA,CAACF,YAAY;QAACqC,KAAK,EAAEhC,KAAK,GAAG,OAAO,GAAG;MAAU;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpDvC,OAAA;QAAAiC,QAAA,EAAO5B;MAAK;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACT;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT;AAEV;AAACrC,EAAA,CA5DuBD,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}