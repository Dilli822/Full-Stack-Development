{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [blogs, setBlogs] = useState();\n  const [likedby, setLikedBy] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  const [authorId, setAuthorId] = useState(0);\n  const [error, setError] = useState();\n  const handleLikeClick = () => {\n    if (liked) {\n      // User has already liked the post, so remove like\n      setLiked(false);\n      setLikes(prevLikes => prevLikes - 1);\n    } else {\n      // User has not liked the post, so add like\n      setLiked(true);\n      setLikes(prevLikes => prevLikes + 1);\n    }\n  };\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map(blog => ({\n          ...blog,\n          liked: false\n        }));\n        setBlogs(blogsWithLiked);\n        setLikedBy(blogsWithLiked.liked_by);\n        setCountLikes(blogsWithLiked);\n        setAuthorId(blogsWithLiked.author);\n        console.log(\"likes --->\", blogsWithLiked);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLikeClick,\n      children: [/*#__PURE__*/_jsxDEV(FavoriteIcon, {\n        color: liked ? \"error\" : \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"+Cd6kHg9C9bOGgJGVSdaKVP7OZg=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","jsxDEV","_jsxDEV","Likes","_s","liked","setLiked","likes","setLikes","blogs","setBlogs","likedby","setLikedBy","countLikes","setCountLikes","authorId","setAuthorId","error","setError","handleLikeClick","prevLikes","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","blogsWithLiked","map","blog","liked_by","author","console","log","children","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\nexport default function Likes() {\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [blogs, setBlogs] = useState();\n  const [likedby, setLikedBy] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  const [authorId, setAuthorId] = useState(0);\n  const [error, setError] = useState();\n\n\n  const handleLikeClick = () => {\n    if (liked) {\n      // User has already liked the post, so remove like\n      setLiked(false);\n      setLikes((prevLikes) => prevLikes - 1);\n    } else {\n      // User has not liked the post, so add like\n      setLiked(true);\n      setLikes((prevLikes) => prevLikes + 1);\n    }\n  };\n\n    useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n        setBlogs(blogsWithLiked);\n        setLikedBy(blogsWithLiked.liked_by);\n        setCountLikes(blogsWithLiked);\n        setAuthorId(blogsWithLiked.author);\n        console.log(\"likes --->\", blogsWithLiked);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n\n  return (\n    <div>\n      <IconButton onClick={handleLikeClick}>\n        <FavoriteIcon color={liked ? \"error\" : \"inherit\"} />\n        <span>{likes}</span>\n      </IconButton>\n    </div>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}