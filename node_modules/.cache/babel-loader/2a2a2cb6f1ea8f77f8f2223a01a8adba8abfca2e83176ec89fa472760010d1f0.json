{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Update() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [selectedBlogId, setSelectedBlogId] = useState('');\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n  const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n  const [newBlogImage, setNewBlogImage] = useState(null);\n  const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/blog/list/\", {\n      headers: {}\n    }).then(response => {\n      setBlogs(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const handleUpdate = () => {\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n      content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n      authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n    };\n    const formData = new FormData();\n    formData.append('title', updatedBlog.title);\n    formData.append('content', updatedBlog.content);\n    formData.append('authorName', updatedBlog.authorName);\n    formData.append('image', updatedBlogImage);\n    fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: formData\n    }).then(response => response.json()).then(data => {\n      const index = blogs.findIndex(blog => blog.id === data.id);\n      const newBlogs = [...blogs];\n      newBlogs[index] = data;\n      setBlogs(newBlogs);\n      setSelectedBlogId('');\n      setUpdatedBlogTitle(undefined);\n      setUpdatedBlogContent(undefined);\n      setUpdatedBlogAuthorName(undefined);\n      setUpdatedBlogImage(null);\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Update, \"tAgEQ0MrzC5+jDcKwdBuugfAINE=\");\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Update","_s","blogs","setBlogs","selectedBlogId","setSelectedBlogId","updatedBlogTitle","setUpdatedBlogTitle","undefined","updatedBlogContent","setUpdatedBlogContent","updatedBlogAuthorName","setUpdatedBlogAuthorName","newBlogImage","setNewBlogImage","updatedBlogImage","setUpdatedBlogImage","imageUrl","setImageUrl","get","headers","then","response","data","catch","error","console","log","handleUpdate","updatedBlog","id","title","find","blog","content","authorName","formData","FormData","append","fetch","method","localStorage","getItem","body","json","index","findIndex","newBlogs","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Update() {\n  const [blogs, setBlogs] = useState([]);\n  const [selectedBlogId, setSelectedBlogId] = useState('');\n  const [updatedBlogTitle, setUpdatedBlogTitle] = useState(undefined);\n  const [updatedBlogContent, setUpdatedBlogContent] = useState(undefined);\n  const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState(undefined);\n  \n  const [newBlogImage, setNewBlogImage] = useState(null);\n  const [updatedBlogImage, setUpdatedBlogImage] = useState(null);\n\n  const [imageUrl, setImageUrl] = useState(null);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/blog/list/\", \n    {\n      headers: {\n        \n      }\n    })\n      .then((response) => {\n        setBlogs(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\nconst handleUpdate = () => {\n  const updatedBlog = {\n    id: selectedBlogId,\n    title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n    content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n    authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n  }\n\n  const formData = new FormData();\n  formData.append('title', updatedBlog.title);\n  formData.append('content', updatedBlog.content);\n  formData.append('authorName', updatedBlog.authorName);\n  formData.append('image', updatedBlogImage);\n\n  fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n    },\n    body: formData\n  })\n  .then(response => response.json())\n  .then(data => {\n    const index = blogs.findIndex(blog => blog.id === data.id)\n    const newBlogs = [...blogs]\n    newBlogs[index] = data\n    setBlogs(newBlogs)\n    setSelectedBlogId('')\n    setUpdatedBlogTitle(undefined)\n    setUpdatedBlogContent(undefined)\n    setUpdatedBlogAuthorName(undefined)\n    setUpdatedBlogImage(null)\n  })\n  .catch(error => console.error(error))\n}\n\n\n  return(\n    <div>\n\n\n      <div>\n      {blogs.map((blog) => (\n        <div key={blog.id}>\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n        </div>\n      ))}\n    </div>\n \n\n    </div>\n  )\n}\n\nexport default Update;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}