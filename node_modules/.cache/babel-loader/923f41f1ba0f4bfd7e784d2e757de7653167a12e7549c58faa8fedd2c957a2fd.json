{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/signup.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n\n// function Signup() {\n//     const [username, setUsername] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [confirmPassword, setConfirmPassword] = useState(\"\");\n//     const [passwordValidation, setPasswordValidation] = useState(\"\");\n//     const [emailValidation, setEmailValidation] = useState(\"\");\n//     const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n//     const [register, setRegister] = useState(false);\n//     const [message, setMessage] = useState(\"\");\n//     const [apiError, setApiError] = useState(\"\");\n//     const [userErrorMessage,setUserErrorMessage] = useState(\"\");\n//     const [usernameExistsError, setUsernameExistsError] = useState(null);\n//     const [errorMsg, setErrorMsg] = useState(\"\");\n//     const [errorMessage, setErrorMessage] = useState('');\n//     const [emailExist,setEmailExist] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         // added check for empty input fields\n//         if(!username || !password || !email || !confirmPassword) {setErrorMsg(\"Please Fill the Input!\")}\n\n//         const fetchdata = fetch(\"http://localhost:8000/api/register/\", {\n//             method: \"POST\",\n//             headers: { \"Content-Type\": \"application/json\" },\n//             body: JSON.stringify({ username, email, password }),\n//             }).then((response) => {\n//                 response.json().then((data) => {\n//                     console.log(data);\n//                     if (data.username) {\n//                       console.log(data.username);\n//                       setErrorMessage(data.username);\n//                     } else if (data.email) {\n//                       console.log(data.email);\n//                       setEmailExist(data.email);\n//                     }\n//                   }).catch(error => {\n//                     console.error(error);\n//             });\n\n//                 if (response.status == 201 || response.ok) {\n//                     setRegister(true);\n//                     setMessage(\"Successfully signed up! Please wait while you are redirected to the login page...\");\n//                     setTimeout(() => {\n//                         navigate(\"/login\");\n//                     }, 1500);\n//                 } else if (response.status === 409) {\n//                   // setUserErrorMessage(response.message);\n//                   setErrorMessage(\"USERNAME EXISTS\");\n//                   throw new Error('Username is already taken');\n//                 } else if(response.status == 400){\n//                     // setApiError(\"Bad request! An error occurred while signing up. Please try again.\");\n//                 }\n//                 else {\n//                   // console.log(response.JSON()); \n//                   setApiError(\"Something went wrong!\");\n//                 }\n//             })\n\n//             .catch((error) => {\n//                 console.error(error);\n//                 console.log(error.message);\n\n//             });\n//     };\n\n//     const handleUsernameChange = (event) => {\n\n//         setUsername(event.target.value);\n//     };\n\n//     const handleEmailChange = (event) => {\n//       const { value } = event.target;\n//       setEmail(value);\n\n//       // Email validation using regular expression\n//       const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n//       (!emailRegex.test(value)) ? setEmailValidation('Please enter a valid email address.') :  setEmailValidation('');\n//       setEmail(event.target.value);\n//     };\n\n//     const handlePasswordChange = (event) => {\n//         setPassword(event.target.value);\n//         const passwordRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n//         event.target.value.length <= 8 && !passwordRegex.test(password) ? setPasswordValidation(\"Password must contain at least 8 characters including 1 uppercase, 1 lowercase, 1 digit and 1 special character\") : setPasswordValidation(\"\");\n//     };\n\n//     const handleConfirmPasswordChange = (event) => {\n//         setConfirmPassword(event.target.value);\n//         event.target.value !== password ? setConfirmPwdMsg(\"Passwords do not match\") : setConfirmPwdMsg(\"\");\n//     };\n\n//     return (\n//         <div>\n//             {register ? (\n//                 <div>\n//                     <h4>{message}</h4>\n//                 </div>\n//             ) : (\n//                 <form onSubmit={handleSubmit} style={{ }}>\n//                     <div>                   \n//                         {/* <label htmlFor=\"username\">Username:</label> */}\n//                         <div className=\"validationError\">\n//                         {/* {userErrorMessage} {usernameExistsError && <p>{usernameExistsError}</p>}  */}\n//                         {/* {errorMessage && <div className=\"validationError\">{errorMessage}</div>}  */}\n//                         {errorMsg}</div>\n//                         <input type=\"text\" id=\"username\" value={username} onChange={handleUsernameChange} placeholder=\"Enter Username\"/>\n//                     </div>\n//                     <div>\n\n//                         {/* <label htmlFor=\"email\">Email:</label> */}\n//                         <div className=\"validationError\">{emailValidation} {errorMsg} {emailExist}  </div>\n//                         <input type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Enter Email\"/>\n//                     </div>\n//                     <div>\n//                         {/* <label htmlFor=\"password\">Password:</label> */}\n//                         <div className=\"validationError\">{passwordValidation && <span>{passwordValidation}</span>} {errorMsg} </div>\n//                         <input type=\"password\" id=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Enter Password\"/>\n//                     </div>\n//                     <div>\n//                         {/* <label htmlFor=\"password\">Confirm Password:</label> */}\n//                         <div className=\"validationError\">{confirmPwdMsg && <span>{confirmPwdMsg}</span>} {errorMsg} </div>\n//                         <input type=\"password\" id=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} placeholder=\"Enter Confirm Password\"/>\n//                     </div>\n//                     <br></br>\n\n//                     <div className=\"validationError\">{apiError && <h4>{apiError}</h4>}</div>\n\n//                     <div>\n//                         <button type=\"submit\">Signup</button>\n//                         <Link to=\"/login\"> <a>Already Have an Account? Login </a></Link>\n//                     </div>\n//                 </form>\n//             )}\n\n//         </div>\n//     );\n// }\n\n// export default Signup;\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Login from './login';\nimport { Link, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Copyright(props) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordValidation, setPasswordValidation] = useState(\"\");\n  const [emailValidation, setEmailValidation] = useState(\"\");\n  const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n  const [register, setRegister] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [apiError, setApiError] = useState(\"\");\n  const [userErrorMessage, setUserErrorMessage] = useState(\"\");\n  const [usernameExistsError, setUsernameExistsError] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n  const [emailExist, setEmailExist] = useState('');\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    align: \"center\",\n    ...props,\n    children: ['Copyright Â© ', /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://mui.com/\",\n      children: \"Your Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), ' ', new Date().getFullYear(), '.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(Copyright, \"PU3DpKU7yU+F1+L/iOOUoIgwAY8=\", false, function () {\n  return [useNavigate];\n});\n_c = Copyright;\nconst theme = createTheme();\nexport default function SignUp() {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get('email'),\n      password: data.get('password')\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'secondary.main'\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"firstName\",\n                required: true,\n                fullWidth: true,\n                id: \"firstName\",\n                label: \"Username\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email Address\",\n                name: \"email\",\n                autoComplete: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                autoComplete: \"new-password\",\n                id: \"confirmPassword\",\n                value: confirmPassword,\n                onChange: handleConfirmPasswordChange,\n                placeholder: \"Enter Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                variant: \"body2\",\n                children: \"Already have an account? Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Copyright, {\n        sx: {\n          mt: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SignUp;\nvar _c, _c2;\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"names":["useState","useNavigate","React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","Login","Link","Navigate","jsxDEV","_jsxDEV","Copyright","props","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","passwordValidation","setPasswordValidation","emailValidation","setEmailValidation","confirmPwdMsg","setConfirmPwdMsg","register","setRegister","message","setMessage","apiError","setApiError","userErrorMessage","setUserErrorMessage","usernameExistsError","setUsernameExistsError","errorMsg","setErrorMsg","errorMessage","setErrorMessage","emailExist","setEmailExist","navigate","variant","color","align","children","href","fileName","_jsxFileName","lineNumber","columnNumber","Date","getFullYear","_c","theme","SignUp","handleSubmit","event","preventDefault","data","FormData","currentTarget","console","log","get","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","noValidate","onSubmit","mt","container","spacing","item","xs","sm","autoComplete","name","required","fullWidth","id","label","autoFocus","type","value","onChange","handleConfirmPasswordChange","placeholder","mb","justifyContent","to","_c2","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/signup.js"],"sourcesContent":["// import { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n\n// function Signup() {\n//     const [username, setUsername] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [confirmPassword, setConfirmPassword] = useState(\"\");\n//     const [passwordValidation, setPasswordValidation] = useState(\"\");\n//     const [emailValidation, setEmailValidation] = useState(\"\");\n//     const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n//     const [register, setRegister] = useState(false);\n//     const [message, setMessage] = useState(\"\");\n//     const [apiError, setApiError] = useState(\"\");\n//     const [userErrorMessage,setUserErrorMessage] = useState(\"\");\n//     const [usernameExistsError, setUsernameExistsError] = useState(null);\n//     const [errorMsg, setErrorMsg] = useState(\"\");\n//     const [errorMessage, setErrorMessage] = useState('');\n//     const [emailExist,setEmailExist] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         // added check for empty input fields\n//         if(!username || !password || !email || !confirmPassword) {setErrorMsg(\"Please Fill the Input!\")}\n          \n\n//         const fetchdata = fetch(\"http://localhost:8000/api/register/\", {\n//             method: \"POST\",\n//             headers: { \"Content-Type\": \"application/json\" },\n//             body: JSON.stringify({ username, email, password }),\n//             }).then((response) => {\n//                 response.json().then((data) => {\n//                     console.log(data);\n//                     if (data.username) {\n//                       console.log(data.username);\n//                       setErrorMessage(data.username);\n//                     } else if (data.email) {\n//                       console.log(data.email);\n//                       setEmailExist(data.email);\n//                     }\n//                   }).catch(error => {\n//                     console.error(error);\n//             });\n\n//                 if (response.status == 201 || response.ok) {\n//                     setRegister(true);\n//                     setMessage(\"Successfully signed up! Please wait while you are redirected to the login page...\");\n//                     setTimeout(() => {\n//                         navigate(\"/login\");\n//                     }, 1500);\n//                 } else if (response.status === 409) {\n//                   // setUserErrorMessage(response.message);\n//                   setErrorMessage(\"USERNAME EXISTS\");\n//                   throw new Error('Username is already taken');\n//                 } else if(response.status == 400){\n//                     // setApiError(\"Bad request! An error occurred while signing up. Please try again.\");\n//                 }\n//                 else {\n//                   // console.log(response.JSON()); \n//                   setApiError(\"Something went wrong!\");\n//                 }\n//             })\n     \n//             .catch((error) => {\n//                 console.error(error);\n//                 console.log(error.message);\n          \n                \n//             });\n//     };\n\n//     const handleUsernameChange = (event) => {\n\n//         setUsername(event.target.value);\n//     };\n\n//     const handleEmailChange = (event) => {\n//       const { value } = event.target;\n//       setEmail(value);\n\n//       // Email validation using regular expression\n//       const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n//       (!emailRegex.test(value)) ? setEmailValidation('Please enter a valid email address.') :  setEmailValidation('');\n//       setEmail(event.target.value);\n//     };\n\n//     const handlePasswordChange = (event) => {\n//         setPassword(event.target.value);\n//         const passwordRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n//         event.target.value.length <= 8 && !passwordRegex.test(password) ? setPasswordValidation(\"Password must contain at least 8 characters including 1 uppercase, 1 lowercase, 1 digit and 1 special character\") : setPasswordValidation(\"\");\n//     };\n\n//     const handleConfirmPasswordChange = (event) => {\n//         setConfirmPassword(event.target.value);\n//         event.target.value !== password ? setConfirmPwdMsg(\"Passwords do not match\") : setConfirmPwdMsg(\"\");\n//     };\n\n//     return (\n//         <div>\n//             {register ? (\n//                 <div>\n//                     <h4>{message}</h4>\n//                 </div>\n//             ) : (\n//                 <form onSubmit={handleSubmit} style={{ }}>\n//                     <div>                   \n//                         {/* <label htmlFor=\"username\">Username:</label> */}\n//                         <div className=\"validationError\">\n//                         {/* {userErrorMessage} {usernameExistsError && <p>{usernameExistsError}</p>}  */}\n//                         {/* {errorMessage && <div className=\"validationError\">{errorMessage}</div>}  */}\n//                         {errorMsg}</div>\n//                         <input type=\"text\" id=\"username\" value={username} onChange={handleUsernameChange} placeholder=\"Enter Username\"/>\n//                     </div>\n//                     <div>\n                    \n//                         {/* <label htmlFor=\"email\">Email:</label> */}\n//                         <div className=\"validationError\">{emailValidation} {errorMsg} {emailExist}  </div>\n//                         <input type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Enter Email\"/>\n//                     </div>\n//                     <div>\n//                         {/* <label htmlFor=\"password\">Password:</label> */}\n//                         <div className=\"validationError\">{passwordValidation && <span>{passwordValidation}</span>} {errorMsg} </div>\n//                         <input type=\"password\" id=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Enter Password\"/>\n//                     </div>\n//                     <div>\n//                         {/* <label htmlFor=\"password\">Confirm Password:</label> */}\n//                         <div className=\"validationError\">{confirmPwdMsg && <span>{confirmPwdMsg}</span>} {errorMsg} </div>\n//                         <input type=\"password\" id=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} placeholder=\"Enter Confirm Password\"/>\n//                     </div>\n//                     <br></br>\n\n//                     <div className=\"validationError\">{apiError && <h4>{apiError}</h4>}</div>\n                   \n//                     <div>\n//                         <button type=\"submit\">Signup</button>\n//                         <Link to=\"/login\"> <a>Already Have an Account? Login </a></Link>\n//                     </div>\n//                 </form>\n//             )}\n            \n//         </div>\n//     );\n// }\n\n// export default Signup;\n\nimport { useState } from \"react\";\nimport {  useNavigate } from \"react-router-dom\";\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Login from './login';\nimport { Link, Navigate } from 'react-router-dom';\n\nfunction Copyright(props) {\n\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [passwordValidation, setPasswordValidation] = useState(\"\");\n    const [emailValidation, setEmailValidation] = useState(\"\");\n    const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n    const [register, setRegister] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [apiError, setApiError] = useState(\"\");\n    const [userErrorMessage,setUserErrorMessage] = useState(\"\");\n    const [usernameExistsError, setUsernameExistsError] = useState(null);\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState('');\n    const [emailExist,setEmailExist] = useState('');\n    const navigate = useNavigate();\n\n\n\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get('email'),\n      password: data.get('password'),\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={12}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"Username\"\n                  autoFocus\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                \n                  autoComplete=\"new-password\"\n                 id=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} placeholder=\"Enter Confirm Password\"\n                />\n              </Grid>\n\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link to=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAUC,WAAW,QAAQ,kBAAkB;AAC/C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C;AACA,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}