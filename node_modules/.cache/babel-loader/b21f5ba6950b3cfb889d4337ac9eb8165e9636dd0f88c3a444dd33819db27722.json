{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [selectedBlogId, setSelectedBlogId] = useState(null);\n//   const [liked, setLiked] = useState(false);\n//   const [likeCount, setLikeCount] = useState(0);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n//         setBlogs(data);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   const handleBlogClick = (id) => {\n//     const blog = blogs.find((blog) => blog.id === id);\n//     setSelectedBlogId(id);\n//     setLiked(blog.liked);\n//     setLikeCount(blog.likes);\n//   };\n\n//   const handleLikeClick = async (blog) => {\n//     const { id, liked } = blog;\n//     const newLiked = !liked;\n//     const newLikes = liked ? blog.likes - 1 : blog.likes + 1;\n\n//     try {\n//       const response = await fetch(`http://localhost:8000/api/blog/likes/update/${id}/`, {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//         },\n//         body: JSON.stringify({ liked: newLiked, likes: newLikes }),\n//       });\n\n//       const data = await response.json();\n//       const newBlogs = blogs.map((blog) => (blog.id === data.id ? data : blog));\n\n//       setBlogs(newBlogs);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Blogs</h2>\n//       <div className=\"blogs\">\n//   {blogs.map((blog) => (\n//     <div key={blog.id}>\n//       <h3>{blog.title}</h3>\n//       <p>{blog.content}</p>\n//       <p>\n//         Author: {blog.author.first_name} {blog.author.last_name}\n//       </p>\n//       <p>Likes: {blog.likes}</p>\n//       <IconButton onClick={() => handleLikeClick(blog)}>\n//         <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n//       </IconButton>\n//     </div>\n//   ))}\n// </div>\n\n//       {selectedBlogId && (\n//         <div className=\"likes\">\n//           <h3>\n//             {blogs.find((blog) => blog.id === selectedBlogId).title} - Likes:{\" \"}\n//             {likeCount}\n//           </h3>\n//           <IconButton\n//             onClick={() => {\n//               setLikeCount(likeCount + (liked ? -1 : 1));\n//               setLiked(!liked);\n//             }}\n//           >\n//             <FavoriteIcon color={liked ? \"error\" : \"primary\"} />\n//           </IconButton>\n//           <IconButton onClick={handleLikeClick}>\n//             <ShareIcon />\n//           </IconButton>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Likes;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Likes() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map(blog => ({\n          ...blog,\n          liked: false\n        }));\n        setBlogs(blogsWithLiked);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const handleLikeClick = blogId => {\n    const index = blogs.findIndex(blog => blog.id === blogId);\n    const likedBlog = {\n      ...blogs[index]\n    };\n    if (!likedBlog.liked) {\n      // If the blog post is not liked, increase the like count by 1\n      likedBlog.likes++;\n    } else {\n      // If the blog post is liked, decrease the like count by 1\n      likedBlog.likes--;\n    }\n\n    // Toggle the liked state for the blog post\n    likedBlog.liked = !likedBlog.liked;\n\n    // Update the state with the new liked state and like count\n    const newBlogs = [...blogs];\n    newBlogs[index] = likedBlog;\n    setBlogs(newBlogs);\n\n    // Update the API with the new liked state\n    fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      },\n      body: JSON.stringify({\n        liked: likedBlog.liked\n      })\n    }).then(response => response.json()).then(data => {\n      const index = blogs.findIndex(blog => blog.id === data.id);\n      const newBlogs = [...blogs];\n      newBlogs[index] = data;\n      setBlogs(newBlogs);\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogs\",\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Author: \", blog.author.first_name, \" \", blog.author.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", blog.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => handleLikeClick(blog.id),\n        children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          color: blog.liked ? \"error\" : \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n_c = Likes;\nexport default Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","ShareIcon","jsxDEV","_jsxDEV","Likes","_s","blogs","setBlogs","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","blogsWithLiked","map","blog","liked","error","console","handleLikeClick","blogId","index","findIndex","id","likedBlog","likes","newBlogs","method","body","JSON","stringify","then","catch","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","author","first_name","last_name","onClick","color","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [selectedBlogId, setSelectedBlogId] = useState(null);\n//   const [liked, setLiked] = useState(false);\n//   const [likeCount, setLikeCount] = useState(0);\n\n//   useEffect(() => {\n//     const fetchBlogs = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n//         setBlogs(data);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchBlogs();\n//   }, []);\n\n//   const handleBlogClick = (id) => {\n//     const blog = blogs.find((blog) => blog.id === id);\n//     setSelectedBlogId(id);\n//     setLiked(blog.liked);\n//     setLikeCount(blog.likes);\n//   };\n\n//   const handleLikeClick = async (blog) => {\n//     const { id, liked } = blog;\n//     const newLiked = !liked;\n//     const newLikes = liked ? blog.likes - 1 : blog.likes + 1;\n  \n//     try {\n//       const response = await fetch(`http://localhost:8000/api/blog/likes/update/${id}/`, {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//         },\n//         body: JSON.stringify({ liked: newLiked, likes: newLikes }),\n//       });\n  \n//       const data = await response.json();\n//       const newBlogs = blogs.map((blog) => (blog.id === data.id ? data : blog));\n  \n//       setBlogs(newBlogs);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n  \n\n//   return (\n//     <div>\n//       <h2>Blogs</h2>\n//       <div className=\"blogs\">\n//   {blogs.map((blog) => (\n//     <div key={blog.id}>\n//       <h3>{blog.title}</h3>\n//       <p>{blog.content}</p>\n//       <p>\n//         Author: {blog.author.first_name} {blog.author.last_name}\n//       </p>\n//       <p>Likes: {blog.likes}</p>\n//       <IconButton onClick={() => handleLikeClick(blog)}>\n//         <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n//       </IconButton>\n//     </div>\n//   ))}\n// </div>\n\n//       {selectedBlogId && (\n//         <div className=\"likes\">\n//           <h3>\n//             {blogs.find((blog) => blog.id === selectedBlogId).title} - Likes:{\" \"}\n//             {likeCount}\n//           </h3>\n//           <IconButton\n//             onClick={() => {\n//               setLikeCount(likeCount + (liked ? -1 : 1));\n//               setLiked(!liked);\n//             }}\n//           >\n//             <FavoriteIcon color={liked ? \"error\" : \"primary\"} />\n//           </IconButton>\n//           <IconButton onClick={handleLikeClick}>\n//             <ShareIcon />\n//           </IconButton>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Likes;\n\n\nfunction Likes() {\n  const [blogs, setBlogs] = useState([]);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n        setBlogs(blogsWithLiked);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n\n  const handleLikeClick = (blogId) => {\n    const index = blogs.findIndex((blog) => blog.id === blogId);\n    const likedBlog = { ...blogs[index] };\n\n    if (!likedBlog.liked) {\n      // If the blog post is not liked, increase the like count by 1\n      likedBlog.likes++;\n    } else {\n      // If the blog post is liked, decrease the like count by 1\n      likedBlog.likes--;\n    }\n\n    // Toggle the liked state for the blog post\n    likedBlog.liked = !likedBlog.liked;\n\n    // Update the state with the new liked state and like count\n    const newBlogs = [...blogs];\n    newBlogs[index] = likedBlog;\n\n    setBlogs(newBlogs);\n\n    // Update the API with the new liked state\n    fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n      },\n      body: JSON.stringify({\n        liked: likedBlog.liked,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const index = blogs.findIndex((blog) => blog.id === data.id);\n        const newBlogs = [...blogs];\n        newBlogs[index] = data;\n\n        setBlogs(newBlogs);\n      })\n      .catch((error) => console.error(error));\n  };\n\n  return (\n    <div className=\"blogs\">\n      {blogs.map((blog) => (\n        <div key={blog.id}>\n          <h3>{blog.title}</h3>\n          <p>{blog.content}</p>\n          <p>\n            Author: {blog.author.first_name} {blog.author.last_name}\n          </p>\n          <p>Likes: {blog.likes}</p>\n          <IconButton onClick={() => handleLikeClick(blog.id)}>\n            <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n          </IconButton>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Likes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}