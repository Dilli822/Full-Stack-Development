{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Update() {\n  fetch(\"http://localhost:8000/api/blog/create/\", {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n    },\n    body: formData // Use the form data instead of JSON.stringify\n  }).then(response => response.json()).then(data => {\n    setBlogs([...blogs, data]);\n    setNewBlogTitle(\"\");\n    setNewBlogContent(\"\");\n    setNewBlogAuthorName(\"\");\n    setNewBlogImage(null); // Reset the image state after submitting the form\n  });\n\n  const handleUpdate = () => {\n    const updatedBlog = {\n      id: selectedBlogId,\n      title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n      content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n      authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n    };\n    const formData = new FormData();\n    formData.append('title', updatedBlog.title);\n    formData.append('content', updatedBlog.content);\n    formData.append('authorName', updatedBlog.authorName);\n    formData.append('image', updatedBlogImage);\n    fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: formData\n    }).then(response => response.json()).then(data => {\n      const index = blogs.findIndex(blog => blog.id === data.id);\n      const newBlogs = [...blogs];\n      newBlogs[index] = data;\n      setBlogs(newBlogs);\n      setSelectedBlogId('');\n      setUpdatedBlogTitle(undefined);\n      setUpdatedBlogContent(undefined);\n      setUpdatedBlogAuthorName(undefined);\n      setUpdatedBlogImage(null);\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["Update","fetch","method","headers","Authorization","localStorage","getItem","body","formData","then","response","json","data","setBlogs","blogs","setNewBlogTitle","setNewBlogContent","setNewBlogAuthorName","setNewBlogImage","handleUpdate","updatedBlog","id","selectedBlogId","title","updatedBlogTitle","undefined","find","blog","content","updatedBlogContent","authorName","updatedBlogAuthorName","FormData","append","updatedBlogImage","index","findIndex","newBlogs","setSelectedBlogId","setUpdatedBlogTitle","setUpdatedBlogContent","setUpdatedBlogAuthorName","setUpdatedBlogImage","catch","error","console","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/update.js"],"sourcesContent":["function Update() {\nfetch(\"http://localhost:8000/api/blog/create/\", {\n  method: \"POST\",\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n  },\n  body: formData, // Use the form data instead of JSON.stringify\n})\n  .then((response) => response.json())\n  .then((data) => {\n    setBlogs([...blogs, data]);\n    setNewBlogTitle(\"\");\n    setNewBlogContent(\"\");\n    setNewBlogAuthorName(\"\");\n    setNewBlogImage(null); // Reset the image state after submitting the form\n  })\n\nconst handleUpdate = () => {\n  const updatedBlog = {\n    id: selectedBlogId,\n    title: updatedBlogTitle === undefined ? blogs.find(blog => blog.id === selectedBlogId).title : updatedBlogTitle,\n    content: updatedBlogContent === undefined ? blogs.find(blog => blog.id === selectedBlogId).content : updatedBlogContent,\n    authorName: updatedBlogAuthorName === undefined ? blogs.find(blog => blog.id === selectedBlogId).authorName : updatedBlogAuthorName\n  }\n\n  const formData = new FormData();\n  formData.append('title', updatedBlog.title);\n  formData.append('content', updatedBlog.content);\n  formData.append('authorName', updatedBlog.authorName);\n  formData.append('image', updatedBlogImage);\n\n  fetch(`http://localhost:8000/api/blog/update/${updatedBlog.id}/`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n    },\n    body: formData\n  })\n  .then(response => response.json())\n  .then(data => {\n    const index = blogs.findIndex(blog => blog.id === data.id)\n    const newBlogs = [...blogs]\n    newBlogs[index] = data\n    setBlogs(newBlogs)\n    setSelectedBlogId('')\n    setUpdatedBlogTitle(undefined)\n    setUpdatedBlogContent(undefined)\n    setUpdatedBlogAuthorName(undefined)\n    setUpdatedBlogImage(null)\n  })\n  .catch(error => console.error(error))\n}\n\n\n  return(\n    <div>\n\n    </div>\n  )\n}\n\nexport default Update;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}