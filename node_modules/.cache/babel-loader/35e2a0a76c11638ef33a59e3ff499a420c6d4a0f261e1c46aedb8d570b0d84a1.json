{"ast":null,"code":"// import React, { useState, useEffect } from 'react'\n\n// export default function UpdateBlog() {\n//   const [blogs, setBlogs] = useState([])\n//   const [loading, setLoading] = useState(true)\n\n//   const [selectedBlogId, setSelectedBlogId] = useState('')\n//   const [updatedBlogTitle, setUpdatedBlogTitle] = useState('')\n//   const [updatedBlogContent, setUpdatedBlogContent] = useState('')\n//   const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState('')\n\n//   useEffect(() => {\n//     fetch('http://localhost:8000/api/blog/', {\n//       headers: {\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       }\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       setBlogs(data)\n//       setLoading(false)\n//     })\n//     .catch(error => console.error(error))\n//   }, [])\n\n//   const handleUpdate = () => {\n//     const updatedBlog = {\n//       id: selectedBlogId,\n//       title: updatedBlogTitle || blogs.find(blog => blog.id === selectedBlogId).title,\n//       content: updatedBlogContent || blogs.find(blog => blog.id === selectedBlogId).content,\n//       authorName: updatedBlogAuthorName || blogs.find(blog => blog.id === selectedBlogId).authorName\n//     }\n\n//     fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       },\n//       body: JSON.stringify(updatedBlog)\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       const index = blogs.findIndex(blog => blog.id === data.id)\n//       const newBlogs = [...blogs]\n//       newBlogs[index] = data\n//       setBlogs(newBlogs)\n//       setSelectedBlogId('')\n//       setUpdatedBlogTitle('')\n//       setUpdatedBlogContent('')\n//       setUpdatedBlogAuthorName('')\n//     })\n//     .catch(error => console.error(error))\n//   }\n\n//   if (loading) {\n//     return <p>Loading...</p>\n//   }\n\n//   return (\n//     <div>\n//       <h1>Blog List</h1>\n//       <ul>\n//         {blogs.map(blog => (\n//           <li key={blog.id}>\n//             <h2>{blog.title}</h2>\n//             <p>{blog.content}</p>\n//             <p>Author: {blog.authorName}</p>\n//             <button onClick={() => setSelectedBlogId(blog.id)}>Edit</button>\n//           </li>\n//         ))}\n//       </ul>\n//       {selectedBlogId && (\n//   <div>\n//     <h2>Edit Blog</h2>\n//     {blogs.map(blog => {\n//       if (blog.id === selectedBlogId) {\n//         return (\n//           <div key={blog.id}>\n//             <label>\n//               Title:\n//               <input\n//                 type=\"text\"\n//                 value={updatedBlogTitle || blog.title}\n//                 onChange={(event) => setUpdatedBlogTitle(event.target.value)}\n//               />\n//             </label>\n//             <br />\n//             <label>\n//               Content:\n//               <textarea\n//                 value={updatedBlogContent || blog.content}\n//                 onChange={(event) => setUpdatedBlogContent(event.target.value)}\n//               />\n//             </label>\n//             <br />\n//             <label>\n//               Author Name:\n//               <input\n//                 type=\"text\"\n//                 value={updatedBlogAuthorName || blog.authorName}\n//                 onChange={(event) => setUpdatedBlogAuthorName(event.target.value)}\n//               />\n//             </label>\n//             <br />\n//           </div>\n//         );\n//       } else {\n//         return null;\n//       }\n//     })}\n//     <button onClick={handleUpdate}>Save Changes</button>\n//     <button onClick={() => setSelectedBlogId('')}>Cancel</button>\n//   </div>\n// )}\n\n// </div>\n// )}\n\nexport default UpdateBlog;","map":{"version":3,"names":["UpdateBlog"],"sources":["/Users/dillirai/Downloads/drf-blog-api-master/django/frontend/src/components/blogapp/update.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react'\n\n// export default function UpdateBlog() {\n//   const [blogs, setBlogs] = useState([])\n//   const [loading, setLoading] = useState(true)\n\n//   const [selectedBlogId, setSelectedBlogId] = useState('')\n//   const [updatedBlogTitle, setUpdatedBlogTitle] = useState('')\n//   const [updatedBlogContent, setUpdatedBlogContent] = useState('')\n//   const [updatedBlogAuthorName, setUpdatedBlogAuthorName] = useState('')\n\n//   useEffect(() => {\n//     fetch('http://localhost:8000/api/blog/', {\n//       headers: {\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       }\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       setBlogs(data)\n//       setLoading(false)\n//     })\n//     .catch(error => console.error(error))\n//   }, [])\n\n//   const handleUpdate = () => {\n//     const updatedBlog = {\n//       id: selectedBlogId,\n//       title: updatedBlogTitle || blogs.find(blog => blog.id === selectedBlogId).title,\n//       content: updatedBlogContent || blogs.find(blog => blog.id === selectedBlogId).content,\n//       authorName: updatedBlogAuthorName || blogs.find(blog => blog.id === selectedBlogId).authorName\n//     }\n  \n//     fetch(`http://localhost:8000/api/blog/${updatedBlog.id}/`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n//       },\n//       body: JSON.stringify(updatedBlog)\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       const index = blogs.findIndex(blog => blog.id === data.id)\n//       const newBlogs = [...blogs]\n//       newBlogs[index] = data\n//       setBlogs(newBlogs)\n//       setSelectedBlogId('')\n//       setUpdatedBlogTitle('')\n//       setUpdatedBlogContent('')\n//       setUpdatedBlogAuthorName('')\n//     })\n//     .catch(error => console.error(error))\n//   }\n\n//   if (loading) {\n//     return <p>Loading...</p>\n//   }\n\n//   return (\n//     <div>\n//       <h1>Blog List</h1>\n//       <ul>\n//         {blogs.map(blog => (\n//           <li key={blog.id}>\n//             <h2>{blog.title}</h2>\n//             <p>{blog.content}</p>\n//             <p>Author: {blog.authorName}</p>\n//             <button onClick={() => setSelectedBlogId(blog.id)}>Edit</button>\n//           </li>\n//         ))}\n//       </ul>\n//       {selectedBlogId && (\n//   <div>\n//     <h2>Edit Blog</h2>\n//     {blogs.map(blog => {\n//       if (blog.id === selectedBlogId) {\n//         return (\n//           <div key={blog.id}>\n//             <label>\n//               Title:\n//               <input\n//                 type=\"text\"\n//                 value={updatedBlogTitle || blog.title}\n//                 onChange={(event) => setUpdatedBlogTitle(event.target.value)}\n//               />\n//             </label>\n//             <br />\n//             <label>\n//               Content:\n//               <textarea\n//                 value={updatedBlogContent || blog.content}\n//                 onChange={(event) => setUpdatedBlogContent(event.target.value)}\n//               />\n//             </label>\n//             <br />\n//             <label>\n//               Author Name:\n//               <input\n//                 type=\"text\"\n//                 value={updatedBlogAuthorName || blog.authorName}\n//                 onChange={(event) => setUpdatedBlogAuthorName(event.target.value)}\n//               />\n//             </label>\n//             <br />\n//           </div>\n//         );\n//       } else {\n//         return null;\n//       }\n//     })}\n//     <button onClick={handleUpdate}>Save Changes</button>\n//     <button onClick={() => setSelectedBlogId('')}>Cancel</button>\n//   </div>\n// )}\n\n// </div>\n// )}\n\n\nexport default UpdateBlog;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}