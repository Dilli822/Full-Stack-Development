{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport CommentIcon from \"@mui/icons-material/Comment\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Popover from \"@mui/material/Popover\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { maxHeight } from \"@mui/system\";\n\n// const Likes = () => {\n//     const [blogs, setBlogs] = useState([]);\n//     const [likes, setLikes] = useState([]);\n//     const [liked, setLiked] = useState([]);\n//     const [comments, setComments] = useState([]);\n\n//     const [anchorEls, setAnchorEls] = useState(new Array(blogs.length).fill(null));\n//     const [shareUrls, setShareUrls] = useState(new Array(blogs.length).fill(\"\"));\n//     const [copiedStates, setCopiedStates] = useState(new Array(blogs.length).fill(false));\n//     const [videoLoading, setVideoLoading] = useState(true);\n\n//     const [mainLoading, setMainLoading] = useState(false);\n\n//     const copyToClipboard = (text) => {\n//         navigator.clipboard.writeText(text);\n//         setCopiedStates(new Array(blogs.length).fill(false)); // Reset copiedStates to all false\n//         setCopiedStates(copiedStates.map((state, index) => (index === copiedStates.indexOf(true) ? true : state))); // Set only the currently copied share button's copied state to true\n//     };\n\n//     const cancelCopy = () => {\n//         setCopiedStates(new Array(blogs.length).fill(false));\n//     };\n\n//     useEffect(() => {\n//         const fetchLikes = async () => {\n//             try {\n//                 const response = await fetch(\"http://localhost:8000/api/blog/likes/\", {\n//                     headers: {\n//                         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                     },\n//                 });\n\n//                 const data = await response.json();\n//                 const blogLikes = data.map((blog) => {\n//                     return {\n//                         id: blog.id,\n//                         likes: blog.likes,\n//                         liked_state: blog.liked_state,\n//                         title: blog.title,\n//                         image: blog.image,\n//                         content: blog.content,\n//                         authorName: blog.authorName,\n//                         created_at: blog.created_at,\n//                         updated_at: blog.updated_at,\n//                         total_comments: blog.total_comments,\n//                     };\n//                 });\n\n//                 setBlogs(blogLikes);\n//                 setLikes(blogLikes.map((blog) => blog.likes));\n//                 setLiked(blogLikes.map((blog) => blog.liked_state));\n//                 setMainLoading(false); \n//                 console.log(\"blog likes with totsl commenets \", blogLikes);\n//                 setShareUrls(blogLikes.map((blog) => `${window.location.origin}/blog/${blog.id}`));\n//             } catch (error) {\n//                 setMainLoading(true); \n//                 console.error(error);\n//             }\n//         };\n\n//         fetchLikes();\n//     }, []);\n//     useEffect(() => {\n//         fetchComments();\n//     }, []);\n\n//     const fetchComments = async () => {\n//         try {\n//             const response = await fetch(\"http://localhost:8000/api/blog/comments/\", {\n//                 method: \"GET\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                 },\n//             });\n//             if (response.ok) {\n//                 const data = await response.json();\n//                 console.log(\"comments are \", data);\n//                 setComments(data);\n//             } else {\n//                 console.error(\"Failed to fetch comments\");\n//             }\n//         } catch (error) {\n//             console.error(\"Error:\", error);\n//         }\n//     };\n//     const handleLike = async (blogId, currentLikedState, index) => {\n//         try {\n//             const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n//                 method: \"PUT\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                 },\n//                 body: JSON.stringify({ liked: !currentLikedState }),\n//             });\n\n//             if (response.ok) {\n//                 // update liked state for the current blog\n//                 const updatedBlogLikes = [...blogs];\n//                 updatedBlogLikes[index].liked_state = !currentLikedState;\n//                 if (currentLikedState) {\n//                     updatedBlogLikes[index].likes--;\n//                 } else {\n//                     updatedBlogLikes[index].likes++;\n//                 }\n//                 setBlogs(updatedBlogLikes);\n\n//                 // update total likes count\n//                 const updatedLikes = [...likes];\n//                 if (currentLikedState) {\n//                     updatedLikes[index]--;\n//                 } else {\n//                     updatedLikes[index]++;\n//                 }\n//                 setLikes(updatedLikes);\n\n//                 // update liked state\n//                 const updatedLiked = [...liked];\n//                 updatedLiked[index] = !currentLikedState;\n//                 setLiked(updatedLiked);\n//             } else {\n//                 console.error(\"Error updating like state\");\n//             }\n//         } catch (error) {\n//             console.error(error);\n//         }\n//     };\n\n//     function playVideo(videoId) {\n//     const video = document.getElementById(videoId);\n//     video.play();\n// }\n\n// function pauseVideo(videoId) {\n//     const video = document.getElementById(videoId);\n//     video.pause();\n// }\n\n//     useEffect(() => {\n//         const fetchBlogsAndComments = async () => {\n//             try {\n//                 const response = await fetch(\"http://localhost:8000/api/blog-comments/\", {\n//                     headers: {\n//                         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                     },\n//                 });\n\n//                 if (response.ok) {\n//                     const data = await response.json();\n//                     setBlogs(data.blogs);\n//                     setComments(data.comments);\n//                 } else {\n//                     console.error(\"Failed to fetch blogs and comments\");\n//                 }\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         };\n\n//         fetchBlogsAndComments();\n//     }, []);\n\n//     function playVideo(videoId) {\n//         const video = document.getElementById(videoId);\n//         video.play();\n//     }\n\n//     function pauseVideo(videoId) {\n//         const video = document.getElementById(videoId);\n//         video.pause();\n//     }\n\n//     return (\n//         <div>\n//         <div>\n//           {mainLoading ? (\n//             <p>Loading...</p>\n//           ) : (\n//             blogs\n//               .sort((a, b) => b.id - a.id)\n//               .map((blog, index) => (\n//                 <div key={blog.id}>\n//                   <h2>{blog.title}</h2>\n//                   <h3>Blog Id: {blog.id}</h3>\n\n//                   <div style={{ width: \"100%\", height: \"100%\" }}>\n//                     <img\n//                       src={`http://localhost:8000${blog.image}`}\n//                       style={{ width: \"100%\", maxWidth: \"100%\" }}\n//                       alt=\"Blog Image\"\n//                     />\n//                   </div>\n//                   <br />\n\n//                   {blog.video ? (\n//                     <div>\n//                       <video\n//                         controls\n//                         style={{ maxWidth: \"100%\" }}\n//                         onLoad={() => console.log(\"Video loaded\")}\n//                         onError={() => console.log(\"Video loading error\")}\n//                       >\n//                         <source src={`http://localhost:8000${blog.video}`} type=\"video/mp4\" />\n//                         Your browser does not support the video tag.\n//                       </video>\n//                       {/* Add video loading state check here */}\n//                       {videoLoading && <p>Loading...</p>}\n//                     </div>\n//                   ) : (\n//                     <p>Loading...</p>\n//                   )}\n\n//                   <div></div>\n\n//                   <div style={{ height: \"200px\", overflow: \"hidden\" }}>\n//                     <p>{blog.content}</p>\n//                     <p>Author: {blog.authorName}</p>\n//                     <p>Published Date: {blog.created_at}</p>\n//                     <p>Updated Date: {blog.updated_at}</p>\n//                     <br />\n//                   </div>\n\n//                 </div>\n//               ))\n//           )}\n//         </div>\n//       </div>\n//     )\n// };\n\n// export default Likes;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [liked, setLiked] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [mainLoading, setMainLoading] = useState(true);\n  const [videoLoading, setVideoLoading] = useState(true);\n  useEffect(() => {\n    const fetchLikes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/likes/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          const blogLikes = data.map(blog => ({\n            id: blog.id,\n            likes: blog.likes,\n            liked_state: blog.liked_state,\n            title: blog.title,\n            image: blog.image,\n            content: blog.content,\n            authorName: blog.authorName,\n            created_at: blog.created_at,\n            updated_at: blog.updated_at,\n            total_comments: blog.total_comments\n          }));\n          setBlogs(blogLikes);\n          setLikes(blogLikes.map(blog => blog.likes));\n          setLiked(blogLikes.map(blog => blog.liked_state));\n          setMainLoading(false);\n          setVideoLoading(false);\n          console.log(\"blog likes with total comments \", blogLikes);\n        } else {\n          console.error(\"Failed to fetch blog likes\");\n        }\n      } catch (error) {\n        console.error(error);\n        setMainLoading(false);\n      }\n    };\n    fetchLikes();\n  }, []);\n  useEffect(() => {\n    fetchComments();\n  }, []);\n  const fetchComments = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/blog/comments/\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"comments are \", data);\n        setComments(data);\n      } else {\n        console.error(\"Failed to fetch comments\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const handleLike = async (blogId, currentLikedState, index) => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        },\n        body: JSON.stringify({\n          liked: !currentLikedState\n        })\n      });\n      if (response.ok) {\n        const updatedBlogLikes = [...blogs];\n        updatedBlogLikes[index].liked_state = !currentLikedState;\n        if (currentLikedState) {\n          updatedBlogLikes[index].likes--;\n        } else {\n          updatedBlogLikes[index].likes++;\n        }\n        setBlogs(updatedBlogLikes);\n        const updatedLikes = [...likes];\n        if (currentLikedState) {\n          updatedLikes[index]--;\n        } else {\n          updatedLikes[index]++;\n        }\n        setLikes(updatedLikes);\n        const updatedLiked = [...liked];\n        updatedLiked[index] = !currentLikedState;\n        setLiked(updatedLiked);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const playVideo = videoId => {\n    const video = document.getElementById(videoId);\n    video.play();\n  };\n  const pauseVideo = videoId => {\n    const video = document.getElementById(videoId);\n    video.pause();\n  };\n  const handleVideoLoad = () => {\n    setVideoLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: mainLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }, this) : blogs.sort((a, b) => b.id - a.id).map((blog, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Blog Id: \", blog.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000${blog.image}`,\n            style: {\n              width: \"100%\",\n              maxWidth: \"100%\"\n            },\n            alt: \"Blog Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 19\n        }, this), blog.video ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            controls: true,\n            style: {\n              maxWidth: \"100%\"\n            },\n            onLoadedData: handleVideoLoad,\n            onLoadStart: () => setVideoLoading(true),\n            onError: () => console.log(\"Video loading error\"),\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: `http://localhost:8000${blog.video}`,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 25\n            }, this), \"Your browser does not support the video tag.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 23\n          }, this), videoLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"200px\",\n            overflow: \"hidden\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: blog.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Author: \", blog.authorName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Published Date: \", blog.created_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Updated Date: \", blog.updated_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 19\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 7\n  }, this);\n}\n_s(Likes, \"VXiOzPqNYsvy7pzOYHjHJhJWFp8=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["React","useEffect","useState","IconButton","FavoriteIcon","ShareIcon","CommentIcon","BrowserRouter","Router","Switch","Route","Link","Popover","Typography","Button","maxHeight","jsxDEV","_jsxDEV","Likes","_s","blogs","setBlogs","likes","setLikes","liked","setLiked","comments","setComments","mainLoading","setMainLoading","videoLoading","setVideoLoading","fetchLikes","response","fetch","headers","Authorization","localStorage","getItem","ok","data","json","blogLikes","map","blog","id","liked_state","title","image","content","authorName","created_at","updated_at","total_comments","console","log","error","fetchComments","method","handleLike","blogId","currentLikedState","index","body","JSON","stringify","updatedBlogLikes","updatedLikes","updatedLiked","playVideo","videoId","video","document","getElementById","play","pauseVideo","pause","handleVideoLoad","children","fileName","_jsxFileName","lineNumber","columnNumber","sort","a","b","style","width","height","src","maxWidth","alt","controls","onLoadedData","onLoadStart","onError","type","overflow","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport CommentIcon from \"@mui/icons-material/Comment\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Popover from \"@mui/material/Popover\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { maxHeight } from \"@mui/system\";\n\n// const Likes = () => {\n//     const [blogs, setBlogs] = useState([]);\n//     const [likes, setLikes] = useState([]);\n//     const [liked, setLiked] = useState([]);\n//     const [comments, setComments] = useState([]);\n\n//     const [anchorEls, setAnchorEls] = useState(new Array(blogs.length).fill(null));\n//     const [shareUrls, setShareUrls] = useState(new Array(blogs.length).fill(\"\"));\n//     const [copiedStates, setCopiedStates] = useState(new Array(blogs.length).fill(false));\n//     const [videoLoading, setVideoLoading] = useState(true);\n\n//     const [mainLoading, setMainLoading] = useState(false);\n\n//     const copyToClipboard = (text) => {\n//         navigator.clipboard.writeText(text);\n//         setCopiedStates(new Array(blogs.length).fill(false)); // Reset copiedStates to all false\n//         setCopiedStates(copiedStates.map((state, index) => (index === copiedStates.indexOf(true) ? true : state))); // Set only the currently copied share button's copied state to true\n//     };\n\n//     const cancelCopy = () => {\n//         setCopiedStates(new Array(blogs.length).fill(false));\n//     };\n\n//     useEffect(() => {\n//         const fetchLikes = async () => {\n//             try {\n//                 const response = await fetch(\"http://localhost:8000/api/blog/likes/\", {\n//                     headers: {\n//                         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                     },\n//                 });\n\n//                 const data = await response.json();\n//                 const blogLikes = data.map((blog) => {\n//                     return {\n//                         id: blog.id,\n//                         likes: blog.likes,\n//                         liked_state: blog.liked_state,\n//                         title: blog.title,\n//                         image: blog.image,\n//                         content: blog.content,\n//                         authorName: blog.authorName,\n//                         created_at: blog.created_at,\n//                         updated_at: blog.updated_at,\n//                         total_comments: blog.total_comments,\n//                     };\n//                 });\n\n//                 setBlogs(blogLikes);\n//                 setLikes(blogLikes.map((blog) => blog.likes));\n//                 setLiked(blogLikes.map((blog) => blog.liked_state));\n//                 setMainLoading(false); \n//                 console.log(\"blog likes with totsl commenets \", blogLikes);\n//                 setShareUrls(blogLikes.map((blog) => `${window.location.origin}/blog/${blog.id}`));\n//             } catch (error) {\n//                 setMainLoading(true); \n//                 console.error(error);\n//             }\n//         };\n\n//         fetchLikes();\n//     }, []);\n//     useEffect(() => {\n//         fetchComments();\n//     }, []);\n\n//     const fetchComments = async () => {\n//         try {\n//             const response = await fetch(\"http://localhost:8000/api/blog/comments/\", {\n//                 method: \"GET\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                 },\n//             });\n//             if (response.ok) {\n//                 const data = await response.json();\n//                 console.log(\"comments are \", data);\n//                 setComments(data);\n//             } else {\n//                 console.error(\"Failed to fetch comments\");\n//             }\n//         } catch (error) {\n//             console.error(\"Error:\", error);\n//         }\n//     };\n//     const handleLike = async (blogId, currentLikedState, index) => {\n//         try {\n//             const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n//                 method: \"PUT\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                 },\n//                 body: JSON.stringify({ liked: !currentLikedState }),\n//             });\n\n//             if (response.ok) {\n//                 // update liked state for the current blog\n//                 const updatedBlogLikes = [...blogs];\n//                 updatedBlogLikes[index].liked_state = !currentLikedState;\n//                 if (currentLikedState) {\n//                     updatedBlogLikes[index].likes--;\n//                 } else {\n//                     updatedBlogLikes[index].likes++;\n//                 }\n//                 setBlogs(updatedBlogLikes);\n\n//                 // update total likes count\n//                 const updatedLikes = [...likes];\n//                 if (currentLikedState) {\n//                     updatedLikes[index]--;\n//                 } else {\n//                     updatedLikes[index]++;\n//                 }\n//                 setLikes(updatedLikes);\n\n//                 // update liked state\n//                 const updatedLiked = [...liked];\n//                 updatedLiked[index] = !currentLikedState;\n//                 setLiked(updatedLiked);\n//             } else {\n//                 console.error(\"Error updating like state\");\n//             }\n//         } catch (error) {\n//             console.error(error);\n//         }\n//     };\n\n//     function playVideo(videoId) {\n//     const video = document.getElementById(videoId);\n//     video.play();\n// }\n\n// function pauseVideo(videoId) {\n//     const video = document.getElementById(videoId);\n//     video.pause();\n// }\n\n\n//     useEffect(() => {\n//         const fetchBlogsAndComments = async () => {\n//             try {\n//                 const response = await fetch(\"http://localhost:8000/api/blog-comments/\", {\n//                     headers: {\n//                         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//                     },\n//                 });\n\n//                 if (response.ok) {\n//                     const data = await response.json();\n//                     setBlogs(data.blogs);\n//                     setComments(data.comments);\n//                 } else {\n//                     console.error(\"Failed to fetch blogs and comments\");\n//                 }\n//             } catch (error) {\n//                 console.error(error);\n//             }\n//         };\n\n//         fetchBlogsAndComments();\n//     }, []);\n\n\n//     function playVideo(videoId) {\n//         const video = document.getElementById(videoId);\n//         video.play();\n//     }\n    \n//     function pauseVideo(videoId) {\n//         const video = document.getElementById(videoId);\n//         video.pause();\n//     }\n    \n//     return (\n//         <div>\n//         <div>\n//           {mainLoading ? (\n//             <p>Loading...</p>\n//           ) : (\n//             blogs\n//               .sort((a, b) => b.id - a.id)\n//               .map((blog, index) => (\n//                 <div key={blog.id}>\n//                   <h2>{blog.title}</h2>\n//                   <h3>Blog Id: {blog.id}</h3>\n  \n//                   <div style={{ width: \"100%\", height: \"100%\" }}>\n//                     <img\n//                       src={`http://localhost:8000${blog.image}`}\n//                       style={{ width: \"100%\", maxWidth: \"100%\" }}\n//                       alt=\"Blog Image\"\n//                     />\n//                   </div>\n//                   <br />\n  \n//                   {blog.video ? (\n//                     <div>\n//                       <video\n//                         controls\n//                         style={{ maxWidth: \"100%\" }}\n//                         onLoad={() => console.log(\"Video loaded\")}\n//                         onError={() => console.log(\"Video loading error\")}\n//                       >\n//                         <source src={`http://localhost:8000${blog.video}`} type=\"video/mp4\" />\n//                         Your browser does not support the video tag.\n//                       </video>\n//                       {/* Add video loading state check here */}\n//                       {videoLoading && <p>Loading...</p>}\n//                     </div>\n//                   ) : (\n//                     <p>Loading...</p>\n//                   )}\n  \n//                   <div></div>\n  \n//                   <div style={{ height: \"200px\", overflow: \"hidden\" }}>\n//                     <p>{blog.content}</p>\n//                     <p>Author: {blog.authorName}</p>\n//                     <p>Published Date: {blog.created_at}</p>\n//                     <p>Updated Date: {blog.updated_at}</p>\n//                     <br />\n//                   </div>\n\n               \n//                 </div>\n//               ))\n//           )}\n//         </div>\n//       </div>\n//     )\n// };\n\n\n// export default Likes;\n\nexport default function Likes(){\n  const [blogs, setBlogs] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [liked, setLiked] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [mainLoading, setMainLoading] = useState(true);\n  const [videoLoading, setVideoLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchLikes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/likes/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          const blogLikes = data.map((blog) => ({\n            id: blog.id,\n            likes: blog.likes,\n            liked_state: blog.liked_state,\n            title: blog.title,\n            image: blog.image,\n            content: blog.content,\n            authorName: blog.authorName,\n            created_at: blog.created_at,\n            updated_at: blog.updated_at,\n            total_comments: blog.total_comments,\n          }));\n\n          setBlogs(blogLikes);\n          setLikes(blogLikes.map((blog) => blog.likes));\n          setLiked(blogLikes.map((blog) => blog.liked_state));\n          setMainLoading(false);\n          setVideoLoading(false);\n          console.log(\"blog likes with total comments \", blogLikes);\n        } else {\n          console.error(\"Failed to fetch blog likes\");\n        }\n      } catch (error) {\n        console.error(error);\n        setMainLoading(false);\n      }\n    };\n\n    fetchLikes();\n  }, []);\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const fetchComments = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/blog/comments/\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"comments are \", data);\n        setComments(data);\n      } else {\n        console.error(\"Failed to fetch comments\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  const handleLike = async (blogId, currentLikedState, index) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8000/api/blog/likes/update/${blogId}/`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n          body: JSON.stringify({ liked: !currentLikedState }),\n        }\n      );\n\n      if (response.ok) {\n        const updatedBlogLikes = [...blogs];\n        updatedBlogLikes[index].liked_state = !currentLikedState;\n        if (currentLikedState) {\n          updatedBlogLikes[index].likes--;\n        } else {\n          updatedBlogLikes[index].likes++;\n        }\n        setBlogs(updatedBlogLikes);\n\n        const updatedLikes = [...likes];\n        if (currentLikedState) {\n          updatedLikes[index]--;\n        } else {\n          updatedLikes[index]++;\n        }\n        setLikes(updatedLikes);\n\n        const updatedLiked = [...liked];\n        updatedLiked[index] = !currentLikedState;\n        setLiked(updatedLiked);\n      }\n    } catch (error) {\n        console.error(error);\n      }\n    };\n    \n    const playVideo = (videoId) => {\n      const video = document.getElementById(videoId);\n      video.play();\n    };\n    \n    const pauseVideo = (videoId) => {\n      const video = document.getElementById(videoId);\n      video.pause();\n    };\n    \n    const handleVideoLoad = () => {\n      setVideoLoading(false);\n      \n    };\n    \n    return (\n      <div>\n        <div>\n          {mainLoading ? (\n            <p>Loading...</p>\n          ) : (\n            blogs\n              .sort((a, b) => b.id - a.id)\n              .map((blog, index) => (\n                <div key={blog.id}>\n                  <h2>{blog.title}</h2>\n                  <h3>Blog Id: {blog.id}</h3>\n    \n                  <div style={{ width: \"100%\", height: \"100%\" }}>\n                    <img\n                      src={`http://localhost:8000${blog.image}`}\n                      style={{ width: \"100%\", maxWidth: \"100%\" }}\n                      alt=\"Blog Image\"\n                    />\n                  </div>\n                  <br />\n    \n                  {blog.video ? (\n                    <div>\n                      <video\n                        controls\n                        style={{ maxWidth: \"100%\" }}\n                        onLoadedData={handleVideoLoad}\n                        onLoadStart={() => setVideoLoading(true)}\n                        onError={() => console.log(\"Video loading error\")}\n                      >\n                        <source\n                          src={`http://localhost:8000${blog.video}`}\n                          type=\"video/mp4\"\n                        />\n                        Your browser does not support the video tag.\n                      </video>\n                      {videoLoading && <p>Loading...</p>}\n                    </div>\n                  ) : (\n                    <p>Loading...</p>\n                  )}\n    \n                  <div></div>\n    \n                  <div style={{ height: \"200px\", overflow: \"hidden\" }}>\n                    <p>{blog.content}</p>\n                    <p>Author: {blog.authorName}</p>\n                    <p>Published Date: {blog.created_at}</p>\n                    <p>Updated Date: {blog.updated_at}</p>\n                    <br />\n                  </div>\n                </div>\n              ))\n          )}\n        </div>\n      </div>\n    );\n\n                  }\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}