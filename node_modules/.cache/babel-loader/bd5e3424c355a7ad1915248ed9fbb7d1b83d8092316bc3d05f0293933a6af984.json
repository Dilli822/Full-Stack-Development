{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    fetchComments();\n  }, []);\n  const fetchComments = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/blog/comments', {\n        headers: {\n          Authorization: 'Bearer <your_token>'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setComments(data);\n      } else {\n        console.error('Failed to fetch comments');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: comment.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.comment_content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.authorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Comment","_s","comments","setComments","fetchComments","response","fetch","headers","Authorization","ok","data","json","console","error","children","map","comment","title","fileName","_jsxFileName","lineNumber","columnNumber","comment_content","authorName","id","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Comment = () => {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const fetchComments = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/blog/comments', {\n        headers: {\n          Authorization: 'Bearer <your_token>',\n        },\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setComments(data);\n      } else {\n        console.error('Failed to fetch comments');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      {comments.map((comment) => (\n        <div key={comment.id}>\n          <h3>{comment.title}</h3>\n          <p>{comment.comment_content}</p>\n          <p>{comment.authorName}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Comment;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdO,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,OAAO,EAAE;UACPC,aAAa,EAAE;QACjB;MACF,CAAC,CAAC;MACF,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;QAClCR,WAAW,CAACO,IAAI,CAAC;MACnB,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,EACGZ,QAAQ,CAACa,GAAG,CAAEC,OAAO,iBACpBjB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAKE,OAAO,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACxBtB,OAAA;QAAAe,QAAA,EAAIE,OAAO,CAACM;MAAe;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAChCtB,OAAA;QAAAe,QAAA,EAAIE,OAAO,CAACO;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAHnBL,OAAO,CAACQ,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACpB,EAAA,CApCID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}