{"ast":null,"code":"\n// import { useState, useEffect } from \"react\";\n// import { IconButton } from \"@mui/material\";\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n// import ShareIcon from '@mui/icons-material/Share';\n\n// export default function Likes({ blogId, likes, likedBy }) {\n//   const [isLiked, setIsLiked] = useState(likedBy.liked);\n//   const [numLikes, setNumLikes] = useState(likedBy.likes);\n//   const [likedByList, setLikedByList] = useState(likedBy.liked_by);\n//   const [error, setError] = useState(\"\");\n//   const [authorId, setAuthorId] = useState(likedBy.author_id);\n\n//   useEffect(() => {\n//     const fetchBlogLikes = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             author_id: authorId,\n//             likes: numLikes,\n//             liked: isLiked,\n//             liked_by: likedByList,\n//           }),\n//         });\n\n//         const data = await response.json();\n//         setIsLiked(data.liked);\n//         setNumLikes(data.likes);\n//         setLikedByList(data.liked_by);\n//       } catch (error) {\n//         console.error(error);\n//         setError(\"Failed to fetch like state.\");\n//       }\n//     };\n\n//     fetchBlogLikes();\n//   }, []);\n\n//   const handleLikeClick = async () => {\n//     try {\n//       let newLikedState = !isLiked;\n//       let newLikes = numLikes;\n//       let newLikedByState = likedByList;\n\n//       if (newLikedState) {\n//         newLikes += 1;\n//         newLikedByState = [...likedByList, authorId];\n//       } else {\n//         newLikes -= 1;\n//         newLikedByState = likedByList.filter((id) => id !== authorId);\n//       }\n\n//       setIsLiked(newLikedState);\n//       setNumLikes(newLikes);\n//       setLikedByList(newLikedByState);\n\n//       // Call API to update like state\n//       await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n//         method: \"PUT\",\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           author_id: authorId,\n//           likes: newLikes,\n//           liked: newLikedState,\n//           liked_by: newLikedByState,\n//         }),\n//       });\n//     } catch (error) {\n//       console.error(error);\n//       setError(\"Failed to update like state.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <IconButton onClick={handleLikeClick}>\n//         {isLiked ? <FavoriteIcon color=\"primary\" /> : <FavoriteIcon />}\n//       </IconButton>\n//       <span>{numLikes}</span>\n//       <IconButton>\n//         <ShareIcon />\n//       </IconButton>\n//       {error && <p>{error}</p>}\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["\n// import { useState, useEffect } from \"react\";\n// import { IconButton } from \"@mui/material\";\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n// import ShareIcon from '@mui/icons-material/Share';\n\n// export default function Likes({ blogId, likes, likedBy }) {\n//   const [isLiked, setIsLiked] = useState(likedBy.liked);\n//   const [numLikes, setNumLikes] = useState(likedBy.likes);\n//   const [likedByList, setLikedByList] = useState(likedBy.liked_by);\n//   const [error, setError] = useState(\"\");\n//   const [authorId, setAuthorId] = useState(likedBy.author_id);\n\n//   useEffect(() => {\n//     const fetchBlogLikes = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             author_id: authorId,\n//             likes: numLikes,\n//             liked: isLiked,\n//             liked_by: likedByList,\n//           }),\n//         });\n\n//         const data = await response.json();\n//         setIsLiked(data.liked);\n//         setNumLikes(data.likes);\n//         setLikedByList(data.liked_by);\n//       } catch (error) {\n//         console.error(error);\n//         setError(\"Failed to fetch like state.\");\n//       }\n//     };\n\n//     fetchBlogLikes();\n//   }, []);\n\n//   const handleLikeClick = async () => {\n//     try {\n//       let newLikedState = !isLiked;\n//       let newLikes = numLikes;\n//       let newLikedByState = likedByList;\n\n//       if (newLikedState) {\n//         newLikes += 1;\n//         newLikedByState = [...likedByList, authorId];\n//       } else {\n//         newLikes -= 1;\n//         newLikedByState = likedByList.filter((id) => id !== authorId);\n//       }\n\n//       setIsLiked(newLikedState);\n//       setNumLikes(newLikes);\n//       setLikedByList(newLikedByState);\n\n//       // Call API to update like state\n//       await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n//         method: \"PUT\",\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           author_id: authorId,\n//           likes: newLikes,\n//           liked: newLikedState,\n//           liked_by: newLikedByState,\n//         }),\n//       });\n//     } catch (error) {\n//       console.error(error);\n//       setError(\"Failed to update like state.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <IconButton onClick={handleLikeClick}>\n//         {isLiked ? <FavoriteIcon color=\"primary\" /> : <FavoriteIcon />}\n//       </IconButton>\n//       <span>{numLikes}</span>\n//       <IconButton>\n//         <ShareIcon />\n//       </IconButton>\n//       {error && <p>{error}</p>}\n//     </div>\n//   );\n// }\n\n\n\n"],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}