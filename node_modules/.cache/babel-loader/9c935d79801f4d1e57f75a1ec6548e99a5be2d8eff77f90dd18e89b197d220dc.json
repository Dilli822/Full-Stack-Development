{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map(blog => ({\n          ...blog,\n          liked: false\n        }));\n        setBlogs(blogsWithLiked);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const handleLike = async blogId => {\n    // Find the blog post to update\n    const blog = blogs.find(blog => blog.id === blogId);\n\n    // Calculate the new like count and liked state\n    const newLikes = blog.liked ? blog.likes - 1 : blog.likes + 1;\n    const newLiked = !blog.liked;\n\n    // Update the local state immediately\n    const updatedBlogs = blogs.map(blog => {\n      if (blog.id === blogId) {\n        return {\n          ...blog,\n          liked: newLiked,\n          likes: newLikes\n        };\n      }\n      return blog;\n    });\n    setBlogs(updatedBlogs);\n\n    // Call API to update like state\n    await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        author_id: blog.author_id,\n        likes: newLikes,\n        liked: newLiked\n      })\n    });\n  };\n  const handleLiked = async blogId => {\n    // Find the blog post to update\n    const bloged = blogs.find(blog => blog.id === blogId);\n\n    // Calculate the new like count and liked state\n    const newLikess = bloged.liked ? bloged.likes + 1 : bloged.likes - 1;\n    const newLikedd = false;\n\n    // Update the local state immediately\n    const updatedBlogs = blogs.map(bloged => {\n      if (bloged.id === blogId) {\n        return {\n          ...bloged,\n          liked: newLikedd,\n          likes: newLikess\n        };\n      }\n      return bloged;\n    });\n    setBlogs(updatedBlogs);\n\n    // Call API to update like state\n    await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        author_id: bloged.author_id,\n        likes: newLikess,\n        liked: newLikedd\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogs\",\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", blog.author.first_name, \" \", blog.author.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Likes: \", blog.likes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"liked by \", blog.liked_by]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), blog.liked_by.includes(blog.author_id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"you did not like it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleLike(blog.id),\n            children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n              color: blog.liked ? \"error\" : \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"HwLKShFMp+eoMZpLYWTM+wtnYvk=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","ShareIcon","jsxDEV","_jsxDEV","Likes","_s","blogs","setBlogs","error","setError","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","blogsWithLiked","map","blog","liked","console","handleLike","blogId","find","id","newLikes","likes","newLiked","updatedBlogs","method","body","JSON","stringify","author_id","handleLiked","bloged","newLikess","newLikedd","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","content","author","first_name","last_name","liked_by","includes","onClick","color","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\nexport default function Likes() {\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n        setBlogs(blogsWithLiked);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n\n  const handleLike = async (blogId) => {\n    // Find the blog post to update\n    const blog = blogs.find((blog) => blog.id === blogId);\n\n    // Calculate the new like count and liked state\n    const newLikes = blog.liked ? blog.likes - 1 : blog.likes + 1;\n    const newLiked = !blog.liked;\n\n\n\n\n\n\n    // Update the local state immediately\n    const updatedBlogs = blogs.map((blog) => {\n      if (blog.id === blogId) {\n        return {\n          ...blog,\n          liked: newLiked,\n          likes: newLikes,\n        };\n      }\n      return blog;\n    });\n    setBlogs(updatedBlogs);\n\n    // Call API to update like state\n    await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        author_id: blog.author_id,\n        likes: newLikes,\n        liked: newLiked,\n      }),\n    });\n  };\n\n  const handleLiked = async (blogId) => {\n    // Find the blog post to update\n    const bloged = blogs.find((blog) => blog.id === blogId);\n\n    // Calculate the new like count and liked state\n    const newLikess = bloged.liked ? bloged.likes + 1 : bloged.likes - 1;\n    const newLikedd = false;\n\n    // Update the local state immediately\n    const updatedBlogs = blogs.map((bloged) => {\n      if (bloged.id === blogId) {\n        return {\n          ...bloged,\n          liked: newLikedd,\n          likes: newLikess,\n        };\n      }\n      return bloged;\n    });\n    setBlogs(updatedBlogs);\n\n    // Call API to update like state\n    await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        author_id: bloged.author_id,\n        likes: newLikess,\n        liked: newLikedd,\n      }),\n    });\n  };\n\n\n  return (\n    <div>\n      {error && <p>{error}</p>}\n      <h2>Blogs</h2>\n      <div className=\"blogs\">\n        {blogs.map((blog) => (\n          <div key={blog.id}>\n            <h3>{blog.title}</h3>\n            <p>{blog.content}</p>\n            <p>\n              Author: {blog.author.first_name} {blog.author.last_name}\n            </p>\n            <p>Likes: {blog.likes}</p>\n            <p>liked by {blog.liked_by}</p>\n\n            {blog.liked_by.includes(blog.author_id) ? (\n              <div>\n\n<h4>you did not like it</h4>\n                <IconButton onClick={() => handleLike(blog.id)}>\n                  <FavoriteIcon color={blog.liked ? \"error\" : \"primary\"} />\n                </IconButton>\n                <IconButton>\n                  <ShareIcon />\n                </IconButton>\n\n\n              </div>\n            ) : (\n              <div>\n\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n            }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}