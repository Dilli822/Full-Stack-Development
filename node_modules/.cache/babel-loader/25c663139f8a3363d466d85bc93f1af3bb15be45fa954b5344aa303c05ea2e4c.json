{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n        setBlogs(data);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const handleLikeClick = async blogId => {\n    const blogToUpdate = blogs.find(blog => blog.id === blogId);\n    if (blogToUpdate.liked) {\n      // User has already liked the blog, so remove like\n      blogToUpdate.liked = false;\n      blogToUpdate.likes -= 1;\n    } else {\n      // User has not liked the blog, so add like\n      blogToUpdate.liked = true;\n      blogToUpdate.likes += 1;\n    }\n\n    // Update the API with the new liked state and like count\n    try {\n      const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          liked: blogToUpdate.liked,\n          likes: blogToUpdate.likes\n        })\n      });\n      const data = await response.json();\n      setBlogs(prevBlogs => prevBlogs.map(blog => blog.id === data.id ? data : blog));\n    } catch (error) {\n      console.error(error);\n      setError(\"Failed to update like state.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: blog.likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => handleLikeClick(blog.id),\n        children: blog.liked ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"HwLKShFMp+eoMZpLYWTM+wtnYvk=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","FavoriteBorderIcon","jsxDEV","_jsxDEV","Likes","_s","blogs","setBlogs","error","setError","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","console","handleLikeClick","blogId","blogToUpdate","find","blog","id","liked","likes","method","body","JSON","stringify","prevBlogs","map","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","onClick","color","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\n\nexport default function Likes() {\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        const data = await response.json();\n        setBlogs(data);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n\n  const handleLikeClick = async (blogId) => {\n    const blogToUpdate = blogs.find((blog) => blog.id === blogId);\n\n    if (blogToUpdate.liked) {\n      // User has already liked the blog, so remove like\n      blogToUpdate.liked = false;\n      blogToUpdate.likes -= 1;\n    } else {\n      // User has not liked the blog, so add like\n      blogToUpdate.liked = true;\n      blogToUpdate.likes += 1;\n    }\n\n    // Update the API with the new liked state and like count\n    try {\n      const response = await fetch(\n        `http://localhost:8000/api/blog/likes/update/${blogId}/`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            liked: blogToUpdate.liked,\n            likes: blogToUpdate.likes,\n          }),\n        }\n      );\n\n      const data = await response.json();\n      setBlogs((prevBlogs) =>\n        prevBlogs.map((blog) => (blog.id === data.id ? data : blog))\n      );\n    } catch (error) {\n      console.error(error);\n      setError(\"Failed to update like state.\");\n    }\n  };\n\n  return (\n    <div>\n      {error && <div>{error}</div>}\n      {blogs.map((blog) => (\n        <div key={blog.id}>\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n          <span>{blog.likes}</span>\n          <IconButton onClick={() => handleLikeClick(blog.id)}>\n            {blog.liked ? (\n              <FavoriteIcon color=\"error\" />\n            ) : (\n              <FavoriteBorderIcon />\n            )}\n          </IconButton>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}