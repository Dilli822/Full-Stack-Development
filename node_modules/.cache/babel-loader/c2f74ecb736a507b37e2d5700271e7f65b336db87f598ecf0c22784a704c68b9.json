{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/signup.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n\n// function Signup() {\n//     const [username, setUsername] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [confirmPassword, setConfirmPassword] = useState(\"\");\n//     const [passwordValidation, setPasswordValidation] = useState(\"\");\n//     const [emailValidation, setEmailValidation] = useState(\"\");\n//     const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n//     const [register, setRegister] = useState(false);\n//     const [message, setMessage] = useState(\"\");\n//     const [apiError, setApiError] = useState(\"\");\n//     const [userErrorMessage,setUserErrorMessage] = useState(\"\");\n//     const [usernameExistsError, setUsernameExistsError] = useState(null);\n//     const [errorMsg, setErrorMsg] = useState(\"\");\n//     const [errorMessage, setErrorMessage] = useState('');\n//     const [emailExist,setEmailExist] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         // added check for empty input fields\n//         if(!username || !password || !email || !confirmPassword) {setErrorMsg(\"Please Fill the Input!\")}\n\n//         const fetchdata = fetch(\"http://localhost:8000/api/register/\", {\n//             method: \"POST\",\n//             headers: { \"Content-Type\": \"application/json\" },\n//             body: JSON.stringify({ username, email, password }),\n//             }).then((response) => {\n//                 response.json().then((data) => {\n//                     console.log(data);\n//                     if (data.username) {\n//                       console.log(data.username);\n//                       setErrorMessage(data.username);\n//                     } else if (data.email) {\n//                       console.log(data.email);\n//                       setEmailExist(data.email);\n//                     }\n//                   }).catch(error => {\n//                     console.error(error);\n//             });\n\n//                 if (response.status == 201 || response.ok) {\n//                     setRegister(true);\n//                     setMessage(\"Successfully signed up! Please wait while you are redirected to the login page...\");\n//                     setTimeout(() => {\n//                         navigate(\"/login\");\n//                     }, 1500);\n//                 } else if (response.status === 409) {\n//                   // setUserErrorMessage(response.message);\n//                   setErrorMessage(\"USERNAME EXISTS\");\n//                   throw new Error('Username is already taken');\n//                 } else if(response.status == 400){\n//                     // setApiError(\"Bad request! An error occurred while signing up. Please try again.\");\n//                 }\n//                 else {\n//                   // console.log(response.JSON()); \n//                   setApiError(\"Something went wrong!\");\n//                 }\n//             })\n\n//             .catch((error) => {\n//                 console.error(error);\n//                 console.log(error.message);\n\n//             });\n//     };\n\n//     const handleUsernameChange = (event) => {\n\n//         setUsername(event.target.value);\n//     };\n\n//     const handleEmailChange = (event) => {\n//       const { value } = event.target;\n//       setEmail(value);\n\n//       // Email validation using regular expression\n//       const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n//       (!emailRegex.test(value)) ? setEmailValidation('Please enter a valid email address.') :  setEmailValidation('');\n//       setEmail(event.target.value);\n//     };\n\n//     const handlePasswordChange = (event) => {\n//         setPassword(event.target.value);\n//         const passwordRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n//         event.target.value.length <= 8 && !passwordRegex.test(password) ? setPasswordValidation(\"Password must contain at least 8 characters including 1 uppercase, 1 lowercase, 1 digit and 1 special character\") : setPasswordValidation(\"\");\n//     };\n\n//     const handleConfirmPasswordChange = (event) => {\n//         setConfirmPassword(event.target.value);\n//         event.target.value !== password ? setConfirmPwdMsg(\"Passwords do not match\") : setConfirmPwdMsg(\"\");\n//     };\n\n//     return (\n//         <div>\n//             {register ? (\n//                 <div>\n//                     <h4>{message}</h4>\n//                 </div>\n//             ) : (\n//                 <form onSubmit={handleSubmit} style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \" translate(-50%, -50%)\",}}>\n//                     <div>                   \n//                         {/* <label htmlFor=\"username\">Username:</label> */}\n//                         <div className=\"validationError\">\n//                         {/* {userErrorMessage} {usernameExistsError && <p>{usernameExistsError}</p>}  */}\n//                         {/* {errorMessage && <div className=\"validationError\">{errorMessage}</div>}  */}\n//                         {errorMsg}</div>\n//                         <input type=\"text\" id=\"username\" value={username} onChange={handleUsernameChange} placeholder=\"Enter Username\"/>\n//                     </div>\n//                     <div>\n//                       <br></br>\n\n//                         {/* <label htmlFor=\"email\">Email:</label> */}\n//                         <div className=\"validationError\">{emailValidation} {errorMsg} {emailExist}  </div>\n//                         <input type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Enter Email\"/>\n//                     </div>\n//                     <br></br>\n//                     <div>\n//                         {/* <label htmlFor=\"password\">Password:</label> */}\n//                         <div className=\"validationError\">{passwordValidation && <span>{passwordValidation}</span>} {errorMsg} </div>\n//                         <input type=\"password\" id=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Enter Password\"/>\n//                     </div>\n//                     <br></br>\n//                     <div>\n//                         {/* <label htmlFor=\"password\">Confirm Password:</label> */}\n//                         <div className=\"validationError\">{confirmPwdMsg && <span>{confirmPwdMsg}</span>} {errorMsg} </div>\n//                         <input type=\"password\" id=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} placeholder=\"Enter Confirm Password\"/>\n//                     </div>\n//                     <br></br>\n\n//                     <div className=\"validationError\">{apiError && <h4>{apiError}</h4>}</div>\n\n//                     <div>\n//                         <button type=\"submit\">Signup</button>\n//                         <Link to=\"/login\"> <a>Already Have an Account? Login </a></Link>\n//                     </div>\n//                 </form>\n//             )}\n\n//         </div>\n//     );\n// }\n\n// export default Signup;\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Login from './login';\nimport { Link, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Copyright(props) {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    align: \"center\",\n    ...props,\n    children: ['Copyright Â© ', /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://mui.com/\",\n      children: \"Your Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), ' ', new Date().getFullYear(), '.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_c = Copyright;\nconst theme = createTheme();\nexport default function SignUp() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordValidation, setPasswordValidation] = useState(\"\");\n  const [emailValidation, setEmailValidation] = useState(\"\");\n  const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n  const [register, setRegister] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [apiError, setApiError] = useState(\"\");\n  const [userErrorMessage, setUserErrorMessage] = useState(\"\");\n  const [usernameExistsError, setUsernameExistsError] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n  const [emailExist, setEmailExist] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // added check for empty input fields\n    if (!username || !password || !email || !confirmPassword) {\n      setErrorMsg(\"Please Fill the Input!\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:8000/api/register/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setRegister(true);\n        setMessage(\"Successfully signed up! Please wait while you are redirected to the login page...\");\n        setTimeout(() => {\n          navigate(\"/login\");\n        }, 1500);\n      } else if (response.status === 409) {\n        setErrorMessage(\"USERNAME EXISTS\");\n        throw new Error(\"Username is already taken\");\n      } else {\n        setApiError(\"Something went wrong!\");\n      }\n    } catch (error) {\n      console.error(error);\n      setApiError(\"An error occurred while signing up. Please try again.\");\n    }\n  };\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handleEmailChange = event => {\n    const {\n      value\n    } = event.target;\n    setEmail(value);\n\n    // Email validation using regular expression\n    const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    setEmailValidation(!emailRegex.test(value) ? 'Please enter a valid email address.' : '');\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n    const passwordRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n    setPasswordValidation(!passwordRegex.test(event.target.value) ? \"Password must contain at least 8 characters including 1 uppercase, 1 lowercase, 1 digit and 1 special character\" : \"\");\n  };\n  const handleConfirmPasswordChange = event => {\n    setConfirmPassword(event.target.value);\n    if (!event.target.value) {\n      setConfirmPwdMsg(\"\");\n    } else if (event.target.value !== password) {\n      setConfirmPwdMsg(\"Passwords do not match\");\n    } else {\n      setConfirmPwdMsg(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: 'secondary.main'\n            },\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            onSubmit: handleSubmit,\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"given-name\",\n                  name: \"firstName\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"username\",\n                  label: \"Username\",\n                  autoFocus: true,\n                  value: username,\n                  onChange: handleUsernameChange,\n                  placeholder: \"Enter Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  label: \"Email Address\",\n                  name: \"email\",\n                  autoComplete: \"email\",\n                  type: \"email\",\n                  id: \"email\",\n                  value: email,\n                  onChange: handleEmailChange,\n                  placeholder: \"Enter Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  autoComplete: \"new-password\",\n                  value: password,\n                  onChange: handlePasswordChange,\n                  placeholder: \"Enter Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"confirm-password\",\n                  label: \"Confirm Password\",\n                  type: \"password\",\n                  id: \"confirm-password\",\n                  autoComplete: \"new-password\",\n                  value: confirmPassword,\n                  onChange: handleConfirmPasswordChange,\n                  placeholder: \"Enter Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"flex-end\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  variant: \"body2\",\n                  children: \"Already have an account? Sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Copyright, {\n          sx: {\n            mt: 5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 3\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"PU3DpKU7yU+F1+L/iOOUoIgwAY8=\", false, function () {\n  return [useNavigate];\n});\n_c2 = SignUp;\nvar _c, _c2;\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","Login","Link","Navigate","jsxDEV","_jsxDEV","Copyright","props","variant","color","align","children","href","fileName","_jsxFileName","lineNumber","columnNumber","Date","getFullYear","_c","theme","SignUp","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","passwordValidation","setPasswordValidation","emailValidation","setEmailValidation","confirmPwdMsg","setConfirmPwdMsg","register","setRegister","message","setMessage","apiError","setApiError","userErrorMessage","setUserErrorMessage","usernameExistsError","setUsernameExistsError","errorMsg","setErrorMsg","errorMessage","setErrorMessage","emailExist","setEmailExist","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","status","Error","error","console","handleUsernameChange","target","value","handleEmailChange","emailRegex","test","handlePasswordChange","passwordRegex","handleConfirmPasswordChange","onSubmit","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","noValidate","mt","container","spacing","item","xs","sm","autoComplete","name","required","fullWidth","id","label","autoFocus","onChange","placeholder","type","mb","justifyContent","to","_c2","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/blogapp/signup.js"],"sourcesContent":["// import { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n\n// function Signup() {\n//     const [username, setUsername] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [confirmPassword, setConfirmPassword] = useState(\"\");\n//     const [passwordValidation, setPasswordValidation] = useState(\"\");\n//     const [emailValidation, setEmailValidation] = useState(\"\");\n//     const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n//     const [register, setRegister] = useState(false);\n//     const [message, setMessage] = useState(\"\");\n//     const [apiError, setApiError] = useState(\"\");\n//     const [userErrorMessage,setUserErrorMessage] = useState(\"\");\n//     const [usernameExistsError, setUsernameExistsError] = useState(null);\n//     const [errorMsg, setErrorMsg] = useState(\"\");\n//     const [errorMessage, setErrorMessage] = useState('');\n//     const [emailExist,setEmailExist] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         // added check for empty input fields\n//         if(!username || !password || !email || !confirmPassword) {setErrorMsg(\"Please Fill the Input!\")}\n          \n\n//         const fetchdata = fetch(\"http://localhost:8000/api/register/\", {\n//             method: \"POST\",\n//             headers: { \"Content-Type\": \"application/json\" },\n//             body: JSON.stringify({ username, email, password }),\n//             }).then((response) => {\n//                 response.json().then((data) => {\n//                     console.log(data);\n//                     if (data.username) {\n//                       console.log(data.username);\n//                       setErrorMessage(data.username);\n//                     } else if (data.email) {\n//                       console.log(data.email);\n//                       setEmailExist(data.email);\n//                     }\n//                   }).catch(error => {\n//                     console.error(error);\n//             });\n\n//                 if (response.status == 201 || response.ok) {\n//                     setRegister(true);\n//                     setMessage(\"Successfully signed up! Please wait while you are redirected to the login page...\");\n//                     setTimeout(() => {\n//                         navigate(\"/login\");\n//                     }, 1500);\n//                 } else if (response.status === 409) {\n//                   // setUserErrorMessage(response.message);\n//                   setErrorMessage(\"USERNAME EXISTS\");\n//                   throw new Error('Username is already taken');\n//                 } else if(response.status == 400){\n//                     // setApiError(\"Bad request! An error occurred while signing up. Please try again.\");\n//                 }\n//                 else {\n//                   // console.log(response.JSON()); \n//                   setApiError(\"Something went wrong!\");\n//                 }\n//             })\n     \n//             .catch((error) => {\n//                 console.error(error);\n//                 console.log(error.message);\n          \n                \n//             });\n//     };\n\n//     const handleUsernameChange = (event) => {\n\n//         setUsername(event.target.value);\n//     };\n\n//     const handleEmailChange = (event) => {\n//       const { value } = event.target;\n//       setEmail(value);\n\n//       // Email validation using regular expression\n//       const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n//       (!emailRegex.test(value)) ? setEmailValidation('Please enter a valid email address.') :  setEmailValidation('');\n//       setEmail(event.target.value);\n//     };\n\n//     const handlePasswordChange = (event) => {\n//         setPassword(event.target.value);\n//         const passwordRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n//         event.target.value.length <= 8 && !passwordRegex.test(password) ? setPasswordValidation(\"Password must contain at least 8 characters including 1 uppercase, 1 lowercase, 1 digit and 1 special character\") : setPasswordValidation(\"\");\n//     };\n\n//     const handleConfirmPasswordChange = (event) => {\n//         setConfirmPassword(event.target.value);\n//         event.target.value !== password ? setConfirmPwdMsg(\"Passwords do not match\") : setConfirmPwdMsg(\"\");\n//     };\n\n//     return (\n//         <div>\n//             {register ? (\n//                 <div>\n//                     <h4>{message}</h4>\n//                 </div>\n//             ) : (\n//                 <form onSubmit={handleSubmit} style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \" translate(-50%, -50%)\",}}>\n//                     <div>                   \n//                         {/* <label htmlFor=\"username\">Username:</label> */}\n//                         <div className=\"validationError\">\n//                         {/* {userErrorMessage} {usernameExistsError && <p>{usernameExistsError}</p>}  */}\n//                         {/* {errorMessage && <div className=\"validationError\">{errorMessage}</div>}  */}\n//                         {errorMsg}</div>\n//                         <input type=\"text\" id=\"username\" value={username} onChange={handleUsernameChange} placeholder=\"Enter Username\"/>\n//                     </div>\n//                     <div>\n//                       <br></br>\n                    \n//                         {/* <label htmlFor=\"email\">Email:</label> */}\n//                         <div className=\"validationError\">{emailValidation} {errorMsg} {emailExist}  </div>\n//                         <input type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Enter Email\"/>\n//                     </div>\n//                     <br></br>\n//                     <div>\n//                         {/* <label htmlFor=\"password\">Password:</label> */}\n//                         <div className=\"validationError\">{passwordValidation && <span>{passwordValidation}</span>} {errorMsg} </div>\n//                         <input type=\"password\" id=\"password\" value={password} onChange={handlePasswordChange} placeholder=\"Enter Password\"/>\n//                     </div>\n//                     <br></br>\n//                     <div>\n//                         {/* <label htmlFor=\"password\">Confirm Password:</label> */}\n//                         <div className=\"validationError\">{confirmPwdMsg && <span>{confirmPwdMsg}</span>} {errorMsg} </div>\n//                         <input type=\"password\" id=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordChange} placeholder=\"Enter Confirm Password\"/>\n//                     </div>\n//                     <br></br>\n\n//                     <div className=\"validationError\">{apiError && <h4>{apiError}</h4>}</div>\n                   \n//                     <div>\n//                         <button type=\"submit\">Signup</button>\n//                         <Link to=\"/login\"> <a>Already Have an Account? Login </a></Link>\n//                     </div>\n//                 </form>\n//             )}\n            \n//         </div>\n//     );\n// }\n\n// export default Signup;\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Login from './login';\nimport { Link, Navigate } from 'react-router-dom';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n\n\n\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [passwordValidation, setPasswordValidation] = useState(\"\");\n    const [emailValidation, setEmailValidation] = useState(\"\");\n    const [confirmPwdMsg, setConfirmPwdMsg] = useState(\"\");\n    const [register, setRegister] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [apiError, setApiError] = useState(\"\");\n    const [userErrorMessage,setUserErrorMessage] = useState(\"\");\n    const [usernameExistsError, setUsernameExistsError] = useState(null);\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState('');\n    const [emailExist,setEmailExist] = useState('');\n    const navigate = useNavigate();\n\n\n    const handleSubmit = async (event) => {\n      event.preventDefault();\n      // added check for empty input fields\n      if (!username || !password || !email || !confirmPassword) {\n        setErrorMsg(\"Please Fill the Input!\");\n        return;\n      }\n    \n      try {\n        const response = await fetch(\"http://localhost:8000/api/register/\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ username, email, password }),\n        });\n    \n        const data = await response.json();\n    \n        if (response.ok) {\n          setRegister(true);\n          setMessage(\n            \"Successfully signed up! Please wait while you are redirected to the login page...\"\n          );\n          setTimeout(() => {\n            navigate(\"/login\");\n          }, 1500);\n        } else if (response.status === 409) {\n          setErrorMessage(\"USERNAME EXISTS\");\n          throw new Error(\"Username is already taken\");\n        } else {\n          setApiError(\"Something went wrong!\");\n        }\n      } catch (error) {\n        console.error(error);\n        setApiError(\"An error occurred while signing up. Please try again.\");\n      }\n    };\n    \n    const handleUsernameChange = (event) => {\n\n        setUsername(event.target.value);\n    };\n\n    const handleEmailChange = (event) => {\n      const { value } = event.target;\n      setEmail(value);\n    \n      // Email validation using regular expression\n      const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n      setEmailValidation(!emailRegex.test(value) ? 'Please enter a valid email address.' : '');\n    };\n    \n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n        const passwordRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n        setPasswordValidation(!passwordRegex.test(event.target.value) ? \"Password must contain at least 8 characters including 1 uppercase, 1 lowercase, 1 digit and 1 special character\" : \"\");\n    };\n    \n    const handleConfirmPasswordChange = (event) => {\n        setConfirmPassword(event.target.value);\n        if (!event.target.value) {\n          setConfirmPwdMsg(\"\");\n        } else if (event.target.value !== password) {\n          setConfirmPwdMsg(\"Passwords do not match\");\n        } else {\n          setConfirmPwdMsg(\"\");\n        }\n    };\n    \n  return (\n    <form onSubmit={handleSubmit} >\n  \n  <ThemeProvider theme={theme}>\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"firstName\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                autoFocus\n                value={username} onChange={handleUsernameChange} placeholder=\"Enter Username\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Enter Email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={password} onChange={handlePasswordChange} placeholder=\"Enter Password\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"confirm-password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirm-password\"\n                autoComplete=\"new-password\"\n                value={confirmPassword} onChange={handleConfirmPasswordChange} placeholder=\"Enter Confirm Password\"\n              />\n            </Grid>\n\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n      <Copyright sx={{ mt: 5 }} />\n    </Container>\n  </ThemeProvider>\n);\n\n    </form>\n   \n  );\n}"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C;AACA,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,M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"},"metadata":{},"sourceType":"module","externalDependencies":[]}