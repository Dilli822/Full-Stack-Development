{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/blog-comment.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\n\n// export default function Comments({ authToken, blogId, commentId }) {\n//   const [commentData, setCommentData] = useState(null);\n//   const [newComment, setNewComment] = useState('');\n\n//   useEffect(() => {\n//     fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n//       method: 'GET',\n//       headers: {\n//         Authorization: `Token ${authToken}`,\n//       },\n//     })\n//       .then((response) => response.json())\n//       .then((data) => setCommentData(data))\n//       .catch((error) => console.error(error));\n//   }, [authToken, blogId, commentId]);\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n//       method: 'PUT',\n//       headers: {\n//         Authorization: `Token ${authToken}`,\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ comment: newComment }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => setCommentData(data))\n//       .catch((error) => console.error(error));\n//   };\n\n//   if (!commentData) {\n//     return <p>Loading...</p>;\n//   }\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <textarea\n//         value={newComment}\n//         onChange={(event) => setNewComment(event.target.value)}\n//       />\n//       <button type=\"submit\">Save</button>\n//     </form>\n//   );\n// }\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments() {\n  _s();\n  const [commentData, setCommentData] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/blog/1/comments/`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setCommentData(data);\n    }).catch(error => console.error(error));\n  }, []);\n  if (!commentData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentData.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [comment.comment, \": \", comment.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"lo4hnXQ1F5aT8tkRRW0yZ8Hxqr4=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Comments","_s","commentData","setCommentData","fetch","method","headers","Authorization","localStorage","getItem","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","id","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/blog-comment.js"],"sourcesContent":["// import { useState, useEffect } from 'react';\n\n// export default function Comments({ authToken, blogId, commentId }) {\n//   const [commentData, setCommentData] = useState(null);\n//   const [newComment, setNewComment] = useState('');\n\n//   useEffect(() => {\n//     fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n//       method: 'GET',\n//       headers: {\n//         Authorization: `Token ${authToken}`,\n//       },\n//     })\n//       .then((response) => response.json())\n//       .then((data) => setCommentData(data))\n//       .catch((error) => console.error(error));\n//   }, [authToken, blogId, commentId]);\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n//       method: 'PUT',\n//       headers: {\n//         Authorization: `Token ${authToken}`,\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ comment: newComment }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => setCommentData(data))\n//       .catch((error) => console.error(error));\n//   };\n\n//   if (!commentData) {\n//     return <p>Loading...</p>;\n//   }\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <textarea\n//         value={newComment}\n//         onChange={(event) => setNewComment(event.target.value)}\n//       />\n//       <button type=\"submit\">Save</button>\n//     </form>\n//   );\n// }\n\nimport { useState, useEffect } from 'react';\n\nexport default function Comments() {\n  const [commentData, setCommentData] = useState(null);\n\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/blog/1/comments/`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          setCommentData(data);\n        })\n        .catch(error => console.error(error));\n      \n  }, []);\n\n  if (!commentData) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n            {commentData.map(comment => (\n        <div key={comment.id}>\n          <p>{comment.comment}: {comment.id}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAE,4CAA2C,EAAE;MAChDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE,EAAC;QAC9D,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBV,cAAc,CAACU,IAAI,CAAC;IACtB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;EAE3C,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACf,WAAW,EAAE;IAChB,oBAAOH,OAAA;MAAAmB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAC1B;EAEA,oBACEvB,OAAA;IAAAmB,QAAA,EACShB,WAAW,CAACqB,GAAG,CAACC,OAAO,iBAC5BzB,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,GAAIM,OAAO,CAACA,OAAO,EAAC,IAAE,EAACA,OAAO,CAACC,EAAE;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK,GAD9BE,OAAO,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACrB,EAAA,CAjCuBD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}