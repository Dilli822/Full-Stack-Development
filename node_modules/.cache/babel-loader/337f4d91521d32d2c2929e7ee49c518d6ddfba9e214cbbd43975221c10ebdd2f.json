{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  const [countLikes, setCountLikes] = useState(0);\n  const [likedBy, setLikedBy] = useState(0);\n  const [authorId, setAuthorId] = useState(null);\n  console.log(authorId);\n  console.log(likedBy);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map(blog => ({\n          ...blog,\n          liked: false\n        }));\n        setBlogs(blogsWithLiked);\n        setCountLikes(blogsWithLiked[0].likes);\n        setLikedBy(blogsWithLiked.liked_by);\n        setAuthorId(blogsWithLiked.author);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n  const handleLikeClick = blogId => {\n    const index = blogs.findIndex(blog => blog.id === blogId);\n    const blogToUpdate = {\n      ...blogs[index]\n    };\n    if (blogToUpdate.liked) {\n      // If the blog post is already liked, decrease the like count by 1\n      blogToUpdate.likes--;\n      setCountLikes(countLikes - 1);\n    } else {\n      // If the blog post is not liked, increase the like count by 1\n      blogToUpdate.likes++;\n      setCountLikes(countLikes + 1);\n    }\n\n    // Toggle the liked state for the blog post\n    blogToUpdate.liked = !blogToUpdate.liked;\n\n    // Update the state with the new liked state and like count\n    const newBlogs = [...blogs];\n    newBlogs[index] = blogToUpdate;\n    setBlogs(newBlogs);\n\n    // Update the API with the new liked state and like count\n    fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        liked: blogToUpdate.liked,\n        likes: blogToUpdate.likes\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to update like state.');\n      }\n      return response.json();\n    }).then(data => console.log(data)).catch(error => {\n      console.error(error);\n      setError(\"Failed to update like state.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: blog.likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => handleLikeClick(blog.id),\n        children: blog.liked ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"Uww/hXRTpahCX/g0/D7Hc9oZIWY=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","ShareIcon","jsxDEV","_jsxDEV","Likes","_s","blogs","setBlogs","error","setError","countLikes","setCountLikes","likedBy","setLikedBy","authorId","setAuthorId","console","log","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","blogsWithLiked","map","blog","liked","likes","liked_by","author","handleLikeClick","blogId","index","findIndex","id","blogToUpdate","newBlogs","method","body","JSON","stringify","then","ok","Error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","onClick","color","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\n\n\nexport default function Likes() {\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  const [countLikes, setCountLikes] = useState(0);\n  const [likedBy, setLikedBy] = useState(0);\n  const [authorId, setAuthorId] = useState(null);\n\n  console.log(authorId);\n  console.log(likedBy)\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n        setBlogs(blogsWithLiked);\n        setCountLikes(blogsWithLiked[0].likes);\n        setLikedBy(blogsWithLiked.liked_by);\n        \n        setAuthorId(blogsWithLiked.author);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n  \n  const handleLikeClick = (blogId) => {\n    const index = blogs.findIndex((blog) => blog.id === blogId);\n    const blogToUpdate = { ...blogs[index] };\n  \n    if (blogToUpdate.liked) {\n      // If the blog post is already liked, decrease the like count by 1\n      blogToUpdate.likes--;\n      setCountLikes(countLikes - 1);\n    } else {\n      // If the blog post is not liked, increase the like count by 1\n      blogToUpdate.likes++;\n      setCountLikes(countLikes + 1);\n    }\n  \n    // Toggle the liked state for the blog post\n    blogToUpdate.liked = !blogToUpdate.liked;\n  \n    // Update the state with the new liked state and like count\n    const newBlogs = [...blogs];\n    newBlogs[index] = blogToUpdate;\n    setBlogs(newBlogs);\n  \n    // Update the API with the new liked state and like count\n    fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n    \n          liked: blogToUpdate.liked,\n          likes: blogToUpdate.likes,\n    \n\n      }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to update like state.');\n        }\n        return response.json();\n      })\n      .then((data) => console.log(data))\n      .catch((error) => {\n        console.error(error);\n        setError(\"Failed to update like state.\");\n      });\n  };\n  \n  return (\n    <div>\n      {error && <p>{error}</p>}\n      {blogs.map((blog) => (\n        <div key={blog.id}>\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n          <span>{blog.likes}</span>\n          <IconButton onClick={() => handleLikeClick(blog.id)}>\n            {blog.liked ? <FavoriteIcon color=\"error\" /> : <FavoriteIcon />}\n          </IconButton>\n        \n          <IconButton>\n            <ShareIcon />\n          </IconButton>\n        </div>\n      ))}\n\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}