{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import { IconButton } from \"@mui/material\";\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n// import ShareIcon from '@mui/icons-material/Share';\n// import CommentIcon from \"@mui/icons-material/Comment\";\n// import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n// import Popover from '@mui/material/Popover';\n// import Typography from '@mui/material/Typography';\n// import Button from '@mui/material/Button';\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [likes, setLikes] = useState([]);\n//   const [liked, setLiked] = useState([]);\n//   const [comments, setComments] = useState([]);\n\n//   useEffect(() => {\n//     const fetchLikes = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/likes/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n//         const blogLikes = data.map((blog) => {\n//           return {\n//             id: blog.id,\n//             likes: blog.likes,\n//             liked_state: blog.liked_state,\n//             title: blog.title,\n//             image: blog.image,\n//             content: blog.content,\n//             authorName: blog.authorName,\n//             created_at: blog.created_at,\n//             updated_at: blog.updated_at,\n\n//           };\n//         });\n\n//         setBlogs(blogLikes);\n//         setLikes(blogLikes.map((blog) => blog.likes));\n//         setLiked(blogLikes.map((blog) => blog.liked_state));\n//         console.log(blogLikes);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchLikes();\n//   }, []);\n\n//   const handleLike = async (blogId, currentLikedState, index) => {\n//     try {\n//       const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//         },\n//         body: JSON.stringify({ liked: !currentLikedState }),\n//       });\n\n//       if (response.ok) {\n//         // update liked state for the current blog\n//         const updatedBlogLikes = [...blogs];\n//         updatedBlogLikes[index].liked_state = !currentLikedState;\n//         if (currentLikedState) {\n//           updatedBlogLikes[index].likes--;\n//         } else {\n//           updatedBlogLikes[index].likes++;\n//         }\n//         setBlogs(updatedBlogLikes);\n\n//         // update total likes count\n//         const updatedLikes = [...likes];\n//         if (currentLikedState) {\n//           updatedLikes[index]--;\n//         } else {\n//           updatedLikes[index]++;\n//         }\n//         setLikes(updatedLikes);\n\n//         // update liked state\n//         const updatedLiked = [...liked];\n//         updatedLiked[index] = !currentLikedState;\n//         setLiked(updatedLiked);\n//       } else {\n//         console.error(\"Error updating like state\");\n//       }\n//     } catch (error) {\n//       console.error(error);\n//     }\n\n//   };\n\n//   return (\n//     <div>\n//     {blogs.map((blog, index) => (\n//     <div key={blog.id}>\n\n//     <h2>Title: {blog.title}</h2>\n//     <h3>Blog Id: {blog.id}</h3>\n\n//           <img src={`http://localhost:8000${blog.image}`} style={{ width: \"450px\", maxWidth: \"100%\" }} />\n//           <div style={{ height: \"\", overflow: \"hidden\"}}> \n//           <p>content: {blog.content}</p>\n//           <p>Author: {blog.authorName}</p>\n//           <p>Published Date: {blog.created_at}</p>\n//           <p>Updated Date: {blog.updated_at}</p>\n\n//           <br></br>\n//           </div>\n//           <Link to={`/blog/${blog.id}`}>\n//   <div key={blog.id}>\n//     {/* ... */}\n// View Detail.....\n//   </div>\n\n// </Link>\n// <p>{likes[index]} Likes</p>\n//           <IconButton onClick={() => handleLike(blog.id, blog.liked_state, index)}>\n//             {liked[index] ? <FavoriteIcon color=\"error\" style={{ width:\"30px\",height:\"30px\"}}/> : <FavoriteIcon color=\"black\"  style={{ width:\"30px\",height:\"30px\"}}/>}\n//           </IconButton>\n\n//         </div>\n//       ))}\n//     </div>\n//     );\n//     }\n\n// export default Likes;\n\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport CommentIcon from \"@mui/icons-material/Comment\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Likes() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [liked, setLiked] = useState([]);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const fetchLikes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/likes/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n        const blogLikes = data.map(blog => {\n          return {\n            id: blog.id,\n            likes: blog.likes,\n            liked_state: blog.liked_state,\n            title: blog.title,\n            image: blog.image,\n            content: blog.content,\n            authorName: blog.authorName,\n            created_at: blog.created_at,\n            updated_at: blog.updated_at\n          };\n        });\n        setBlogs(blogLikes);\n        setLikes(blogLikes.map(blog => blog.likes));\n        setLiked(blogLikes.map(blog => blog.liked_state));\n        console.log(blogLikes);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchLikes();\n  }, []);\n  const handleLike = async (blogId, currentLikedState, index) => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        },\n        body: JSON.stringify({\n          liked: !currentLikedState\n        })\n      });\n      if (response.ok) {\n        // update liked state for the current blog\n        const updatedBlogLikes = [...blogs];\n        updatedBlogLikes[index].liked_state = !currentLikedState;\n        if (currentLikedState) {\n          updatedBlogLikes[index].likes--;\n        } else {\n          updatedBlogLikes[index].likes++;\n        }\n        setBlogs(updatedBlogLikes);\n\n        // update total likes count\n        const updatedLikes = [...likes];\n        if (currentLikedState) {\n          updatedLikes[index]--;\n        } else {\n          updatedLikes[index]++;\n        }\n        setLikes(updatedLikes);\n\n        // update liked state\n        const updatedLiked = [...liked];\n        updatedLiked[index] = !currentLikedState;\n        setLiked(updatedLiked);\n      } else {\n        console.error(\"Error updating like state\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: blogs.map((blog, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Title: \", blog.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Blog Id: \", blog.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8000${blog.image}`,\n        style: {\n          width: \"450px\",\n          maxWidth: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"\",\n          overflow: \"hidden\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"content: \", blog.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", blog.authorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Published Date: \", blog.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Updated Date: \", blog.updated_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/blog/${blog.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"View Detail.....\"\n        }, blog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [likes[index], \" Likes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => handleLike(blog.id, blog.liked_state, index),\n        children: liked[index] ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          color: \"error\",\n          style: {\n            width: \"30px\",\n            height: \"30px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          color: \"black\",\n          style: {\n            width: \"30px\",\n            height: \"30px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 99\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-describedby\": `popover-${index}`,\n        onClick: event => {\n          setAnchorEl(event.currentTarget);\n          setShareUrl(`${window.location.origin}/blog/${blog.id}`);\n        },\n        children: /*#__PURE__*/_jsxDEV(ShareIcon, {\n          color: \"action\",\n          style: {\n            width: \"30px\",\n            height: \"30px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        open: Boolean(anchorEl),\n        anchorEl: anchorEl,\n        onClose: () => {\n          setAnchorEl(null);\n          setCopied(false);\n        },\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        },\n        transformOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        children: [copiedStates[index] && /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            p: 2\n          },\n          children: \"Link copied to clipboard!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            p: 2\n          },\n          children: shareUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: copiedStates[index],\n          onClick: () => {\n            copyToClipboard(shareUrl, index);\n          },\n          children: copiedStates[index] ? \"Copied\" : \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => setAnchorEl(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 1\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"etboIC3t1GkWhfZZfdonL1MIFE8=\");\n_c = Likes;\n;\nexport default Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","ShareIcon","CommentIcon","BrowserRouter","Router","Switch","Route","Link","Popover","Typography","Button","jsxDEV","_jsxDEV","Likes","_s","blogs","setBlogs","likes","setLikes","liked","setLiked","comments","setComments","fetchLikes","response","fetch","headers","Authorization","localStorage","getItem","data","json","blogLikes","map","blog","id","liked_state","title","image","content","authorName","created_at","updated_at","console","log","error","handleLike","blogId","currentLikedState","index","method","body","JSON","stringify","ok","updatedBlogLikes","updatedLikes","updatedLiked","children","fileName","_jsxFileName","lineNumber","columnNumber","src","style","width","maxWidth","height","overflow","to","onClick","color","event","setAnchorEl","currentTarget","setShareUrl","window","location","origin","open","Boolean","anchorEl","onClose","setCopied","anchorOrigin","vertical","horizontal","transformOrigin","copiedStates","sx","p","shareUrl","variant","disabled","copyToClipboard","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\n// import { IconButton } from \"@mui/material\";\n// import FavoriteIcon from '@mui/icons-material/Favorite';\n// import ShareIcon from '@mui/icons-material/Share';\n// import CommentIcon from \"@mui/icons-material/Comment\";\n// import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n// import Popover from '@mui/material/Popover';\n// import Typography from '@mui/material/Typography';\n// import Button from '@mui/material/Button';\n\n// function Likes() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [likes, setLikes] = useState([]);\n//   const [liked, setLiked] = useState([]);\n//   const [comments, setComments] = useState([]);\n\n//   useEffect(() => {\n//     const fetchLikes = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8000/api/blog/likes/\", {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//           },\n//         });\n\n//         const data = await response.json();\n//         const blogLikes = data.map((blog) => {\n//           return {\n//             id: blog.id,\n//             likes: blog.likes,\n//             liked_state: blog.liked_state,\n//             title: blog.title,\n//             image: blog.image,\n//             content: blog.content,\n//             authorName: blog.authorName,\n//             created_at: blog.created_at,\n//             updated_at: blog.updated_at,\n     \n//           };\n//         });\n\n//         setBlogs(blogLikes);\n//         setLikes(blogLikes.map((blog) => blog.likes));\n//         setLiked(blogLikes.map((blog) => blog.liked_state));\n//         console.log(blogLikes);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     fetchLikes();\n//   }, []);\n\n//   const handleLike = async (blogId, currentLikedState, index) => {\n//     try {\n//       const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n//         },\n//         body: JSON.stringify({ liked: !currentLikedState }),\n//       });\n\n//       if (response.ok) {\n//         // update liked state for the current blog\n//         const updatedBlogLikes = [...blogs];\n//         updatedBlogLikes[index].liked_state = !currentLikedState;\n//         if (currentLikedState) {\n//           updatedBlogLikes[index].likes--;\n//         } else {\n//           updatedBlogLikes[index].likes++;\n//         }\n//         setBlogs(updatedBlogLikes);\n\n//         // update total likes count\n//         const updatedLikes = [...likes];\n//         if (currentLikedState) {\n//           updatedLikes[index]--;\n//         } else {\n//           updatedLikes[index]++;\n//         }\n//         setLikes(updatedLikes);\n\n//         // update liked state\n//         const updatedLiked = [...liked];\n//         updatedLiked[index] = !currentLikedState;\n//         setLiked(updatedLiked);\n//       } else {\n//         console.error(\"Error updating like state\");\n//       }\n//     } catch (error) {\n//       console.error(error);\n//     }\n\n  \n//   };\n\n\n      \n\n\n//   return (\n//     <div>\n//     {blogs.map((blog, index) => (\n//     <div key={blog.id}>\n     \n//     <h2>Title: {blog.title}</h2>\n//     <h3>Blog Id: {blog.id}</h3>\n  \n//           <img src={`http://localhost:8000${blog.image}`} style={{ width: \"450px\", maxWidth: \"100%\" }} />\n//           <div style={{ height: \"\", overflow: \"hidden\"}}> \n//           <p>content: {blog.content}</p>\n//           <p>Author: {blog.authorName}</p>\n//           <p>Published Date: {blog.created_at}</p>\n//           <p>Updated Date: {blog.updated_at}</p>\n        \n         \n//           <br></br>\n//           </div>\n//           <Link to={`/blog/${blog.id}`}>\n//   <div key={blog.id}>\n//     {/* ... */}\n// View Detail.....\n//   </div>\n\n// </Link>\n// <p>{likes[index]} Likes</p>\n//           <IconButton onClick={() => handleLike(blog.id, blog.liked_state, index)}>\n//             {liked[index] ? <FavoriteIcon color=\"error\" style={{ width:\"30px\",height:\"30px\"}}/> : <FavoriteIcon color=\"black\"  style={{ width:\"30px\",height:\"30px\"}}/>}\n//           </IconButton>\n  \n\n//         </div>\n//       ))}\n//     </div>\n//     );\n//     }\n\n// export default Likes;\n\n\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport CommentIcon from \"@mui/icons-material/Comment\";\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nfunction Likes() {\n  const [blogs, setBlogs] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [liked, setLiked] = useState([]);\n  const [comments, setComments] = useState([]);\n\n\n\n  useEffect(() => {\n    const fetchLikes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/likes/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        const data = await response.json();\n        const blogLikes = data.map((blog) => {\n          return {\n            id: blog.id,\n            likes: blog.likes,\n            liked_state: blog.liked_state,\n            title: blog.title,\n            image: blog.image,\n            content: blog.content,\n            authorName: blog.authorName,\n            created_at: blog.created_at,\n            updated_at: blog.updated_at,\n     \n          };\n        });\n\n        setBlogs(blogLikes);\n        setLikes(blogLikes.map((blog) => blog.likes));\n        setLiked(blogLikes.map((blog) => blog.liked_state));\n        console.log(blogLikes);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchLikes();\n  }, []);\n\n  const handleLike = async (blogId, currentLikedState, index) => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/blog/likes/update/${blogId}/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        },\n        body: JSON.stringify({ liked: !currentLikedState }),\n      });\n\n      if (response.ok) {\n        // update liked state for the current blog\n        const updatedBlogLikes = [...blogs];\n        updatedBlogLikes[index].liked_state = !currentLikedState;\n        if (currentLikedState) {\n          updatedBlogLikes[index].likes--;\n        } else {\n          updatedBlogLikes[index].likes++;\n        }\n        setBlogs(updatedBlogLikes);\n\n        // update total likes count\n        const updatedLikes = [...likes];\n        if (currentLikedState) {\n          updatedLikes[index]--;\n        } else {\n          updatedLikes[index]++;\n        }\n        setLikes(updatedLikes);\n\n        // update liked state\n        const updatedLiked = [...liked];\n        updatedLiked[index] = !currentLikedState;\n        setLiked(updatedLiked);\n      } else {\n        console.error(\"Error updating like state\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n\n  return (\n    <div>\n      {blogs.map((blog, index) => (\n        <div key={blog.id}>\n\n          <h2>Title: {blog.title}</h2>\n          <h3>Blog Id: {blog.id}</h3>\n          <img src={`http://localhost:8000${blog.image}`} style={{ width: \"450px\", maxWidth: \"100%\" }} />\n         \n          <div style={{ height: \"\", overflow: \"hidden\"}}> \n            <p>content: {blog.content}</p>\n            <p>Author: {blog.authorName}</p>\n            <p>Published Date: {blog.created_at}</p>\n            <p>Updated Date: {blog.updated_at}</p>\n            <br />\n\n            \n          </div>\n          \n          <Link to={`/blog/${blog.id}`}>\n            <div key={blog.id}>\n              {/* ... */}\n              View Detail.....\n            </div>\n          </Link>\n\n          <p>{likes[index]} Likes</p>\n\n          <IconButton onClick={() => handleLike(blog.id, blog.liked_state, index)}>\n            {liked[index] ? <FavoriteIcon color=\"error\" style={{ width:\"30px\",height:\"30px\"}}/> : <FavoriteIcon color=\"black\"  style={{ width:\"30px\",height:\"30px\"}}/>}\n          </IconButton>\n\n\n          <IconButton\n  aria-describedby={`popover-${index}`}\n  onClick={(event) => {\n    setAnchorEl(event.currentTarget);\n    setShareUrl(`${window.location.origin}/blog/${blog.id}`);\n  }}\n>\n  <ShareIcon color=\"action\" style={{ width: \"30px\", height: \"30px\" }} />\n</IconButton>\n\n<Popover\n  open={Boolean(anchorEl)}\n  anchorEl={anchorEl}\n  onClose={() => {\n    setAnchorEl(null);\n    setCopied(false); \n  }}\n  anchorOrigin={{\n    vertical: \"bottom\",\n    horizontal: \"center\",\n  }}\n  transformOrigin={{\n    vertical: \"top\",\n    horizontal: \"center\",\n  }}\n> \n  {copiedStates[index] && (\n    <Typography sx={{ p: 2 }}>Link copied to clipboard!</Typography>\n  )}\n  <Typography sx={{ p: 2 }}>{shareUrl}</Typography>\n  <Button\n    variant=\"contained\"\n    disabled={copiedStates[index]}\n    onClick={() => {\n      copyToClipboard(shareUrl, index);\n    }}\n  >\n    {copiedStates[index] ? \"Copied\" : \"Copy\"}\n  </Button>\n  <Button variant=\"contained\" onClick={() => setAnchorEl(null)}>\n    Cancel\n  </Button>\n</Popover>\n        </div>\n      ))}  \n\n    </div>\n  );\n};\nexport default Likes;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}