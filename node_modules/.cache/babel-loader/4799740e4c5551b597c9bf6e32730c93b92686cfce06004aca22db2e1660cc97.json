{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [liked, setLiked] = useState([]);\n  const [likes, setLikes] = useState(0);\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  const [authorId, setAuthorId] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  const [likedBy, setLikedBy] = useState(0);\n  const [newAddLikes, setNewAddLikes] = useState(0);\n  const [newSubLikes, setNewSubLikes] = useState(0);\n  const [likedByAuthor, setLikedByAuthor] = useState(false);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map(blog => ({\n          ...blog,\n          liked: false\n        }));\n        setBlogs(blogsWithLiked);\n        setLikedBy(blogsWithLiked.liked_by);\n        setCountLikes(blogsWithLiked.likes);\n        setAuthorId(blogsWithLiked.author);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n  // const handleLikeClick = async (blogId) => {\n  //   const blog = blogs.find((blog) => blog.id === blogId);\n  //   const likedByCurrentUser = blog.liked_by.includes(authorId);\n  //   const newLikedBy = likedByCurrentUser\n  //     ? blog.liked_by.filter((id) => id !== authorId)\n  //     : [...blog.liked_by, authorId];\n\n  //   const response = await fetch(\n  //     `http://localhost:8000/api/blog/${blogId}/`,\n  //     {\n  //       method: \"PUT\",\n  //       headers: {\n  //         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({ liked_by: newLikedBy }),\n  //     }\n  //   );\n  //   const data = await response.json();\n\n  //   const updatedBlogs = blogs.map((blog) => {\n  //     if (blog.id === blogId) {\n  //       return {\n  //         ...blog,\n  //         liked: !likedByCurrentUser,\n  //         liked_by: newLikedBy,\n  //         likes: likedByCurrentUser\n  //           ? blog.likes - 1\n  //           : blog.likes + 1,\n  //       };\n  //     } else {\n  //       return blog;\n  //     }\n  //   });\n\n  //   setBlogs(updatedBlogs);\n  // };\n  const handleLikeClick = async blogId => {\n    const blog = blogs.find(blog => blog.id === blogId);\n    const likedByCurrentUser = blog.liked_by.includes(authorId);\n    const newLikedBy = likedByCurrentUser ? blog.liked_by.filter(id => id !== authorId) : [...blog.liked_by, authorId];\n    const response = await fetch(`http://localhost:8000/api/blog/likes/update/1//${blogId}/`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        liked_by: newLikedBy,\n        likes: blog.likes + (likedByCurrentUser ? -1 : 1)\n      })\n    });\n    const data = await response.json();\n    const updatedBlogs = blogs.map(blog => {\n      if (blog.id === blogId) {\n        return {\n          ...blog,\n          liked: !likedByCurrentUser,\n          liked_by: newLikedBy,\n          likes: blog.likes + (likedByCurrentUser ? -1 : 1)\n        };\n      } else {\n        return blog;\n      }\n    });\n    setBlogs(updatedBlogs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogs\",\n      children: blogs && blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Likes: \", blog.likes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Liked by: \", blog.liked_by.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", blog.author.first_name, \" \", blog.author.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", blog.liked_by]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Likes: \", blog.likes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"liked by: \", blog.liked_by, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => handleLikeClick(blog.id),\n          children: [/*#__PURE__*/_jsxDEV(FavoriteIcon, {\n            color: blog.liked ? \"error\" : \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: blog.likes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"yOSPb1CC779JvzNE+k5D5l4qX1o=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useState","useEffect","IconButton","FavoriteIcon","jsxDEV","_jsxDEV","Likes","_s","liked","setLiked","likes","setLikes","blogs","setBlogs","error","setError","authorId","setAuthorId","countLikes","setCountLikes","likedBy","setLikedBy","newAddLikes","setNewAddLikes","newSubLikes","setNewSubLikes","likedByAuthor","setLikedByAuthor","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","blogsWithLiked","map","blog","liked_by","author","console","handleLikeClick","blogId","find","id","likedByCurrentUser","includes","newLikedBy","filter","method","body","JSON","stringify","updatedBlogs","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","content","join","first_name","last_name","onClick","color","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\nexport default function Likes() {\n  const [liked, setLiked] = useState([]);\n  const [likes, setLikes] = useState(0);\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  const [authorId,setAuthorId] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  const [likedBy,setLikedBy] = useState(0);\n  const [newAddLikes,setNewAddLikes] = useState(0);\n  const [newSubLikes,setNewSubLikes] = useState(0);\n  const [likedByAuthor, setLikedByAuthor] = useState(false);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          },\n        });\n\n        const data = await response.json();\n\n        // Initialize liked state for each blog post\n        const blogsWithLiked = data.map((blog) => ({ ...blog, liked: false }));\n\n        setBlogs(blogsWithLiked);\n        setLikedBy(blogsWithLiked.liked_by);\n        setCountLikes(blogsWithLiked.likes);\n        setAuthorId(blogsWithLiked.author);\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch blog posts.\");\n      }\n    };\n\n    fetchBlogs();\n  }, []);\n  // const handleLikeClick = async (blogId) => {\n  //   const blog = blogs.find((blog) => blog.id === blogId);\n  //   const likedByCurrentUser = blog.liked_by.includes(authorId);\n  //   const newLikedBy = likedByCurrentUser\n  //     ? blog.liked_by.filter((id) => id !== authorId)\n  //     : [...blog.liked_by, authorId];\n  \n  //   const response = await fetch(\n  //     `http://localhost:8000/api/blog/${blogId}/`,\n  //     {\n  //       method: \"PUT\",\n  //       headers: {\n  //         Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({ liked_by: newLikedBy }),\n  //     }\n  //   );\n  //   const data = await response.json();\n  \n  //   const updatedBlogs = blogs.map((blog) => {\n  //     if (blog.id === blogId) {\n  //       return {\n  //         ...blog,\n  //         liked: !likedByCurrentUser,\n  //         liked_by: newLikedBy,\n  //         likes: likedByCurrentUser\n  //           ? blog.likes - 1\n  //           : blog.likes + 1,\n  //       };\n  //     } else {\n  //       return blog;\n  //     }\n  //   });\n  \n  //   setBlogs(updatedBlogs);\n  // };\n  const handleLikeClick = async (blogId) => {\n    const blog = blogs.find((blog) => blog.id === blogId);\n    const likedByCurrentUser = blog.liked_by.includes(authorId);\n    const newLikedBy = likedByCurrentUser\n      ? blog.liked_by.filter((id) => id !== authorId)\n      : [...blog.liked_by, authorId];\n  \n    const response = await fetch(\n      `http://localhost:8000/api/blog/likes/update/1//${blogId}/`,\n      {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ liked_by: newLikedBy, likes: blog.likes + (likedByCurrentUser ? -1 : 1) }),\n      }\n    );\n    const data = await response.json();\n  \n    const updatedBlogs = blogs.map((blog) => {\n      if (blog.id === blogId) {\n        return {\n          ...blog,\n          liked: !likedByCurrentUser,\n          liked_by: newLikedBy,\n          likes: blog.likes + (likedByCurrentUser ? -1 : 1),\n        };\n      } else {\n        return blog;\n      }\n    });\n  \n    setBlogs(updatedBlogs);\n  };\n  \n  return (\n    <div>\n\n<div className=\"blogs\">\n  {blogs &&\n    blogs.map((blog) => (\n      <div key={blog.id}>\n        <h3>{blog.title}</h3>\n        <p>{blog.content}</p>\n        <p>Likes: {blog.likes}</p>\n        <p>Liked by: {blog.liked_by.join(\", \")}</p>\n        <p>\n          Author: {blog.author.first_name} {blog.author.last_name}\n        </p>\n        <p> {blog.liked_by}</p>\n        <p>Likes: {blog.likes}</p>\n        <p>liked by: {blog.liked_by} </p>\n        <IconButton onClick={() => handleLikeClick(blog.id)}>\n  <FavoriteIcon color={blog.liked ? \"error\" : \"inherit\"} />\n  <span>{blog.likes}</span>\n</IconButton>\n\n\n      </div>\n    ))}\n</div>\n\n\n\n    </div>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}