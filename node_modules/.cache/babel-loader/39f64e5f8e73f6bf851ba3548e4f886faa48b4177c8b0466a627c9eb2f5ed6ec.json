{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Likes() {\n  _s();\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  const [blogs, setBlogs] = useState();\n  const [error, setError] = useState();\n  const fetchBlogs = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      });\n      const data = await response.json();\n\n      // Initialize liked state for each blog post\n      const blogsWithLiked = data.map(blog => ({\n        ...blog,\n        liked: false,\n        likes: blog.likes.length,\n        // store the length of likes array as likes\n        liked_by: blog.likes.map(like => like.author.id) // store the author IDs who liked the post\n      }));\n\n      setBlogs(blogsWithLiked);\n    } catch (error) {\n      console.error(error);\n      setError(\"Failed to fetch blog posts.\");\n    }\n  };\n  console.log(likes);\n  const handleLikeClick = () => {\n    if (liked) {\n      // User has already liked the post, so remove like\n      setLiked(false);\n      const newLikes = countLikes - 1;\n      setCountLikes(newLikes);\n      setLikes(newLikes);\n      console.log(newLikes);\n    } else {\n      // User has not liked the post, so add like\n      setLiked(true);\n      const newLikes = countLikes + 1;\n      setCountLikes(newLikes);\n      setLikes(newLikes);\n      console.log(newLikes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLikeClick,\n      children: [/*#__PURE__*/_jsxDEV(FavoriteIcon, {\n        color: liked ? \"error\" : \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Likes, \"6zlZGqBlfd38/wM3inKqLG9okvU=\");\n_c = Likes;\nvar _c;\n$RefreshReg$(_c, \"Likes\");","map":{"version":3,"names":["useEffect","useState","IconButton","FavoriteIcon","jsxDEV","_jsxDEV","Likes","_s","liked","setLiked","likes","setLikes","countLikes","setCountLikes","blogs","setBlogs","error","setError","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","data","json","blogsWithLiked","map","blog","length","liked_by","like","author","id","console","log","handleLikeClick","newLikes","children","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/likes/blog_Likes.js"],"sourcesContent":["import { useEffect,useState } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\nexport default function Likes() {\n  const [liked, setLiked] = useState(false);\n  const [likes, setLikes] = useState(0);\n  const [countLikes, setCountLikes] = useState(0);\n  const [blogs, setBlogs] = useState();\n  const [error, setError] = useState();\n\n\n\n  const fetchBlogs = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/blog/list/\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        },\n      });\n  \n      const data = await response.json();\n  \n      // Initialize liked state for each blog post\n      const blogsWithLiked = data.map((blog) => ({\n        ...blog,\n        liked: false,\n        likes: blog.likes.length, // store the length of likes array as likes\n        liked_by: blog.likes.map((like) => like.author.id), // store the author IDs who liked the post\n      }));\n  \n      setBlogs(blogsWithLiked);\n    } catch (error) {\n      console.error(error);\n      setError(\"Failed to fetch blog posts.\");\n    }\n  };\n  console.log(likes);  \n  const handleLikeClick = () => {\n    if (liked) {\n      // User has already liked the post, so remove like\n      setLiked(false);\n      const newLikes = countLikes - 1;\n      setCountLikes(newLikes);\n      setLikes(newLikes)\n      console.log(newLikes)\n    } else {\n      // User has not liked the post, so add like\n      setLiked(true);\n      const newLikes = countLikes + 1;\n      setCountLikes(newLikes);\n      setLikes(newLikes)\n      console.log(newLikes)\n    }\n  };\n  \n  return (\n    <div>\n\n      \n      <IconButton onClick={handleLikeClick}>\n        <FavoriteIcon color={liked ? \"error\" : \"inherit\"} />\n        <span>{likes}</span>\n      </IconButton>\n    </div>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}