{"ast":null,"code":"var _jsxFileName = \"/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/blog-comment.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments(_ref) {\n  _s();\n  let {\n    authToken,\n    blogId,\n    commentId\n  } = _ref;\n  const [commentData, setCommentData] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Token ${authToken}`\n      }\n    }).then(response => response.json()).then(data => setCommentData(data)).catch(error => console.error(error));\n  }, [authToken, blogId, commentId]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Token ${authToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        comment: newComment\n      })\n    }).then(response => response.json()).then(data => setCommentData(data)).catch(error => console.error(error));\n  };\n  if (!commentData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newComment,\n      onChange: event => setNewComment(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"epKZuAtfVebijRHh13771KajSgA=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Comments","_ref","_s","authToken","blogId","commentId","commentData","setCommentData","newComment","setNewComment","fetch","method","headers","Authorization","then","response","json","data","catch","error","console","handleSubmit","event","preventDefault","body","JSON","stringify","comment","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","type","_c","$RefreshReg$"],"sources":["/Users/dillirai/Downloads/Full-Stack-Development/Practice Full Stack dev /Practice/drf-blog-api-master/django/frontend/src/components/comments/blog-comment.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function Comments({ authToken, blogId, commentId }) {\n  const [commentData, setCommentData] = useState(null);\n  const [newComment, setNewComment] = useState('');\n\n  useEffect(() => {\n    fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Token ${authToken}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => setCommentData(data))\n      .catch((error) => console.error(error));\n  }, [authToken, blogId, commentId]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(`http://example.com/api/blog/${blogId}/comments/${commentId}/edit/`, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Token ${authToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ comment: newComment }),\n    })\n      .then((response) => response.json())\n      .then((data) => setCommentData(data))\n      .catch((error) => console.error(error));\n  };\n\n  if (!commentData) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <textarea\n        value={newComment}\n        onChange={(event) => setNewComment(event.target.value)}\n      />\n      <button type=\"submit\">Save</button>\n    </form>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,SAAS;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EAC/D,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACda,KAAK,CAAE,+BAA8BN,MAAO,aAAYC,SAAU,QAAO,EAAE;MACzEM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,SAAQV,SAAU;MACpC;IACF,CAAC,CAAC,CACCW,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKV,cAAc,CAACU,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,CAAChB,SAAS,EAAEC,MAAM,EAAEC,SAAS,CAAC,CAAC;EAElC,MAAMgB,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IAEtBb,KAAK,CAAE,+BAA8BN,MAAO,aAAYC,SAAU,QAAO,EAAE;MACzEM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,SAAQV,SAAU,EAAC;QACnC,cAAc,EAAE;MAClB,CAAC;MACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEnB;MAAW,CAAC;IAC9C,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKV,cAAc,CAACU,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,IAAI,CAACb,WAAW,EAAE;IAChB,oBAAOP,OAAA;MAAA6B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAC1B;EAEA,oBACEjC,OAAA;IAAMkC,QAAQ,EAAEZ,YAAa;IAAAO,QAAA,gBAC3B7B,OAAA;MACEmC,KAAK,EAAE1B,UAAW;MAClB2B,QAAQ,EAAGb,KAAK,IAAKb,aAAa,CAACa,KAAK,CAACc,MAAM,CAACF,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvD,eACFjC,OAAA;MAAQsC,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9B;AAEX;AAAC9B,EAAA,CA7CuBF,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}